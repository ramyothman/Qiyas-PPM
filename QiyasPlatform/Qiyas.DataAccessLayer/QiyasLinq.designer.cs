#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Qiyas.DataAccessLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Qiyas")]
	public partial class QiyasLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBusinessEntity(BusinessEntity instance);
    partial void UpdateBusinessEntity(BusinessEntity instance);
    partial void DeleteBusinessEntity(BusinessEntity instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertUserClaim(UserClaim instance);
    partial void UpdateUserClaim(UserClaim instance);
    partial void DeleteUserClaim(UserClaim instance);
    partial void InsertUserLoginProvider(UserLoginProvider instance);
    partial void UpdateUserLoginProvider(UserLoginProvider instance);
    partial void DeleteUserLoginProvider(UserLoginProvider instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertPersonRole(PersonRole instance);
    partial void UpdatePersonRole(PersonRole instance);
    partial void DeletePersonRole(PersonRole instance);
    partial void InsertCredential(Credential instance);
    partial void UpdateCredential(Credential instance);
    partial void DeleteCredential(Credential instance);
    partial void InsertStudentGender(StudentGender instance);
    partial void UpdateStudentGender(StudentGender instance);
    partial void DeleteStudentGender(StudentGender instance);
    partial void InsertPackagingType(PackagingType instance);
    partial void UpdatePackagingType(PackagingType instance);
    partial void DeletePackagingType(PackagingType instance);
    partial void InsertOperationStatus(OperationStatus instance);
    partial void UpdateOperationStatus(OperationStatus instance);
    partial void DeleteOperationStatus(OperationStatus instance);
    partial void InsertExamType(ExamType instance);
    partial void UpdateExamType(ExamType instance);
    partial void DeleteExamType(ExamType instance);
    partial void InsertExamSpeciality(ExamSpeciality instance);
    partial void UpdateExamSpeciality(ExamSpeciality instance);
    partial void DeleteExamSpeciality(ExamSpeciality instance);
    partial void InsertExamPeriod(ExamPeriod instance);
    partial void UpdateExamPeriod(ExamPeriod instance);
    partial void DeleteExamPeriod(ExamPeriod instance);
    partial void InsertCountryRegion(CountryRegion instance);
    partial void UpdateCountryRegion(CountryRegion instance);
    partial void DeleteCountryRegion(CountryRegion instance);
    partial void InsertStateProvince(StateProvince instance);
    partial void UpdateStateProvince(StateProvince instance);
    partial void DeleteStateProvince(StateProvince instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertExamCenter(ExamCenter instance);
    partial void UpdateExamCenter(ExamCenter instance);
    partial void DeleteExamCenter(ExamCenter instance);
    partial void InsertViewExamCenter(ViewExamCenter instance);
    partial void UpdateViewExamCenter(ViewExamCenter instance);
    partial void DeleteViewExamCenter(ViewExamCenter instance);
    partial void InsertExamModel(ExamModel instance);
    partial void UpdateExamModel(ExamModel instance);
    partial void DeleteExamModel(ExamModel instance);
    partial void InsertExamView(ExamView instance);
    partial void UpdateExamView(ExamView instance);
    partial void DeleteExamView(ExamView instance);
    partial void InsertPackageWeight(PackageWeight instance);
    partial void UpdatePackageWeight(PackageWeight instance);
    partial void DeletePackageWeight(PackageWeight instance);
    partial void InsertExam(Exam instance);
    partial void UpdateExam(Exam instance);
    partial void DeleteExam(Exam instance);
    partial void InsertExamModelItem(ExamModelItem instance);
    partial void UpdateExamModelItem(ExamModelItem instance);
    partial void DeleteExamModelItem(ExamModelItem instance);
    partial void InsertPackingCalculationType(PackingCalculationType instance);
    partial void UpdatePackingCalculationType(PackingCalculationType instance);
    partial void DeletePackingCalculationType(PackingCalculationType instance);
    partial void InsertBookPackingOperation(BookPackingOperation instance);
    partial void UpdateBookPackingOperation(BookPackingOperation instance);
    partial void DeleteBookPackingOperation(BookPackingOperation instance);
    partial void InsertBookPackItemModel(BookPackItemModel instance);
    partial void UpdateBookPackItemModel(BookPackItemModel instance);
    partial void DeleteBookPackItemModel(BookPackItemModel instance);
    partial void InsertBookPackItemOperation(BookPackItemOperation instance);
    partial void UpdateBookPackItemOperation(BookPackItemOperation instance);
    partial void DeleteBookPackItemOperation(BookPackItemOperation instance);
    partial void InsertContainerRequest(ContainerRequest instance);
    partial void UpdateContainerRequest(ContainerRequest instance);
    partial void DeleteContainerRequest(ContainerRequest instance);
    partial void InsertContainerRequestPack(ContainerRequestPack instance);
    partial void UpdateContainerRequestPack(ContainerRequestPack instance);
    partial void DeleteContainerRequestPack(ContainerRequestPack instance);
    partial void InsertExamCenterRequiredExam(ExamCenterRequiredExam instance);
    partial void UpdateExamCenterRequiredExam(ExamCenterRequiredExam instance);
    partial void DeleteExamCenterRequiredExam(ExamCenterRequiredExam instance);
    partial void InsertExamRequirementItem(ExamRequirementItem instance);
    partial void UpdateExamRequirementItem(ExamRequirementItem instance);
    partial void DeleteExamRequirementItem(ExamRequirementItem instance);
    partial void InsertPackingCalculationType1(PackingCalculationType1 instance);
    partial void UpdatePackingCalculationType1(PackingCalculationType1 instance);
    partial void DeletePackingCalculationType1(PackingCalculationType1 instance);
    partial void InsertRequestPreparationStatus(RequestPreparationStatus instance);
    partial void UpdateRequestPreparationStatus(RequestPreparationStatus instance);
    partial void DeleteRequestPreparationStatus(RequestPreparationStatus instance);
    partial void InsertShippingBag(ShippingBag instance);
    partial void UpdateShippingBag(ShippingBag instance);
    partial void DeleteShippingBag(ShippingBag instance);
    partial void InsertShippingBagItem(ShippingBagItem instance);
    partial void UpdateShippingBagItem(ShippingBagItem instance);
    partial void DeleteShippingBagItem(ShippingBagItem instance);
    partial void InsertBookPrintingOperation(BookPrintingOperation instance);
    partial void UpdateBookPrintingOperation(BookPrintingOperation instance);
    partial void DeleteBookPrintingOperation(BookPrintingOperation instance);
    partial void InsertBookPackItem(BookPackItem instance);
    partial void UpdateBookPackItem(BookPackItem instance);
    partial void DeleteBookPackItem(BookPackItem instance);
    #endregion
		
		public QiyasLinqDataContext() : 
				base(global::Qiyas.DataAccessLayer.Properties.Settings.Default.QiyasConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QiyasLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QiyasLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QiyasLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QiyasLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BusinessEntity> BusinessEntities
		{
			get
			{
				return this.GetTable<BusinessEntity>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<UserClaim> UserClaims
		{
			get
			{
				return this.GetTable<UserClaim>();
			}
		}
		
		public System.Data.Linq.Table<UserLoginProvider> UserLoginProviders
		{
			get
			{
				return this.GetTable<UserLoginProvider>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<PersonRole> PersonRoles
		{
			get
			{
				return this.GetTable<PersonRole>();
			}
		}
		
		public System.Data.Linq.Table<Credential> Credentials
		{
			get
			{
				return this.GetTable<Credential>();
			}
		}
		
		public System.Data.Linq.Table<StudentGender> StudentGenders
		{
			get
			{
				return this.GetTable<StudentGender>();
			}
		}
		
		public System.Data.Linq.Table<PackagingType> PackagingTypes
		{
			get
			{
				return this.GetTable<PackagingType>();
			}
		}
		
		public System.Data.Linq.Table<OperationStatus> OperationStatus
		{
			get
			{
				return this.GetTable<OperationStatus>();
			}
		}
		
		public System.Data.Linq.Table<ExamType> ExamTypes
		{
			get
			{
				return this.GetTable<ExamType>();
			}
		}
		
		public System.Data.Linq.Table<ExamSpeciality> ExamSpecialities
		{
			get
			{
				return this.GetTable<ExamSpeciality>();
			}
		}
		
		public System.Data.Linq.Table<ExamPeriod> ExamPeriods
		{
			get
			{
				return this.GetTable<ExamPeriod>();
			}
		}
		
		public System.Data.Linq.Table<CountryRegion> CountryRegions
		{
			get
			{
				return this.GetTable<CountryRegion>();
			}
		}
		
		public System.Data.Linq.Table<StateProvince> StateProvinces
		{
			get
			{
				return this.GetTable<StateProvince>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<ExamCenter> ExamCenters
		{
			get
			{
				return this.GetTable<ExamCenter>();
			}
		}
		
		public System.Data.Linq.Table<ViewExamCenter> ViewExamCenters
		{
			get
			{
				return this.GetTable<ViewExamCenter>();
			}
		}
		
		public System.Data.Linq.Table<ExamModel> ExamModels
		{
			get
			{
				return this.GetTable<ExamModel>();
			}
		}
		
		public System.Data.Linq.Table<ExamView> ExamViews
		{
			get
			{
				return this.GetTable<ExamView>();
			}
		}
		
		public System.Data.Linq.Table<PackageWeight> PackageWeights
		{
			get
			{
				return this.GetTable<PackageWeight>();
			}
		}
		
		public System.Data.Linq.Table<Exam> Exams
		{
			get
			{
				return this.GetTable<Exam>();
			}
		}
		
		public System.Data.Linq.Table<ExamModelItem> ExamModelItems
		{
			get
			{
				return this.GetTable<ExamModelItem>();
			}
		}
		
		public System.Data.Linq.Table<PackingCalculationType> PackingCalculationTypes
		{
			get
			{
				return this.GetTable<PackingCalculationType>();
			}
		}
		
		public System.Data.Linq.Table<BookPackingOperation> BookPackingOperations
		{
			get
			{
				return this.GetTable<BookPackingOperation>();
			}
		}
		
		public System.Data.Linq.Table<BookPackItemModel> BookPackItemModels
		{
			get
			{
				return this.GetTable<BookPackItemModel>();
			}
		}
		
		public System.Data.Linq.Table<BookPackItemOperation> BookPackItemOperations
		{
			get
			{
				return this.GetTable<BookPackItemOperation>();
			}
		}
		
		public System.Data.Linq.Table<ContainerRequest> ContainerRequests
		{
			get
			{
				return this.GetTable<ContainerRequest>();
			}
		}
		
		public System.Data.Linq.Table<ContainerRequestPack> ContainerRequestPacks
		{
			get
			{
				return this.GetTable<ContainerRequestPack>();
			}
		}
		
		public System.Data.Linq.Table<ExamCenterRequiredExam> ExamCenterRequiredExams
		{
			get
			{
				return this.GetTable<ExamCenterRequiredExam>();
			}
		}
		
		public System.Data.Linq.Table<ExamRequirementItem> ExamRequirementItems
		{
			get
			{
				return this.GetTable<ExamRequirementItem>();
			}
		}
		
		public System.Data.Linq.Table<PackingCalculationType1> PackingCalculationType1s
		{
			get
			{
				return this.GetTable<PackingCalculationType1>();
			}
		}
		
		public System.Data.Linq.Table<RequestPreparationStatus> RequestPreparationStatus
		{
			get
			{
				return this.GetTable<RequestPreparationStatus>();
			}
		}
		
		public System.Data.Linq.Table<ShippingBag> ShippingBags
		{
			get
			{
				return this.GetTable<ShippingBag>();
			}
		}
		
		public System.Data.Linq.Table<ShippingBagItem> ShippingBagItems
		{
			get
			{
				return this.GetTable<ShippingBagItem>();
			}
		}
		
		public System.Data.Linq.Table<ViewBookPackItemPrint> ViewBookPackItemPrints
		{
			get
			{
				return this.GetTable<ViewBookPackItemPrint>();
			}
		}
		
		public System.Data.Linq.Table<PackageWeightView> PackageWeightViews
		{
			get
			{
				return this.GetTable<PackageWeightView>();
			}
		}
		
		public System.Data.Linq.Table<BookPrintingOperation> BookPrintingOperations
		{
			get
			{
				return this.GetTable<BookPrintingOperation>();
			}
		}
		
		public System.Data.Linq.Table<BookPackItem> BookPackItems
		{
			get
			{
				return this.GetTable<BookPackItem>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteExamModelItemByExamID")]
		public int DeleteExamModelItemByExamID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExamID", DbType="Int")] System.Nullable<int> examID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), examID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTotalPrintingPackageByPrintingID", IsComposable=true)]
		public System.Nullable<int> GetTotalPrintingPackageByPrintingID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTotalPrintingPackageA3ByPrintingID", IsComposable=true)]
		public System.Nullable<int> GetTotalPrintingPackageA3ByPrintingID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetExamModelCount", IsComposable=true)]
		public System.Nullable<int> GetExamModelCount([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExamID", DbType="Int")] System.Nullable<int> examID)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), examID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTotalPrintingPackageItemsA3ByPrintingID", IsComposable=true)]
		public System.Nullable<int> GetTotalPrintingPackageItemsA3ByPrintingID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTotalPrintingPackageItemsByPrintingID", IsComposable=true)]
		public System.Nullable<int> GetTotalPrintingPackageItemsByPrintingID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteBookPackingOperationByBookPrintingID")]
		public int DeleteBookPackingOperationByBookPrintingID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetLastPackSerialForExamID", IsComposable=true)]
		public System.Nullable<int> GetLastPackSerialForExamID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExamID", DbType="Int")] System.Nullable<int> examID)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), examID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPackedByPrintingID")]
		public ISingleResult<GetPackedByPrintingIDResult> GetPackedByPrintingID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((ISingleResult<GetPackedByPrintingIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckPackWeightComplete")]
		public int CheckPackWeightComplete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintID", DbType="Int")] System.Nullable<int> printID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), printID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateItemPacksBulk")]
		public int UpdateItemPacksBulk([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintID", DbType="Int")] System.Nullable<int> printID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusID", DbType="Int")] System.Nullable<int> statusID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), printID, statusID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetItemPackedByPackID")]
		public ISingleResult<GetItemPackedByPackIDResult> GetItemPackedByPackID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((ISingleResult<GetItemPackedByPackIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTotalPrintingPackageByItemPackID", IsComposable=true)]
		public System.Nullable<int> GetTotalPrintingPackageByItemPackID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTotalPrintingPackageA3ByItemPackID", IsComposable=true)]
		public System.Nullable<int> GetTotalPrintingPackageA3ByItemPackID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTotalPrintingPackageByPackID", IsComposable=true)]
		public System.Nullable<int> GetTotalPrintingPackageByPackID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTotalPrintingPackageItemsA3ByPackID", IsComposable=true)]
		public System.Nullable<int> GetTotalPrintingPackageItemsA3ByPackID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.BusinessEntity")]
	public partial class BusinessEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityId;
		
		private System.Guid _RowGuid;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIdChanging(int value);
    partial void OnBusinessEntityIdChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public BusinessEntity()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BusinessEntityId
		{
			get
			{
				return this._BusinessEntityId;
			}
			set
			{
				if ((this._BusinessEntityId != value))
				{
					this.OnBusinessEntityIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityId = value;
					this.SendPropertyChanged("BusinessEntityId");
					this.OnBusinessEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessEntity_Person", Storage="_Person", ThisKey="BusinessEntityId", OtherKey="BusinessEntityId", IsUnique=true, IsForeignKey=false)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.BusinessEntity = null;
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.BusinessEntity = this;
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityId;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _DisplayName;
		
		private string _Title;
		
		private System.Nullable<bool> _NameStyle;
		
		private System.Nullable<int> _EmailPromotion;
		
		private System.Guid _RowGuid;
		
		private System.DateTime _ModifiedDate;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _NationalityCode;
		
		private System.Nullable<char> _Gender;
		
		private System.Nullable<System.DateTime> _DateofBirth;
		
		private string _PersonImage;
		
		private EntitySet<UserClaim> _UserClaims;
		
		private EntitySet<UserLoginProvider> _UserLoginProviders;
		
		private EntityRef<Credential> _Credential;
		
		private EntityRef<BusinessEntity> _BusinessEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIdChanging(int value);
    partial void OnBusinessEntityIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNameStyleChanging(System.Nullable<bool> value);
    partial void OnNameStyleChanged();
    partial void OnEmailPromotionChanging(System.Nullable<int> value);
    partial void OnEmailPromotionChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnNationalityCodeChanging(string value);
    partial void OnNationalityCodeChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    partial void OnDateofBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateofBirthChanged();
    partial void OnPersonImageChanging(string value);
    partial void OnPersonImageChanged();
    #endregion
		
		public Person()
		{
			this._UserClaims = new EntitySet<UserClaim>(new Action<UserClaim>(this.attach_UserClaims), new Action<UserClaim>(this.detach_UserClaims));
			this._UserLoginProviders = new EntitySet<UserLoginProvider>(new Action<UserLoginProvider>(this.attach_UserLoginProviders), new Action<UserLoginProvider>(this.detach_UserLoginProviders));
			this._Credential = default(EntityRef<Credential>);
			this._BusinessEntity = default(EntityRef<BusinessEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BusinessEntityId
		{
			get
			{
				return this._BusinessEntityId;
			}
			set
			{
				if ((this._BusinessEntityId != value))
				{
					if (this._BusinessEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessEntityIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityId = value;
					this.SendPropertyChanged("BusinessEntityId");
					this.OnBusinessEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(50)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameStyle", DbType="Bit")]
		public System.Nullable<bool> NameStyle
		{
			get
			{
				return this._NameStyle;
			}
			set
			{
				if ((this._NameStyle != value))
				{
					this.OnNameStyleChanging(value);
					this.SendPropertyChanging();
					this._NameStyle = value;
					this.SendPropertyChanged("NameStyle");
					this.OnNameStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailPromotion", DbType="Int")]
		public System.Nullable<int> EmailPromotion
		{
			get
			{
				return this._EmailPromotion;
			}
			set
			{
				if ((this._EmailPromotion != value))
				{
					this.OnEmailPromotionChanging(value);
					this.SendPropertyChanging();
					this._EmailPromotion = value;
					this.SendPropertyChanged("EmailPromotion");
					this.OnEmailPromotionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityCode", DbType="Char(3)")]
		public string NationalityCode
		{
			get
			{
				return this._NationalityCode;
			}
			set
			{
				if ((this._NationalityCode != value))
				{
					this.OnNationalityCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalityCode = value;
					this.SendPropertyChanged("NationalityCode");
					this.OnNationalityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateofBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateofBirth
		{
			get
			{
				return this._DateofBirth;
			}
			set
			{
				if ((this._DateofBirth != value))
				{
					this.OnDateofBirthChanging(value);
					this.SendPropertyChanging();
					this._DateofBirth = value;
					this.SendPropertyChanged("DateofBirth");
					this.OnDateofBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonImage", DbType="NVarChar(250)")]
		public string PersonImage
		{
			get
			{
				return this._PersonImage;
			}
			set
			{
				if ((this._PersonImage != value))
				{
					this.OnPersonImageChanging(value);
					this.SendPropertyChanging();
					this._PersonImage = value;
					this.SendPropertyChanged("PersonImage");
					this.OnPersonImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_UserClaim", Storage="_UserClaims", ThisKey="BusinessEntityId", OtherKey="UserId")]
		public EntitySet<UserClaim> UserClaims
		{
			get
			{
				return this._UserClaims;
			}
			set
			{
				this._UserClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_UserLoginProvider", Storage="_UserLoginProviders", ThisKey="BusinessEntityId", OtherKey="UserId")]
		public EntitySet<UserLoginProvider> UserLoginProviders
		{
			get
			{
				return this._UserLoginProviders;
			}
			set
			{
				this._UserLoginProviders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Credential", Storage="_Credential", ThisKey="BusinessEntityId", OtherKey="BusinessEntityId", IsUnique=true, IsForeignKey=false)]
		public Credential Credential
		{
			get
			{
				return this._Credential.Entity;
			}
			set
			{
				Credential previousValue = this._Credential.Entity;
				if (((previousValue != value) 
							|| (this._Credential.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Credential.Entity = null;
						previousValue.Person = null;
					}
					this._Credential.Entity = value;
					if ((value != null))
					{
						value.Person = this;
					}
					this.SendPropertyChanged("Credential");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessEntity_Person", Storage="_BusinessEntity", ThisKey="BusinessEntityId", OtherKey="BusinessEntityId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BusinessEntity BusinessEntity
		{
			get
			{
				return this._BusinessEntity.Entity;
			}
			set
			{
				BusinessEntity previousValue = this._BusinessEntity.Entity;
				if (((previousValue != value) 
							|| (this._BusinessEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessEntity.Entity = null;
						previousValue.Person = null;
					}
					this._BusinessEntity.Entity = value;
					if ((value != null))
					{
						value.Person = this;
						this._BusinessEntityId = value.BusinessEntityId;
					}
					else
					{
						this._BusinessEntityId = default(int);
					}
					this.SendPropertyChanged("BusinessEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserClaims(UserClaim entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_UserClaims(UserClaim entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_UserLoginProviders(UserLoginProvider entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_UserLoginProviders(UserLoginProvider entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="RoleSecurity.UserClaim")]
	public partial class UserClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserClaimId;
		
		private System.Nullable<int> _UserId;
		
		private string _ClaimValue;
		
		private string _ClaimType;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserClaimIdChanging(int value);
    partial void OnUserClaimIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public UserClaim()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserClaimId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserClaimId
		{
			get
			{
				return this._UserClaimId;
			}
			set
			{
				if ((this._UserClaimId != value))
				{
					this.OnUserClaimIdChanging(value);
					this.SendPropertyChanging();
					this._UserClaimId = value;
					this.SendPropertyChanged("UserClaimId");
					this.OnUserClaimIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(150)")]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NChar(150)")]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_UserClaim", Storage="_Person", ThisKey="UserId", OtherKey="BusinessEntityId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.UserClaims.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.UserClaims.Add(this);
						this._UserId = value.BusinessEntityId;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="RoleSecurity.UserLoginProvider")]
	public partial class UserLoginProvider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserLoginProviderId;
		
		private System.Nullable<int> _UserId;
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserLoginProviderIdChanging(int value);
    partial void OnUserLoginProviderIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public UserLoginProvider()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLoginProviderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserLoginProviderId
		{
			get
			{
				return this._UserLoginProviderId;
			}
			set
			{
				if ((this._UserLoginProviderId != value))
				{
					this.OnUserLoginProviderIdChanging(value);
					this.SendPropertyChanging();
					this._UserLoginProviderId = value;
					this.SendPropertyChanged("UserLoginProviderId");
					this.OnUserLoginProviderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(500)")]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(150)")]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_UserLoginProvider", Storage="_Person", ThisKey="UserId", OtherKey="BusinessEntityId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.UserLoginProviders.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.UserLoginProviders.Add(this);
						this._UserId = value.BusinessEntityId;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="RoleSecurity.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _Name;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<System.Guid> _RowGuid;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<PersonRole> _PersonRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnRowGuidChanging(System.Nullable<System.Guid> value);
    partial void OnRowGuidChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Role()
		{
			this._PersonRoles = new EntitySet<PersonRole>(new Action<PersonRole>(this.attach_PersonRoles), new Action<PersonRole>(this.detach_PersonRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_PersonRole", Storage="_PersonRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<PersonRole> PersonRoles
		{
			get
			{
				return this._PersonRoles;
			}
			set
			{
				this._PersonRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonRoles(PersonRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_PersonRoles(PersonRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="RoleSecurity.PersonRole")]
	public partial class PersonRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PersonRoleId;
		
		private System.Nullable<int> _RoleId;
		
		private System.Nullable<int> _PersonId;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Credential> _Credential;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonRoleIdChanging(int value);
    partial void OnPersonRoleIdChanged();
    partial void OnRoleIdChanging(System.Nullable<int> value);
    partial void OnRoleIdChanged();
    partial void OnPersonIdChanging(System.Nullable<int> value);
    partial void OnPersonIdChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public PersonRole()
		{
			this._Role = default(EntityRef<Role>);
			this._Credential = default(EntityRef<Credential>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonRoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PersonRoleId
		{
			get
			{
				return this._PersonRoleId;
			}
			set
			{
				if ((this._PersonRoleId != value))
				{
					this.OnPersonRoleIdChanging(value);
					this.SendPropertyChanging();
					this._PersonRoleId = value;
					this.SendPropertyChanged("PersonRoleId");
					this.OnPersonRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int")]
		public System.Nullable<int> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="Int")]
		public System.Nullable<int> PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._Credential.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_PersonRole", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.PersonRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.PersonRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Credential_PersonRole", Storage="_Credential", ThisKey="PersonId", OtherKey="BusinessEntityId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Credential Credential
		{
			get
			{
				return this._Credential.Entity;
			}
			set
			{
				Credential previousValue = this._Credential.Entity;
				if (((previousValue != value) 
							|| (this._Credential.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Credential.Entity = null;
						previousValue.PersonRoles.Remove(this);
					}
					this._Credential.Entity = value;
					if ((value != null))
					{
						value.PersonRoles.Add(this);
						this._PersonId = value.BusinessEntityId;
					}
					else
					{
						this._PersonId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Credential");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.Credential")]
	public partial class Credential : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityId;
		
		private string _Username;
		
		private string _PasswordHash;
		
		private string _PasswordSalt;
		
		private string _ActivationCode;
		
		private System.Nullable<bool> _IsActivated;
		
		private bool _IsActive;
		
		private System.Guid _RowGuid;
		
		private string _Email;
		
		private string _EmailConfirmationCode;
		
		private System.Nullable<bool> _EmailConfirmed;
		
		private string _PhoneNumber;
		
		private string _PhoneNumberConfirmationCode;
		
		private System.Nullable<bool> _PhoneNumberConfirmed;
		
		private System.Nullable<bool> _LockoutEnabled;
		
		private System.Nullable<bool> _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private System.Nullable<int> _AccessFailedCount;
		
		private System.DateTime _ModifiedDate;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<int> _ModifiedBy;
		
		private EntitySet<PersonRole> _PersonRoles;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIdChanging(int value);
    partial void OnBusinessEntityIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnActivationCodeChanging(string value);
    partial void OnActivationCodeChanged();
    partial void OnIsActivatedChanging(System.Nullable<bool> value);
    partial void OnIsActivatedChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmationCodeChanging(string value);
    partial void OnEmailConfirmationCodeChanged();
    partial void OnEmailConfirmedChanging(System.Nullable<bool> value);
    partial void OnEmailConfirmedChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmationCodeChanging(string value);
    partial void OnPhoneNumberConfirmationCodeChanged();
    partial void OnPhoneNumberConfirmedChanging(System.Nullable<bool> value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnLockoutEnabledChanging(System.Nullable<bool> value);
    partial void OnLockoutEnabledChanged();
    partial void OnTwoFactorEnabledChanging(System.Nullable<bool> value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnAccessFailedCountChanging(System.Nullable<int> value);
    partial void OnAccessFailedCountChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    #endregion
		
		public Credential()
		{
			this._PersonRoles = new EntitySet<PersonRole>(new Action<PersonRole>(this.attach_PersonRoles), new Action<PersonRole>(this.detach_PersonRoles));
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BusinessEntityId
		{
			get
			{
				return this._BusinessEntityId;
			}
			set
			{
				if ((this._BusinessEntityId != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessEntityIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityId = value;
					this.SendPropertyChanged("BusinessEntityId");
					this.OnBusinessEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(10)")]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationCode", DbType="NVarChar(128)")]
		public string ActivationCode
		{
			get
			{
				return this._ActivationCode;
			}
			set
			{
				if ((this._ActivationCode != value))
				{
					this.OnActivationCodeChanging(value);
					this.SendPropertyChanging();
					this._ActivationCode = value;
					this.SendPropertyChanged("ActivationCode");
					this.OnActivationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActivated", DbType="Bit")]
		public System.Nullable<bool> IsActivated
		{
			get
			{
				return this._IsActivated;
			}
			set
			{
				if ((this._IsActivated != value))
				{
					this.OnIsActivatedChanging(value);
					this.SendPropertyChanging();
					this._IsActivated = value;
					this.SendPropertyChanged("IsActivated");
					this.OnIsActivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmationCode", DbType="NVarChar(150)")]
		public string EmailConfirmationCode
		{
			get
			{
				return this._EmailConfirmationCode;
			}
			set
			{
				if ((this._EmailConfirmationCode != value))
				{
					this.OnEmailConfirmationCodeChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmationCode = value;
					this.SendPropertyChanged("EmailConfirmationCode");
					this.OnEmailConfirmationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit")]
		public System.Nullable<bool> EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmationCode", DbType="NVarChar(150)")]
		public string PhoneNumberConfirmationCode
		{
			get
			{
				return this._PhoneNumberConfirmationCode;
			}
			set
			{
				if ((this._PhoneNumberConfirmationCode != value))
				{
					this.OnPhoneNumberConfirmationCodeChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmationCode = value;
					this.SendPropertyChanged("PhoneNumberConfirmationCode");
					this.OnPhoneNumberConfirmationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit")]
		public System.Nullable<bool> PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit")]
		public System.Nullable<bool> LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit")]
		public System.Nullable<bool> TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this.OnLockoutEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._LockoutEndDateUtc = value;
					this.SendPropertyChanged("LockoutEndDateUtc");
					this.OnLockoutEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int")]
		public System.Nullable<int> AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Credential_PersonRole", Storage="_PersonRoles", ThisKey="BusinessEntityId", OtherKey="PersonId")]
		public EntitySet<PersonRole> PersonRoles
		{
			get
			{
				return this._PersonRoles;
			}
			set
			{
				this._PersonRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Credential", Storage="_Person", ThisKey="BusinessEntityId", OtherKey="BusinessEntityId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Credential = null;
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Credential = this;
						this._BusinessEntityId = value.BusinessEntityId;
					}
					else
					{
						this._BusinessEntityId = default(int);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonRoles(PersonRole entity)
		{
			this.SendPropertyChanging();
			entity.Credential = this;
		}
		
		private void detach_PersonRoles(PersonRole entity)
		{
			this.SendPropertyChanging();
			entity.Credential = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.StudentGender")]
	public partial class StudentGender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentGenderID;
		
		private string _Name;
		
		private EntitySet<ExamPeriod> _ExamPeriods;
		
		private EntitySet<ExamCenter> _ExamCenters;
		
		private EntitySet<Exam> _Exams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentGenderIDChanging(int value);
    partial void OnStudentGenderIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public StudentGender()
		{
			this._ExamPeriods = new EntitySet<ExamPeriod>(new Action<ExamPeriod>(this.attach_ExamPeriods), new Action<ExamPeriod>(this.detach_ExamPeriods));
			this._ExamCenters = new EntitySet<ExamCenter>(new Action<ExamCenter>(this.attach_ExamCenters), new Action<ExamCenter>(this.detach_ExamCenters));
			this._Exams = new EntitySet<Exam>(new Action<Exam>(this.attach_Exams), new Action<Exam>(this.detach_Exams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentGenderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StudentGenderID
		{
			get
			{
				return this._StudentGenderID;
			}
			set
			{
				if ((this._StudentGenderID != value))
				{
					this.OnStudentGenderIDChanging(value);
					this.SendPropertyChanging();
					this._StudentGenderID = value;
					this.SendPropertyChanged("StudentGenderID");
					this.OnStudentGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentGender_ExamPeriod", Storage="_ExamPeriods", ThisKey="StudentGenderID", OtherKey="StudentGenderID")]
		public EntitySet<ExamPeriod> ExamPeriods
		{
			get
			{
				return this._ExamPeriods;
			}
			set
			{
				this._ExamPeriods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentGender_ExamCenter", Storage="_ExamCenters", ThisKey="StudentGenderID", OtherKey="StudentGenderID")]
		public EntitySet<ExamCenter> ExamCenters
		{
			get
			{
				return this._ExamCenters;
			}
			set
			{
				this._ExamCenters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentGender_Exam", Storage="_Exams", ThisKey="StudentGenderID", OtherKey="StudentGenderID")]
		public EntitySet<Exam> Exams
		{
			get
			{
				return this._Exams;
			}
			set
			{
				this._Exams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExamPeriods(ExamPeriod entity)
		{
			this.SendPropertyChanging();
			entity.StudentGender = this;
		}
		
		private void detach_ExamPeriods(ExamPeriod entity)
		{
			this.SendPropertyChanging();
			entity.StudentGender = null;
		}
		
		private void attach_ExamCenters(ExamCenter entity)
		{
			this.SendPropertyChanging();
			entity.StudentGender = this;
		}
		
		private void detach_ExamCenters(ExamCenter entity)
		{
			this.SendPropertyChanging();
			entity.StudentGender = null;
		}
		
		private void attach_Exams(Exam entity)
		{
			this.SendPropertyChanging();
			entity.StudentGender = this;
		}
		
		private void detach_Exams(Exam entity)
		{
			this.SendPropertyChanging();
			entity.StudentGender = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.PackagingType")]
	public partial class PackagingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackagingTypeID;
		
		private string _Name;
		
		private System.Nullable<int> _ExamModelCount;
		
		private System.Nullable<int> _BooksPerPackage;
		
		private System.Nullable<int> _Total;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<BookPackingOperation> _BookPackingOperations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackagingTypeIDChanging(int value);
    partial void OnPackagingTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExamModelCountChanging(System.Nullable<int> value);
    partial void OnExamModelCountChanged();
    partial void OnBooksPerPackageChanging(System.Nullable<int> value);
    partial void OnBooksPerPackageChanged();
    partial void OnTotalChanging(System.Nullable<int> value);
    partial void OnTotalChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public PackagingType()
		{
			this._BookPackingOperations = new EntitySet<BookPackingOperation>(new Action<BookPackingOperation>(this.attach_BookPackingOperations), new Action<BookPackingOperation>(this.detach_BookPackingOperations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackagingTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PackagingTypeID
		{
			get
			{
				return this._PackagingTypeID;
			}
			set
			{
				if ((this._PackagingTypeID != value))
				{
					this.OnPackagingTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PackagingTypeID = value;
					this.SendPropertyChanged("PackagingTypeID");
					this.OnPackagingTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamModelCount", DbType="Int")]
		public System.Nullable<int> ExamModelCount
		{
			get
			{
				return this._ExamModelCount;
			}
			set
			{
				if ((this._ExamModelCount != value))
				{
					this.OnExamModelCountChanging(value);
					this.SendPropertyChanging();
					this._ExamModelCount = value;
					this.SendPropertyChanged("ExamModelCount");
					this.OnExamModelCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BooksPerPackage", DbType="Int")]
		public System.Nullable<int> BooksPerPackage
		{
			get
			{
				return this._BooksPerPackage;
			}
			set
			{
				if ((this._BooksPerPackage != value))
				{
					this.OnBooksPerPackageChanging(value);
					this.SendPropertyChanging();
					this._BooksPerPackage = value;
					this.SendPropertyChanged("BooksPerPackage");
					this.OnBooksPerPackageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Int")]
		public System.Nullable<int> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackagingType_BookPackingOperation", Storage="_BookPackingOperations", ThisKey="PackagingTypeID", OtherKey="PackagingTypeID")]
		public EntitySet<BookPackingOperation> BookPackingOperations
		{
			get
			{
				return this._BookPackingOperations;
			}
			set
			{
				this._BookPackingOperations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookPackingOperations(BookPackingOperation entity)
		{
			this.SendPropertyChanging();
			entity.PackagingType = this;
		}
		
		private void detach_BookPackingOperations(BookPackingOperation entity)
		{
			this.SendPropertyChanging();
			entity.PackagingType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.OperationStatus")]
	public partial class OperationStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OperationStatusID;
		
		private string _Name;
		
		private EntitySet<BookPrintingOperation> _BookPrintingOperations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOperationStatusIDChanging(int value);
    partial void OnOperationStatusIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public OperationStatus()
		{
			this._BookPrintingOperations = new EntitySet<BookPrintingOperation>(new Action<BookPrintingOperation>(this.attach_BookPrintingOperations), new Action<BookPrintingOperation>(this.detach_BookPrintingOperations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationStatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OperationStatusID
		{
			get
			{
				return this._OperationStatusID;
			}
			set
			{
				if ((this._OperationStatusID != value))
				{
					this.OnOperationStatusIDChanging(value);
					this.SendPropertyChanging();
					this._OperationStatusID = value;
					this.SendPropertyChanged("OperationStatusID");
					this.OnOperationStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OperationStatus_BookPrintingOperation", Storage="_BookPrintingOperations", ThisKey="OperationStatusID", OtherKey="OperationStatusID")]
		public EntitySet<BookPrintingOperation> BookPrintingOperations
		{
			get
			{
				return this._BookPrintingOperations;
			}
			set
			{
				this._BookPrintingOperations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookPrintingOperations(BookPrintingOperation entity)
		{
			this.SendPropertyChanging();
			entity.OperationStatus = this;
		}
		
		private void detach_BookPrintingOperations(BookPrintingOperation entity)
		{
			this.SendPropertyChanging();
			entity.OperationStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.ExamType")]
	public partial class ExamType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExaminationTypeID;
		
		private string _Name;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<ExamSpeciality> _ExamSpecialities;
		
		private EntitySet<ExamPeriod> _ExamPeriods;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExaminationTypeIDChanging(int value);
    partial void OnExaminationTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ExamType()
		{
			this._ExamSpecialities = new EntitySet<ExamSpeciality>(new Action<ExamSpeciality>(this.attach_ExamSpecialities), new Action<ExamSpeciality>(this.detach_ExamSpecialities));
			this._ExamPeriods = new EntitySet<ExamPeriod>(new Action<ExamPeriod>(this.attach_ExamPeriods), new Action<ExamPeriod>(this.detach_ExamPeriods));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExaminationTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExaminationTypeID
		{
			get
			{
				return this._ExaminationTypeID;
			}
			set
			{
				if ((this._ExaminationTypeID != value))
				{
					this.OnExaminationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ExaminationTypeID = value;
					this.SendPropertyChanged("ExaminationTypeID");
					this.OnExaminationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamType_ExamSpeciality", Storage="_ExamSpecialities", ThisKey="ExaminationTypeID", OtherKey="ExamTypeID")]
		public EntitySet<ExamSpeciality> ExamSpecialities
		{
			get
			{
				return this._ExamSpecialities;
			}
			set
			{
				this._ExamSpecialities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamType_ExamPeriod", Storage="_ExamPeriods", ThisKey="ExaminationTypeID", OtherKey="ExamTypeID")]
		public EntitySet<ExamPeriod> ExamPeriods
		{
			get
			{
				return this._ExamPeriods;
			}
			set
			{
				this._ExamPeriods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExamSpecialities(ExamSpeciality entity)
		{
			this.SendPropertyChanging();
			entity.ExamType = this;
		}
		
		private void detach_ExamSpecialities(ExamSpeciality entity)
		{
			this.SendPropertyChanging();
			entity.ExamType = null;
		}
		
		private void attach_ExamPeriods(ExamPeriod entity)
		{
			this.SendPropertyChanging();
			entity.ExamType = this;
		}
		
		private void detach_ExamPeriods(ExamPeriod entity)
		{
			this.SendPropertyChanging();
			entity.ExamType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.ExamSpeciality")]
	public partial class ExamSpeciality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamSpecialityID;
		
		private string _Name;
		
		private System.Nullable<int> _ExamTypeID;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<Exam> _Exams;
		
		private EntityRef<ExamType> _ExamType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamSpecialityIDChanging(int value);
    partial void OnExamSpecialityIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExamTypeIDChanging(System.Nullable<int> value);
    partial void OnExamTypeIDChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ExamSpeciality()
		{
			this._Exams = new EntitySet<Exam>(new Action<Exam>(this.attach_Exams), new Action<Exam>(this.detach_Exams));
			this._ExamType = default(EntityRef<ExamType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamSpecialityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExamSpecialityID
		{
			get
			{
				return this._ExamSpecialityID;
			}
			set
			{
				if ((this._ExamSpecialityID != value))
				{
					this.OnExamSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._ExamSpecialityID = value;
					this.SendPropertyChanged("ExamSpecialityID");
					this.OnExamSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamTypeID", DbType="Int")]
		public System.Nullable<int> ExamTypeID
		{
			get
			{
				return this._ExamTypeID;
			}
			set
			{
				if ((this._ExamTypeID != value))
				{
					if (this._ExamType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ExamTypeID = value;
					this.SendPropertyChanged("ExamTypeID");
					this.OnExamTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamSpeciality_Exam", Storage="_Exams", ThisKey="ExamSpecialityID", OtherKey="ExamSpecialityID")]
		public EntitySet<Exam> Exams
		{
			get
			{
				return this._Exams;
			}
			set
			{
				this._Exams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamType_ExamSpeciality", Storage="_ExamType", ThisKey="ExamTypeID", OtherKey="ExaminationTypeID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ExamType ExamType
		{
			get
			{
				return this._ExamType.Entity;
			}
			set
			{
				ExamType previousValue = this._ExamType.Entity;
				if (((previousValue != value) 
							|| (this._ExamType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExamType.Entity = null;
						previousValue.ExamSpecialities.Remove(this);
					}
					this._ExamType.Entity = value;
					if ((value != null))
					{
						value.ExamSpecialities.Add(this);
						this._ExamTypeID = value.ExaminationTypeID;
					}
					else
					{
						this._ExamTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExamType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Exams(Exam entity)
		{
			this.SendPropertyChanging();
			entity.ExamSpeciality = this;
		}
		
		private void detach_Exams(Exam entity)
		{
			this.SendPropertyChanging();
			entity.ExamSpeciality = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.ExamPeriod")]
	public partial class ExamPeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamPeriodID;
		
		private string _Name;
		
		private System.Nullable<int> _ExamTypeID;
		
		private System.Nullable<int> _ExamYear;
		
		private System.Nullable<int> _StudentGenderID;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private EntitySet<ExamCenterRequiredExam> _ExamCenterRequiredExams;
		
		private EntityRef<ExamType> _ExamType;
		
		private EntityRef<StudentGender> _StudentGender;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamPeriodIDChanging(int value);
    partial void OnExamPeriodIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExamTypeIDChanging(System.Nullable<int> value);
    partial void OnExamTypeIDChanged();
    partial void OnExamYearChanging(System.Nullable<int> value);
    partial void OnExamYearChanged();
    partial void OnStudentGenderIDChanging(System.Nullable<int> value);
    partial void OnStudentGenderIDChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public ExamPeriod()
		{
			this._ExamCenterRequiredExams = new EntitySet<ExamCenterRequiredExam>(new Action<ExamCenterRequiredExam>(this.attach_ExamCenterRequiredExams), new Action<ExamCenterRequiredExam>(this.detach_ExamCenterRequiredExams));
			this._ExamType = default(EntityRef<ExamType>);
			this._StudentGender = default(EntityRef<StudentGender>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamPeriodID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExamPeriodID
		{
			get
			{
				return this._ExamPeriodID;
			}
			set
			{
				if ((this._ExamPeriodID != value))
				{
					this.OnExamPeriodIDChanging(value);
					this.SendPropertyChanging();
					this._ExamPeriodID = value;
					this.SendPropertyChanged("ExamPeriodID");
					this.OnExamPeriodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamTypeID", DbType="Int")]
		public System.Nullable<int> ExamTypeID
		{
			get
			{
				return this._ExamTypeID;
			}
			set
			{
				if ((this._ExamTypeID != value))
				{
					if (this._ExamType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ExamTypeID = value;
					this.SendPropertyChanged("ExamTypeID");
					this.OnExamTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamYear", DbType="Int")]
		public System.Nullable<int> ExamYear
		{
			get
			{
				return this._ExamYear;
			}
			set
			{
				if ((this._ExamYear != value))
				{
					this.OnExamYearChanging(value);
					this.SendPropertyChanging();
					this._ExamYear = value;
					this.SendPropertyChanged("ExamYear");
					this.OnExamYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentGenderID", DbType="Int")]
		public System.Nullable<int> StudentGenderID
		{
			get
			{
				return this._StudentGenderID;
			}
			set
			{
				if ((this._StudentGenderID != value))
				{
					if (this._StudentGender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentGenderIDChanging(value);
					this.SendPropertyChanging();
					this._StudentGenderID = value;
					this.SendPropertyChanged("StudentGenderID");
					this.OnStudentGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamPeriod_ExamCenterRequiredExam", Storage="_ExamCenterRequiredExams", ThisKey="ExamPeriodID", OtherKey="ExamPeriodID")]
		public EntitySet<ExamCenterRequiredExam> ExamCenterRequiredExams
		{
			get
			{
				return this._ExamCenterRequiredExams;
			}
			set
			{
				this._ExamCenterRequiredExams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamType_ExamPeriod", Storage="_ExamType", ThisKey="ExamTypeID", OtherKey="ExaminationTypeID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ExamType ExamType
		{
			get
			{
				return this._ExamType.Entity;
			}
			set
			{
				ExamType previousValue = this._ExamType.Entity;
				if (((previousValue != value) 
							|| (this._ExamType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExamType.Entity = null;
						previousValue.ExamPeriods.Remove(this);
					}
					this._ExamType.Entity = value;
					if ((value != null))
					{
						value.ExamPeriods.Add(this);
						this._ExamTypeID = value.ExaminationTypeID;
					}
					else
					{
						this._ExamTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExamType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentGender_ExamPeriod", Storage="_StudentGender", ThisKey="StudentGenderID", OtherKey="StudentGenderID", IsForeignKey=true)]
		public StudentGender StudentGender
		{
			get
			{
				return this._StudentGender.Entity;
			}
			set
			{
				StudentGender previousValue = this._StudentGender.Entity;
				if (((previousValue != value) 
							|| (this._StudentGender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentGender.Entity = null;
						previousValue.ExamPeriods.Remove(this);
					}
					this._StudentGender.Entity = value;
					if ((value != null))
					{
						value.ExamPeriods.Add(this);
						this._StudentGenderID = value.StudentGenderID;
					}
					else
					{
						this._StudentGenderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StudentGender");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExamCenterRequiredExams(ExamCenterRequiredExam entity)
		{
			this.SendPropertyChanging();
			entity.ExamPeriod = this;
		}
		
		private void detach_ExamCenterRequiredExams(ExamCenterRequiredExam entity)
		{
			this.SendPropertyChanging();
			entity.ExamPeriod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.CountryRegion")]
	public partial class CountryRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CountryRegionCode;
		
		private string _Name;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<StateProvince> _StateProvinces;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryRegionCodeChanging(string value);
    partial void OnCountryRegionCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public CountryRegion()
		{
			this._StateProvinces = new EntitySet<StateProvince>(new Action<StateProvince>(this.attach_StateProvinces), new Action<StateProvince>(this.detach_StateProvinces));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryRegionCode", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CountryRegionCode
		{
			get
			{
				return this._CountryRegionCode;
			}
			set
			{
				if ((this._CountryRegionCode != value))
				{
					this.OnCountryRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryRegionCode = value;
					this.SendPropertyChanged("CountryRegionCode");
					this.OnCountryRegionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryRegion_StateProvince", Storage="_StateProvinces", ThisKey="CountryRegionCode", OtherKey="CountryRegionCode")]
		public EntitySet<StateProvince> StateProvinces
		{
			get
			{
				return this._StateProvinces;
			}
			set
			{
				this._StateProvinces.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StateProvinces(StateProvince entity)
		{
			this.SendPropertyChanging();
			entity.CountryRegion = this;
		}
		
		private void detach_StateProvinces(StateProvince entity)
		{
			this.SendPropertyChanging();
			entity.CountryRegion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.StateProvince")]
	public partial class StateProvince : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateProvinceId;
		
		private string _StateProvinceCode;
		
		private string _CountryRegionCode;
		
		private System.Nullable<bool> _IsOnlyStateProvince;
		
		private string _Name;
		
		private System.Guid _RowGuid;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<City> _Cities;
		
		private EntityRef<CountryRegion> _CountryRegion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateProvinceIdChanging(int value);
    partial void OnStateProvinceIdChanged();
    partial void OnStateProvinceCodeChanging(string value);
    partial void OnStateProvinceCodeChanged();
    partial void OnCountryRegionCodeChanging(string value);
    partial void OnCountryRegionCodeChanged();
    partial void OnIsOnlyStateProvinceChanging(System.Nullable<bool> value);
    partial void OnIsOnlyStateProvinceChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public StateProvince()
		{
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			this._CountryRegion = default(EntityRef<CountryRegion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateProvinceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StateProvinceId
		{
			get
			{
				return this._StateProvinceId;
			}
			set
			{
				if ((this._StateProvinceId != value))
				{
					this.OnStateProvinceIdChanging(value);
					this.SendPropertyChanging();
					this._StateProvinceId = value;
					this.SendPropertyChanged("StateProvinceId");
					this.OnStateProvinceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateProvinceCode", DbType="NChar(3)")]
		public string StateProvinceCode
		{
			get
			{
				return this._StateProvinceCode;
			}
			set
			{
				if ((this._StateProvinceCode != value))
				{
					this.OnStateProvinceCodeChanging(value);
					this.SendPropertyChanging();
					this._StateProvinceCode = value;
					this.SendPropertyChanged("StateProvinceCode");
					this.OnStateProvinceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryRegionCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string CountryRegionCode
		{
			get
			{
				return this._CountryRegionCode;
			}
			set
			{
				if ((this._CountryRegionCode != value))
				{
					if (this._CountryRegion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryRegionCode = value;
					this.SendPropertyChanged("CountryRegionCode");
					this.OnCountryRegionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnlyStateProvince", DbType="Bit")]
		public System.Nullable<bool> IsOnlyStateProvince
		{
			get
			{
				return this._IsOnlyStateProvince;
			}
			set
			{
				if ((this._IsOnlyStateProvince != value))
				{
					this.OnIsOnlyStateProvinceChanging(value);
					this.SendPropertyChanging();
					this._IsOnlyStateProvince = value;
					this.SendPropertyChanged("IsOnlyStateProvince");
					this.OnIsOnlyStateProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateProvince_City", Storage="_Cities", ThisKey="StateProvinceId", OtherKey="StateRegionID")]
		public EntitySet<City> Cities
		{
			get
			{
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryRegion_StateProvince", Storage="_CountryRegion", ThisKey="CountryRegionCode", OtherKey="CountryRegionCode", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CountryRegion CountryRegion
		{
			get
			{
				return this._CountryRegion.Entity;
			}
			set
			{
				CountryRegion previousValue = this._CountryRegion.Entity;
				if (((previousValue != value) 
							|| (this._CountryRegion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CountryRegion.Entity = null;
						previousValue.StateProvinces.Remove(this);
					}
					this._CountryRegion.Entity = value;
					if ((value != null))
					{
						value.StateProvinces.Add(this);
						this._CountryRegionCode = value.CountryRegionCode;
					}
					else
					{
						this._CountryRegionCode = default(string);
					}
					this.SendPropertyChanged("CountryRegion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.StateProvince = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.StateProvince = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CityID;
		
		private System.Nullable<int> _StateRegionID;
		
		private string _Name;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<ExamCenter> _ExamCenters;
		
		private EntityRef<StateProvince> _StateProvince;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnStateRegionIDChanging(System.Nullable<int> value);
    partial void OnStateRegionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public City()
		{
			this._ExamCenters = new EntitySet<ExamCenter>(new Action<ExamCenter>(this.attach_ExamCenters), new Action<ExamCenter>(this.detach_ExamCenters));
			this._StateProvince = default(EntityRef<StateProvince>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateRegionID", DbType="Int")]
		public System.Nullable<int> StateRegionID
		{
			get
			{
				return this._StateRegionID;
			}
			set
			{
				if ((this._StateRegionID != value))
				{
					if (this._StateProvince.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateRegionIDChanging(value);
					this.SendPropertyChanging();
					this._StateRegionID = value;
					this.SendPropertyChanged("StateRegionID");
					this.OnStateRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_ExamCenter", Storage="_ExamCenters", ThisKey="CityID", OtherKey="CityID")]
		public EntitySet<ExamCenter> ExamCenters
		{
			get
			{
				return this._ExamCenters;
			}
			set
			{
				this._ExamCenters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateProvince_City", Storage="_StateProvince", ThisKey="StateRegionID", OtherKey="StateProvinceId", IsForeignKey=true, DeleteRule="CASCADE")]
		public StateProvince StateProvince
		{
			get
			{
				return this._StateProvince.Entity;
			}
			set
			{
				StateProvince previousValue = this._StateProvince.Entity;
				if (((previousValue != value) 
							|| (this._StateProvince.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StateProvince.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._StateProvince.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._StateRegionID = value.StateProvinceId;
					}
					else
					{
						this._StateRegionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StateProvince");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExamCenters(ExamCenter entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_ExamCenters(ExamCenter entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.ExamCenter")]
	public partial class ExamCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExaminationCenterID;
		
		private string _CenterCode;
		
		private string _Name;
		
		private System.Nullable<int> _CityID;
		
		private System.Nullable<int> _StudentGenderID;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<ExamCenterRequiredExam> _ExamCenterRequiredExams;
		
		private EntityRef<City> _City;
		
		private EntityRef<StudentGender> _StudentGender;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExaminationCenterIDChanging(int value);
    partial void OnExaminationCenterIDChanged();
    partial void OnCenterCodeChanging(string value);
    partial void OnCenterCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCityIDChanging(System.Nullable<int> value);
    partial void OnCityIDChanged();
    partial void OnStudentGenderIDChanging(System.Nullable<int> value);
    partial void OnStudentGenderIDChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ExamCenter()
		{
			this._ExamCenterRequiredExams = new EntitySet<ExamCenterRequiredExam>(new Action<ExamCenterRequiredExam>(this.attach_ExamCenterRequiredExams), new Action<ExamCenterRequiredExam>(this.detach_ExamCenterRequiredExams));
			this._City = default(EntityRef<City>);
			this._StudentGender = default(EntityRef<StudentGender>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExaminationCenterID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExaminationCenterID
		{
			get
			{
				return this._ExaminationCenterID;
			}
			set
			{
				if ((this._ExaminationCenterID != value))
				{
					this.OnExaminationCenterIDChanging(value);
					this.SendPropertyChanging();
					this._ExaminationCenterID = value;
					this.SendPropertyChanged("ExaminationCenterID");
					this.OnExaminationCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterCode", DbType="NVarChar(12)")]
		public string CenterCode
		{
			get
			{
				return this._CenterCode;
			}
			set
			{
				if ((this._CenterCode != value))
				{
					this.OnCenterCodeChanging(value);
					this.SendPropertyChanging();
					this._CenterCode = value;
					this.SendPropertyChanged("CenterCode");
					this.OnCenterCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int")]
		public System.Nullable<int> CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentGenderID", DbType="Int")]
		public System.Nullable<int> StudentGenderID
		{
			get
			{
				return this._StudentGenderID;
			}
			set
			{
				if ((this._StudentGenderID != value))
				{
					if (this._StudentGender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentGenderIDChanging(value);
					this.SendPropertyChanging();
					this._StudentGenderID = value;
					this.SendPropertyChanged("StudentGenderID");
					this.OnStudentGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamCenter_ExamCenterRequiredExam", Storage="_ExamCenterRequiredExams", ThisKey="ExaminationCenterID", OtherKey="ExamCenterID")]
		public EntitySet<ExamCenterRequiredExam> ExamCenterRequiredExams
		{
			get
			{
				return this._ExamCenterRequiredExams;
			}
			set
			{
				this._ExamCenterRequiredExams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_ExamCenter", Storage="_City", ThisKey="CityID", OtherKey="CityID", IsForeignKey=true, DeleteRule="CASCADE")]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.ExamCenters.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.ExamCenters.Add(this);
						this._CityID = value.CityID;
					}
					else
					{
						this._CityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentGender_ExamCenter", Storage="_StudentGender", ThisKey="StudentGenderID", OtherKey="StudentGenderID", IsForeignKey=true)]
		public StudentGender StudentGender
		{
			get
			{
				return this._StudentGender.Entity;
			}
			set
			{
				StudentGender previousValue = this._StudentGender.Entity;
				if (((previousValue != value) 
							|| (this._StudentGender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentGender.Entity = null;
						previousValue.ExamCenters.Remove(this);
					}
					this._StudentGender.Entity = value;
					if ((value != null))
					{
						value.ExamCenters.Add(this);
						this._StudentGenderID = value.StudentGenderID;
					}
					else
					{
						this._StudentGenderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StudentGender");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExamCenterRequiredExams(ExamCenterRequiredExam entity)
		{
			this.SendPropertyChanging();
			entity.ExamCenter = this;
		}
		
		private void detach_ExamCenterRequiredExams(ExamCenterRequiredExam entity)
		{
			this.SendPropertyChanging();
			entity.ExamCenter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewExamCenter")]
	public partial class ViewExamCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExaminationCenterID;
		
		private string _CenterCode;
		
		private string _Name;
		
		private System.Nullable<int> _CityID;
		
		private System.Nullable<int> _StudentGenderID;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _StateRegionID;
		
		private string _CityName;
		
		private string _StateProvinceName;
		
		private string _CountryName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExaminationCenterIDChanging(int value);
    partial void OnExaminationCenterIDChanged();
    partial void OnCenterCodeChanging(string value);
    partial void OnCenterCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCityIDChanging(System.Nullable<int> value);
    partial void OnCityIDChanged();
    partial void OnStudentGenderIDChanging(System.Nullable<int> value);
    partial void OnStudentGenderIDChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnStateRegionIDChanging(System.Nullable<int> value);
    partial void OnStateRegionIDChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnStateProvinceNameChanging(string value);
    partial void OnStateProvinceNameChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    #endregion
		
		public ViewExamCenter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExaminationCenterID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExaminationCenterID
		{
			get
			{
				return this._ExaminationCenterID;
			}
			set
			{
				if ((this._ExaminationCenterID != value))
				{
					this.OnExaminationCenterIDChanging(value);
					this.SendPropertyChanging();
					this._ExaminationCenterID = value;
					this.SendPropertyChanged("ExaminationCenterID");
					this.OnExaminationCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterCode", DbType="NVarChar(12)")]
		public string CenterCode
		{
			get
			{
				return this._CenterCode;
			}
			set
			{
				if ((this._CenterCode != value))
				{
					this.OnCenterCodeChanging(value);
					this.SendPropertyChanging();
					this._CenterCode = value;
					this.SendPropertyChanged("CenterCode");
					this.OnCenterCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int")]
		public System.Nullable<int> CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentGenderID", DbType="Int")]
		public System.Nullable<int> StudentGenderID
		{
			get
			{
				return this._StudentGenderID;
			}
			set
			{
				if ((this._StudentGenderID != value))
				{
					this.OnStudentGenderIDChanging(value);
					this.SendPropertyChanging();
					this._StudentGenderID = value;
					this.SendPropertyChanged("StudentGenderID");
					this.OnStudentGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateRegionID", DbType="Int", IsDbGenerated=true)]
		public System.Nullable<int> StateRegionID
		{
			get
			{
				return this._StateRegionID;
			}
			set
			{
				if ((this._StateRegionID != value))
				{
					this.OnStateRegionIDChanging(value);
					this.SendPropertyChanging();
					this._StateRegionID = value;
					this.SendPropertyChanged("StateRegionID");
					this.OnStateRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="NVarChar(50)", IsDbGenerated=true)]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateProvinceName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsDbGenerated=true)]
		public string StateProvinceName
		{
			get
			{
				return this._StateProvinceName;
			}
			set
			{
				if ((this._StateProvinceName != value))
				{
					this.OnStateProvinceNameChanging(value);
					this.SendPropertyChanging();
					this._StateProvinceName = value;
					this.SendPropertyChanged("StateProvinceName");
					this.OnStateProvinceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsDbGenerated=true)]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.ExamModel")]
	public partial class ExamModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamModelID;
		
		private string _Name;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<ExamModelItem> _ExamModelItems;
		
		private EntitySet<BookPackItemModel> _BookPackItemModels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamModelIDChanging(int value);
    partial void OnExamModelIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ExamModel()
		{
			this._ExamModelItems = new EntitySet<ExamModelItem>(new Action<ExamModelItem>(this.attach_ExamModelItems), new Action<ExamModelItem>(this.detach_ExamModelItems));
			this._BookPackItemModels = new EntitySet<BookPackItemModel>(new Action<BookPackItemModel>(this.attach_BookPackItemModels), new Action<BookPackItemModel>(this.detach_BookPackItemModels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamModelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExamModelID
		{
			get
			{
				return this._ExamModelID;
			}
			set
			{
				if ((this._ExamModelID != value))
				{
					this.OnExamModelIDChanging(value);
					this.SendPropertyChanging();
					this._ExamModelID = value;
					this.SendPropertyChanged("ExamModelID");
					this.OnExamModelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamModel_ExamModelItem", Storage="_ExamModelItems", ThisKey="ExamModelID", OtherKey="ExamModelID")]
		public EntitySet<ExamModelItem> ExamModelItems
		{
			get
			{
				return this._ExamModelItems;
			}
			set
			{
				this._ExamModelItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamModel_BookPackItemModel", Storage="_BookPackItemModels", ThisKey="ExamModelID", OtherKey="ExamModelID")]
		public EntitySet<BookPackItemModel> BookPackItemModels
		{
			get
			{
				return this._BookPackItemModels;
			}
			set
			{
				this._BookPackItemModels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExamModelItems(ExamModelItem entity)
		{
			this.SendPropertyChanging();
			entity.ExamModel = this;
		}
		
		private void detach_ExamModelItems(ExamModelItem entity)
		{
			this.SendPropertyChanging();
			entity.ExamModel = null;
		}
		
		private void attach_BookPackItemModels(BookPackItemModel entity)
		{
			this.SendPropertyChanging();
			entity.ExamModel = this;
		}
		
		private void detach_BookPackItemModels(BookPackItemModel entity)
		{
			this.SendPropertyChanging();
			entity.ExamModel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExamView")]
	public partial class ExamView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamID;
		
		private string _ExamCode;
		
		private string _Name;
		
		private System.Nullable<int> _ExamSpecialityID;
		
		private System.Nullable<int> _StudentGenderID;
		
		private System.Nullable<int> _NumberofSections;
		
		private System.Nullable<int> _NumberofPages;
		
		private System.Nullable<int> _TimeForSection;
		
		private string _Notes;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _ExamSpecialityName;
		
		private string _ExamTypeName;
		
		private System.Nullable<int> _ExamTypeID;
		
		private string _StudentGenderName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamIDChanging(int value);
    partial void OnExamIDChanged();
    partial void OnExamCodeChanging(string value);
    partial void OnExamCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExamSpecialityIDChanging(System.Nullable<int> value);
    partial void OnExamSpecialityIDChanged();
    partial void OnStudentGenderIDChanging(System.Nullable<int> value);
    partial void OnStudentGenderIDChanged();
    partial void OnNumberofSectionsChanging(System.Nullable<int> value);
    partial void OnNumberofSectionsChanged();
    partial void OnNumberofPagesChanging(System.Nullable<int> value);
    partial void OnNumberofPagesChanged();
    partial void OnTimeForSectionChanging(System.Nullable<int> value);
    partial void OnTimeForSectionChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnExamSpecialityNameChanging(string value);
    partial void OnExamSpecialityNameChanged();
    partial void OnExamTypeNameChanging(string value);
    partial void OnExamTypeNameChanged();
    partial void OnExamTypeIDChanging(System.Nullable<int> value);
    partial void OnExamTypeIDChanged();
    partial void OnStudentGenderNameChanging(string value);
    partial void OnStudentGenderNameChanged();
    #endregion
		
		public ExamView()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExamID
		{
			get
			{
				return this._ExamID;
			}
			set
			{
				if ((this._ExamID != value))
				{
					this.OnExamIDChanging(value);
					this.SendPropertyChanging();
					this._ExamID = value;
					this.SendPropertyChanged("ExamID");
					this.OnExamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamCode", DbType="NVarChar(12)")]
		public string ExamCode
		{
			get
			{
				return this._ExamCode;
			}
			set
			{
				if ((this._ExamCode != value))
				{
					this.OnExamCodeChanging(value);
					this.SendPropertyChanging();
					this._ExamCode = value;
					this.SendPropertyChanged("ExamCode");
					this.OnExamCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamSpecialityID", DbType="Int")]
		public System.Nullable<int> ExamSpecialityID
		{
			get
			{
				return this._ExamSpecialityID;
			}
			set
			{
				if ((this._ExamSpecialityID != value))
				{
					this.OnExamSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._ExamSpecialityID = value;
					this.SendPropertyChanged("ExamSpecialityID");
					this.OnExamSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentGenderID", DbType="Int")]
		public System.Nullable<int> StudentGenderID
		{
			get
			{
				return this._StudentGenderID;
			}
			set
			{
				if ((this._StudentGenderID != value))
				{
					this.OnStudentGenderIDChanging(value);
					this.SendPropertyChanging();
					this._StudentGenderID = value;
					this.SendPropertyChanged("StudentGenderID");
					this.OnStudentGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberofSections", DbType="Int")]
		public System.Nullable<int> NumberofSections
		{
			get
			{
				return this._NumberofSections;
			}
			set
			{
				if ((this._NumberofSections != value))
				{
					this.OnNumberofSectionsChanging(value);
					this.SendPropertyChanging();
					this._NumberofSections = value;
					this.SendPropertyChanged("NumberofSections");
					this.OnNumberofSectionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberofPages", DbType="Int")]
		public System.Nullable<int> NumberofPages
		{
			get
			{
				return this._NumberofPages;
			}
			set
			{
				if ((this._NumberofPages != value))
				{
					this.OnNumberofPagesChanging(value);
					this.SendPropertyChanging();
					this._NumberofPages = value;
					this.SendPropertyChanged("NumberofPages");
					this.OnNumberofPagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeForSection", DbType="Int")]
		public System.Nullable<int> TimeForSection
		{
			get
			{
				return this._TimeForSection;
			}
			set
			{
				if ((this._TimeForSection != value))
				{
					this.OnTimeForSectionChanging(value);
					this.SendPropertyChanging();
					this._TimeForSection = value;
					this.SendPropertyChanged("TimeForSection");
					this.OnTimeForSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamSpecialityName", DbType="NVarChar(50)")]
		public string ExamSpecialityName
		{
			get
			{
				return this._ExamSpecialityName;
			}
			set
			{
				if ((this._ExamSpecialityName != value))
				{
					this.OnExamSpecialityNameChanging(value);
					this.SendPropertyChanging();
					this._ExamSpecialityName = value;
					this.SendPropertyChanged("ExamSpecialityName");
					this.OnExamSpecialityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamTypeName", DbType="NVarChar(50)")]
		public string ExamTypeName
		{
			get
			{
				return this._ExamTypeName;
			}
			set
			{
				if ((this._ExamTypeName != value))
				{
					this.OnExamTypeNameChanging(value);
					this.SendPropertyChanging();
					this._ExamTypeName = value;
					this.SendPropertyChanged("ExamTypeName");
					this.OnExamTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamTypeID", DbType="Int")]
		public System.Nullable<int> ExamTypeID
		{
			get
			{
				return this._ExamTypeID;
			}
			set
			{
				if ((this._ExamTypeID != value))
				{
					this.OnExamTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ExamTypeID = value;
					this.SendPropertyChanged("ExamTypeID");
					this.OnExamTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentGenderName", DbType="NVarChar(50)")]
		public string StudentGenderName
		{
			get
			{
				return this._StudentGenderName;
			}
			set
			{
				if ((this._StudentGenderName != value))
				{
					this.OnStudentGenderNameChanging(value);
					this.SendPropertyChanging();
					this._StudentGenderName = value;
					this.SendPropertyChanged("StudentGenderName");
					this.OnStudentGenderNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.PackageWeight")]
	public partial class PackageWeight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackageWeightID;
		
		private string _Name;
		
		private System.Nullable<decimal> _Weight;
		
		private System.Nullable<int> _PackageCode;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<BookPackItem> _BookPackItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackageWeightIDChanging(int value);
    partial void OnPackageWeightIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnPackageCodeChanging(System.Nullable<int> value);
    partial void OnPackageCodeChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public PackageWeight()
		{
			this._BookPackItem = default(EntityRef<BookPackItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageWeightID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PackageWeightID
		{
			get
			{
				return this._PackageWeightID;
			}
			set
			{
				if ((this._PackageWeightID != value))
				{
					this.OnPackageWeightIDChanging(value);
					this.SendPropertyChanging();
					this._PackageWeightID = value;
					this.SendPropertyChanged("PackageWeightID");
					this.OnPackageWeightIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageCode", DbType="Int")]
		public System.Nullable<int> PackageCode
		{
			get
			{
				return this._PackageCode;
			}
			set
			{
				if ((this._PackageCode != value))
				{
					if (this._BookPackItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageCodeChanging(value);
					this.SendPropertyChanging();
					this._PackageCode = value;
					this.SendPropertyChanged("PackageCode");
					this.OnPackageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPackItem_PackageWeight", Storage="_BookPackItem", ThisKey="PackageCode", OtherKey="BookPackItemID", IsForeignKey=true, DeleteRule="CASCADE")]
		public BookPackItem BookPackItem
		{
			get
			{
				return this._BookPackItem.Entity;
			}
			set
			{
				BookPackItem previousValue = this._BookPackItem.Entity;
				if (((previousValue != value) 
							|| (this._BookPackItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookPackItem.Entity = null;
						previousValue.PackageWeights.Remove(this);
					}
					this._BookPackItem.Entity = value;
					if ((value != null))
					{
						value.PackageWeights.Add(this);
						this._PackageCode = value.BookPackItemID;
					}
					else
					{
						this._PackageCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookPackItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.Exam")]
	public partial class Exam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamID;
		
		private string _ExamCode;
		
		private string _Name;
		
		private System.Nullable<int> _ExamSpecialityID;
		
		private System.Nullable<int> _StudentGenderID;
		
		private System.Nullable<int> _NumberofSections;
		
		private System.Nullable<int> _NumberofPages;
		
		private System.Nullable<int> _TimeForSection;
		
		private string _Notes;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<ExamModelItem> _ExamModelItems;
		
		private EntitySet<BookPrintingOperation> _BookPrintingOperations;
		
		private EntityRef<ExamSpeciality> _ExamSpeciality;
		
		private EntityRef<StudentGender> _StudentGender;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamIDChanging(int value);
    partial void OnExamIDChanged();
    partial void OnExamCodeChanging(string value);
    partial void OnExamCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExamSpecialityIDChanging(System.Nullable<int> value);
    partial void OnExamSpecialityIDChanged();
    partial void OnStudentGenderIDChanging(System.Nullable<int> value);
    partial void OnStudentGenderIDChanged();
    partial void OnNumberofSectionsChanging(System.Nullable<int> value);
    partial void OnNumberofSectionsChanged();
    partial void OnNumberofPagesChanging(System.Nullable<int> value);
    partial void OnNumberofPagesChanged();
    partial void OnTimeForSectionChanging(System.Nullable<int> value);
    partial void OnTimeForSectionChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Exam()
		{
			this._ExamModelItems = new EntitySet<ExamModelItem>(new Action<ExamModelItem>(this.attach_ExamModelItems), new Action<ExamModelItem>(this.detach_ExamModelItems));
			this._BookPrintingOperations = new EntitySet<BookPrintingOperation>(new Action<BookPrintingOperation>(this.attach_BookPrintingOperations), new Action<BookPrintingOperation>(this.detach_BookPrintingOperations));
			this._ExamSpeciality = default(EntityRef<ExamSpeciality>);
			this._StudentGender = default(EntityRef<StudentGender>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExamID
		{
			get
			{
				return this._ExamID;
			}
			set
			{
				if ((this._ExamID != value))
				{
					this.OnExamIDChanging(value);
					this.SendPropertyChanging();
					this._ExamID = value;
					this.SendPropertyChanged("ExamID");
					this.OnExamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamCode", DbType="NVarChar(12)")]
		public string ExamCode
		{
			get
			{
				return this._ExamCode;
			}
			set
			{
				if ((this._ExamCode != value))
				{
					this.OnExamCodeChanging(value);
					this.SendPropertyChanging();
					this._ExamCode = value;
					this.SendPropertyChanged("ExamCode");
					this.OnExamCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamSpecialityID", DbType="Int")]
		public System.Nullable<int> ExamSpecialityID
		{
			get
			{
				return this._ExamSpecialityID;
			}
			set
			{
				if ((this._ExamSpecialityID != value))
				{
					if (this._ExamSpeciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._ExamSpecialityID = value;
					this.SendPropertyChanged("ExamSpecialityID");
					this.OnExamSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentGenderID", DbType="Int")]
		public System.Nullable<int> StudentGenderID
		{
			get
			{
				return this._StudentGenderID;
			}
			set
			{
				if ((this._StudentGenderID != value))
				{
					if (this._StudentGender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentGenderIDChanging(value);
					this.SendPropertyChanging();
					this._StudentGenderID = value;
					this.SendPropertyChanged("StudentGenderID");
					this.OnStudentGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberofSections", DbType="Int")]
		public System.Nullable<int> NumberofSections
		{
			get
			{
				return this._NumberofSections;
			}
			set
			{
				if ((this._NumberofSections != value))
				{
					this.OnNumberofSectionsChanging(value);
					this.SendPropertyChanging();
					this._NumberofSections = value;
					this.SendPropertyChanged("NumberofSections");
					this.OnNumberofSectionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberofPages", DbType="Int")]
		public System.Nullable<int> NumberofPages
		{
			get
			{
				return this._NumberofPages;
			}
			set
			{
				if ((this._NumberofPages != value))
				{
					this.OnNumberofPagesChanging(value);
					this.SendPropertyChanging();
					this._NumberofPages = value;
					this.SendPropertyChanged("NumberofPages");
					this.OnNumberofPagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeForSection", DbType="Int")]
		public System.Nullable<int> TimeForSection
		{
			get
			{
				return this._TimeForSection;
			}
			set
			{
				if ((this._TimeForSection != value))
				{
					this.OnTimeForSectionChanging(value);
					this.SendPropertyChanging();
					this._TimeForSection = value;
					this.SendPropertyChanged("TimeForSection");
					this.OnTimeForSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_ExamModelItem", Storage="_ExamModelItems", ThisKey="ExamID", OtherKey="ExamID")]
		public EntitySet<ExamModelItem> ExamModelItems
		{
			get
			{
				return this._ExamModelItems;
			}
			set
			{
				this._ExamModelItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_BookPrintingOperation", Storage="_BookPrintingOperations", ThisKey="ExamID", OtherKey="ExamID")]
		public EntitySet<BookPrintingOperation> BookPrintingOperations
		{
			get
			{
				return this._BookPrintingOperations;
			}
			set
			{
				this._BookPrintingOperations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamSpeciality_Exam", Storage="_ExamSpeciality", ThisKey="ExamSpecialityID", OtherKey="ExamSpecialityID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ExamSpeciality ExamSpeciality
		{
			get
			{
				return this._ExamSpeciality.Entity;
			}
			set
			{
				ExamSpeciality previousValue = this._ExamSpeciality.Entity;
				if (((previousValue != value) 
							|| (this._ExamSpeciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExamSpeciality.Entity = null;
						previousValue.Exams.Remove(this);
					}
					this._ExamSpeciality.Entity = value;
					if ((value != null))
					{
						value.Exams.Add(this);
						this._ExamSpecialityID = value.ExamSpecialityID;
					}
					else
					{
						this._ExamSpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExamSpeciality");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentGender_Exam", Storage="_StudentGender", ThisKey="StudentGenderID", OtherKey="StudentGenderID", IsForeignKey=true)]
		public StudentGender StudentGender
		{
			get
			{
				return this._StudentGender.Entity;
			}
			set
			{
				StudentGender previousValue = this._StudentGender.Entity;
				if (((previousValue != value) 
							|| (this._StudentGender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentGender.Entity = null;
						previousValue.Exams.Remove(this);
					}
					this._StudentGender.Entity = value;
					if ((value != null))
					{
						value.Exams.Add(this);
						this._StudentGenderID = value.StudentGenderID;
					}
					else
					{
						this._StudentGenderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StudentGender");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExamModelItems(ExamModelItem entity)
		{
			this.SendPropertyChanging();
			entity.Exam = this;
		}
		
		private void detach_ExamModelItems(ExamModelItem entity)
		{
			this.SendPropertyChanging();
			entity.Exam = null;
		}
		
		private void attach_BookPrintingOperations(BookPrintingOperation entity)
		{
			this.SendPropertyChanging();
			entity.Exam = this;
		}
		
		private void detach_BookPrintingOperations(BookPrintingOperation entity)
		{
			this.SendPropertyChanging();
			entity.Exam = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.ExamModelItem")]
	public partial class ExamModelItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamModelItemID;
		
		private System.Nullable<int> _ExamID;
		
		private System.Nullable<int> _ExamModelID;
		
		private EntityRef<Exam> _Exam;
		
		private EntityRef<ExamModel> _ExamModel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamModelItemIDChanging(int value);
    partial void OnExamModelItemIDChanged();
    partial void OnExamIDChanging(System.Nullable<int> value);
    partial void OnExamIDChanged();
    partial void OnExamModelIDChanging(System.Nullable<int> value);
    partial void OnExamModelIDChanged();
    #endregion
		
		public ExamModelItem()
		{
			this._Exam = default(EntityRef<Exam>);
			this._ExamModel = default(EntityRef<ExamModel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamModelItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExamModelItemID
		{
			get
			{
				return this._ExamModelItemID;
			}
			set
			{
				if ((this._ExamModelItemID != value))
				{
					this.OnExamModelItemIDChanging(value);
					this.SendPropertyChanging();
					this._ExamModelItemID = value;
					this.SendPropertyChanged("ExamModelItemID");
					this.OnExamModelItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamID", DbType="Int")]
		public System.Nullable<int> ExamID
		{
			get
			{
				return this._ExamID;
			}
			set
			{
				if ((this._ExamID != value))
				{
					if (this._Exam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamIDChanging(value);
					this.SendPropertyChanging();
					this._ExamID = value;
					this.SendPropertyChanged("ExamID");
					this.OnExamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamModelID", DbType="Int")]
		public System.Nullable<int> ExamModelID
		{
			get
			{
				return this._ExamModelID;
			}
			set
			{
				if ((this._ExamModelID != value))
				{
					if (this._ExamModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamModelIDChanging(value);
					this.SendPropertyChanging();
					this._ExamModelID = value;
					this.SendPropertyChanged("ExamModelID");
					this.OnExamModelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_ExamModelItem", Storage="_Exam", ThisKey="ExamID", OtherKey="ExamID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Exam Exam
		{
			get
			{
				return this._Exam.Entity;
			}
			set
			{
				Exam previousValue = this._Exam.Entity;
				if (((previousValue != value) 
							|| (this._Exam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exam.Entity = null;
						previousValue.ExamModelItems.Remove(this);
					}
					this._Exam.Entity = value;
					if ((value != null))
					{
						value.ExamModelItems.Add(this);
						this._ExamID = value.ExamID;
					}
					else
					{
						this._ExamID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Exam");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamModel_ExamModelItem", Storage="_ExamModel", ThisKey="ExamModelID", OtherKey="ExamModelID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ExamModel ExamModel
		{
			get
			{
				return this._ExamModel.Entity;
			}
			set
			{
				ExamModel previousValue = this._ExamModel.Entity;
				if (((previousValue != value) 
							|| (this._ExamModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExamModel.Entity = null;
						previousValue.ExamModelItems.Remove(this);
					}
					this._ExamModel.Entity = value;
					if ((value != null))
					{
						value.ExamModelItems.Add(this);
						this._ExamModelID = value.ExamModelID;
					}
					else
					{
						this._ExamModelID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExamModel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.PackingCalculationType")]
	public partial class PackingCalculationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackingCalculationTypeID;
		
		private string _Name;
		
		private EntitySet<BookPackingOperation> _BookPackingOperations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackingCalculationTypeIDChanging(int value);
    partial void OnPackingCalculationTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public PackingCalculationType()
		{
			this._BookPackingOperations = new EntitySet<BookPackingOperation>(new Action<BookPackingOperation>(this.attach_BookPackingOperations), new Action<BookPackingOperation>(this.detach_BookPackingOperations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingCalculationTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PackingCalculationTypeID
		{
			get
			{
				return this._PackingCalculationTypeID;
			}
			set
			{
				if ((this._PackingCalculationTypeID != value))
				{
					this.OnPackingCalculationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PackingCalculationTypeID = value;
					this.SendPropertyChanged("PackingCalculationTypeID");
					this.OnPackingCalculationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackingCalculationType_BookPackingOperation", Storage="_BookPackingOperations", ThisKey="PackingCalculationTypeID", OtherKey="PackingCalculationTypeID")]
		public EntitySet<BookPackingOperation> BookPackingOperations
		{
			get
			{
				return this._BookPackingOperations;
			}
			set
			{
				this._BookPackingOperations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookPackingOperations(BookPackingOperation entity)
		{
			this.SendPropertyChanging();
			entity.PackingCalculationType = this;
		}
		
		private void detach_BookPackingOperations(BookPackingOperation entity)
		{
			this.SendPropertyChanging();
			entity.PackingCalculationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.BookPackingOperation")]
	public partial class BookPackingOperation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookPackingOperationID;
		
		private string _Name;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _BookPrintingOperationID;
		
		private System.Nullable<int> _PackagingTypeID;
		
		private System.Nullable<int> _PackingCalculationTypeID;
		
		private string _AllocatedFrom;
		
		private System.Nullable<int> _PackingValue;
		
		private System.Nullable<int> _PackageTotal;
		
		private System.Nullable<int> _PackingParentID;
		
		private EntitySet<BookPackingOperation> _BookPackingOperations;
		
		private EntitySet<BookPackItem> _BookPackItems;
		
		private EntityRef<BookPackingOperation> _BookPackingOperation1;
		
		private EntityRef<PackagingType> _PackagingType;
		
		private EntityRef<PackingCalculationType> _PackingCalculationType;
		
		private EntityRef<PackingCalculationType1> _PackingCalculationType1;
		
		private EntityRef<BookPrintingOperation> _BookPrintingOperation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookPackingOperationIDChanging(int value);
    partial void OnBookPackingOperationIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnBookPrintingOperationIDChanging(System.Nullable<int> value);
    partial void OnBookPrintingOperationIDChanged();
    partial void OnPackagingTypeIDChanging(System.Nullable<int> value);
    partial void OnPackagingTypeIDChanged();
    partial void OnPackingCalculationTypeIDChanging(System.Nullable<int> value);
    partial void OnPackingCalculationTypeIDChanged();
    partial void OnAllocatedFromChanging(string value);
    partial void OnAllocatedFromChanged();
    partial void OnPackingValueChanging(System.Nullable<int> value);
    partial void OnPackingValueChanged();
    partial void OnPackageTotalChanging(System.Nullable<int> value);
    partial void OnPackageTotalChanged();
    partial void OnPackingParentIDChanging(System.Nullable<int> value);
    partial void OnPackingParentIDChanged();
    #endregion
		
		public BookPackingOperation()
		{
			this._BookPackingOperations = new EntitySet<BookPackingOperation>(new Action<BookPackingOperation>(this.attach_BookPackingOperations), new Action<BookPackingOperation>(this.detach_BookPackingOperations));
			this._BookPackItems = new EntitySet<BookPackItem>(new Action<BookPackItem>(this.attach_BookPackItems), new Action<BookPackItem>(this.detach_BookPackItems));
			this._BookPackingOperation1 = default(EntityRef<BookPackingOperation>);
			this._PackagingType = default(EntityRef<PackagingType>);
			this._PackingCalculationType = default(EntityRef<PackingCalculationType>);
			this._PackingCalculationType1 = default(EntityRef<PackingCalculationType1>);
			this._BookPrintingOperation = default(EntityRef<BookPrintingOperation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPackingOperationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookPackingOperationID
		{
			get
			{
				return this._BookPackingOperationID;
			}
			set
			{
				if ((this._BookPackingOperationID != value))
				{
					this.OnBookPackingOperationIDChanging(value);
					this.SendPropertyChanging();
					this._BookPackingOperationID = value;
					this.SendPropertyChanged("BookPackingOperationID");
					this.OnBookPackingOperationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPrintingOperationID", DbType="Int")]
		public System.Nullable<int> BookPrintingOperationID
		{
			get
			{
				return this._BookPrintingOperationID;
			}
			set
			{
				if ((this._BookPrintingOperationID != value))
				{
					if (this._BookPrintingOperation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookPrintingOperationIDChanging(value);
					this.SendPropertyChanging();
					this._BookPrintingOperationID = value;
					this.SendPropertyChanged("BookPrintingOperationID");
					this.OnBookPrintingOperationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackagingTypeID", DbType="Int")]
		public System.Nullable<int> PackagingTypeID
		{
			get
			{
				return this._PackagingTypeID;
			}
			set
			{
				if ((this._PackagingTypeID != value))
				{
					if (this._PackagingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackagingTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PackagingTypeID = value;
					this.SendPropertyChanged("PackagingTypeID");
					this.OnPackagingTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingCalculationTypeID", DbType="Int")]
		public System.Nullable<int> PackingCalculationTypeID
		{
			get
			{
				return this._PackingCalculationTypeID;
			}
			set
			{
				if ((this._PackingCalculationTypeID != value))
				{
					if ((this._PackingCalculationType.HasLoadedOrAssignedValue || this._PackingCalculationType1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackingCalculationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PackingCalculationTypeID = value;
					this.SendPropertyChanged("PackingCalculationTypeID");
					this.OnPackingCalculationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllocatedFrom", DbType="NVarChar(50)")]
		public string AllocatedFrom
		{
			get
			{
				return this._AllocatedFrom;
			}
			set
			{
				if ((this._AllocatedFrom != value))
				{
					this.OnAllocatedFromChanging(value);
					this.SendPropertyChanging();
					this._AllocatedFrom = value;
					this.SendPropertyChanged("AllocatedFrom");
					this.OnAllocatedFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingValue", DbType="Int")]
		public System.Nullable<int> PackingValue
		{
			get
			{
				return this._PackingValue;
			}
			set
			{
				if ((this._PackingValue != value))
				{
					this.OnPackingValueChanging(value);
					this.SendPropertyChanging();
					this._PackingValue = value;
					this.SendPropertyChanged("PackingValue");
					this.OnPackingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageTotal", DbType="Int")]
		public System.Nullable<int> PackageTotal
		{
			get
			{
				return this._PackageTotal;
			}
			set
			{
				if ((this._PackageTotal != value))
				{
					this.OnPackageTotalChanging(value);
					this.SendPropertyChanging();
					this._PackageTotal = value;
					this.SendPropertyChanged("PackageTotal");
					this.OnPackageTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingParentID", DbType="Int")]
		public System.Nullable<int> PackingParentID
		{
			get
			{
				return this._PackingParentID;
			}
			set
			{
				if ((this._PackingParentID != value))
				{
					if (this._BookPackingOperation1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackingParentIDChanging(value);
					this.SendPropertyChanging();
					this._PackingParentID = value;
					this.SendPropertyChanged("PackingParentID");
					this.OnPackingParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPackingOperation_BookPackingOperation", Storage="_BookPackingOperations", ThisKey="BookPackingOperationID", OtherKey="PackingParentID")]
		public EntitySet<BookPackingOperation> BookPackingOperations
		{
			get
			{
				return this._BookPackingOperations;
			}
			set
			{
				this._BookPackingOperations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPackingOperation_BookPackItem", Storage="_BookPackItems", ThisKey="BookPackingOperationID", OtherKey="BookPackingOperationID")]
		public EntitySet<BookPackItem> BookPackItems
		{
			get
			{
				return this._BookPackItems;
			}
			set
			{
				this._BookPackItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPackingOperation_BookPackingOperation", Storage="_BookPackingOperation1", ThisKey="PackingParentID", OtherKey="BookPackingOperationID", IsForeignKey=true)]
		public BookPackingOperation BookPackingOperation1
		{
			get
			{
				return this._BookPackingOperation1.Entity;
			}
			set
			{
				BookPackingOperation previousValue = this._BookPackingOperation1.Entity;
				if (((previousValue != value) 
							|| (this._BookPackingOperation1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookPackingOperation1.Entity = null;
						previousValue.BookPackingOperations.Remove(this);
					}
					this._BookPackingOperation1.Entity = value;
					if ((value != null))
					{
						value.BookPackingOperations.Add(this);
						this._PackingParentID = value.BookPackingOperationID;
					}
					else
					{
						this._PackingParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookPackingOperation1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackagingType_BookPackingOperation", Storage="_PackagingType", ThisKey="PackagingTypeID", OtherKey="PackagingTypeID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PackagingType PackagingType
		{
			get
			{
				return this._PackagingType.Entity;
			}
			set
			{
				PackagingType previousValue = this._PackagingType.Entity;
				if (((previousValue != value) 
							|| (this._PackagingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackagingType.Entity = null;
						previousValue.BookPackingOperations.Remove(this);
					}
					this._PackagingType.Entity = value;
					if ((value != null))
					{
						value.BookPackingOperations.Add(this);
						this._PackagingTypeID = value.PackagingTypeID;
					}
					else
					{
						this._PackagingTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PackagingType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackingCalculationType_BookPackingOperation", Storage="_PackingCalculationType", ThisKey="PackingCalculationTypeID", OtherKey="PackingCalculationTypeID", IsForeignKey=true)]
		public PackingCalculationType PackingCalculationType
		{
			get
			{
				return this._PackingCalculationType.Entity;
			}
			set
			{
				PackingCalculationType previousValue = this._PackingCalculationType.Entity;
				if (((previousValue != value) 
							|| (this._PackingCalculationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackingCalculationType.Entity = null;
						previousValue.BookPackingOperations.Remove(this);
					}
					this._PackingCalculationType.Entity = value;
					if ((value != null))
					{
						value.BookPackingOperations.Add(this);
						this._PackingCalculationTypeID = value.PackingCalculationTypeID;
					}
					else
					{
						this._PackingCalculationTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PackingCalculationType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackingCalculationType1_BookPackingOperation", Storage="_PackingCalculationType1", ThisKey="PackingCalculationTypeID", OtherKey="PackingCalculationTypeID", IsForeignKey=true)]
		public PackingCalculationType1 PackingCalculationType1
		{
			get
			{
				return this._PackingCalculationType1.Entity;
			}
			set
			{
				PackingCalculationType1 previousValue = this._PackingCalculationType1.Entity;
				if (((previousValue != value) 
							|| (this._PackingCalculationType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackingCalculationType1.Entity = null;
						previousValue.BookPackingOperations.Remove(this);
					}
					this._PackingCalculationType1.Entity = value;
					if ((value != null))
					{
						value.BookPackingOperations.Add(this);
						this._PackingCalculationTypeID = value.PackingCalculationTypeID;
					}
					else
					{
						this._PackingCalculationTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PackingCalculationType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPrintingOperation_BookPackingOperation", Storage="_BookPrintingOperation", ThisKey="BookPrintingOperationID", OtherKey="BookPrintingOperationID", IsForeignKey=true, DeleteRule="CASCADE")]
		public BookPrintingOperation BookPrintingOperation
		{
			get
			{
				return this._BookPrintingOperation.Entity;
			}
			set
			{
				BookPrintingOperation previousValue = this._BookPrintingOperation.Entity;
				if (((previousValue != value) 
							|| (this._BookPrintingOperation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookPrintingOperation.Entity = null;
						previousValue.BookPackingOperations.Remove(this);
					}
					this._BookPrintingOperation.Entity = value;
					if ((value != null))
					{
						value.BookPackingOperations.Add(this);
						this._BookPrintingOperationID = value.BookPrintingOperationID;
					}
					else
					{
						this._BookPrintingOperationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookPrintingOperation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookPackingOperations(BookPackingOperation entity)
		{
			this.SendPropertyChanging();
			entity.BookPackingOperation1 = this;
		}
		
		private void detach_BookPackingOperations(BookPackingOperation entity)
		{
			this.SendPropertyChanging();
			entity.BookPackingOperation1 = null;
		}
		
		private void attach_BookPackItems(BookPackItem entity)
		{
			this.SendPropertyChanging();
			entity.BookPackingOperation = this;
		}
		
		private void detach_BookPackItems(BookPackItem entity)
		{
			this.SendPropertyChanging();
			entity.BookPackingOperation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.BookPackItemModel")]
	public partial class BookPackItemModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookPackItemModelID;
		
		private System.Nullable<int> _BookPackItemID;
		
		private System.Nullable<int> _ExamModelID;
		
		private EntityRef<ExamModel> _ExamModel;
		
		private EntityRef<BookPackItem> _BookPackItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookPackItemModelIDChanging(int value);
    partial void OnBookPackItemModelIDChanged();
    partial void OnBookPackItemIDChanging(System.Nullable<int> value);
    partial void OnBookPackItemIDChanged();
    partial void OnExamModelIDChanging(System.Nullable<int> value);
    partial void OnExamModelIDChanged();
    #endregion
		
		public BookPackItemModel()
		{
			this._ExamModel = default(EntityRef<ExamModel>);
			this._BookPackItem = default(EntityRef<BookPackItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPackItemModelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookPackItemModelID
		{
			get
			{
				return this._BookPackItemModelID;
			}
			set
			{
				if ((this._BookPackItemModelID != value))
				{
					this.OnBookPackItemModelIDChanging(value);
					this.SendPropertyChanging();
					this._BookPackItemModelID = value;
					this.SendPropertyChanged("BookPackItemModelID");
					this.OnBookPackItemModelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPackItemID", DbType="Int")]
		public System.Nullable<int> BookPackItemID
		{
			get
			{
				return this._BookPackItemID;
			}
			set
			{
				if ((this._BookPackItemID != value))
				{
					if (this._BookPackItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookPackItemIDChanging(value);
					this.SendPropertyChanging();
					this._BookPackItemID = value;
					this.SendPropertyChanged("BookPackItemID");
					this.OnBookPackItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamModelID", DbType="Int")]
		public System.Nullable<int> ExamModelID
		{
			get
			{
				return this._ExamModelID;
			}
			set
			{
				if ((this._ExamModelID != value))
				{
					if (this._ExamModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamModelIDChanging(value);
					this.SendPropertyChanging();
					this._ExamModelID = value;
					this.SendPropertyChanged("ExamModelID");
					this.OnExamModelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamModel_BookPackItemModel", Storage="_ExamModel", ThisKey="ExamModelID", OtherKey="ExamModelID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ExamModel ExamModel
		{
			get
			{
				return this._ExamModel.Entity;
			}
			set
			{
				ExamModel previousValue = this._ExamModel.Entity;
				if (((previousValue != value) 
							|| (this._ExamModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExamModel.Entity = null;
						previousValue.BookPackItemModels.Remove(this);
					}
					this._ExamModel.Entity = value;
					if ((value != null))
					{
						value.BookPackItemModels.Add(this);
						this._ExamModelID = value.ExamModelID;
					}
					else
					{
						this._ExamModelID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExamModel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPackItem_BookPackItemModel", Storage="_BookPackItem", ThisKey="BookPackItemID", OtherKey="BookPackItemID", IsForeignKey=true, DeleteRule="CASCADE")]
		public BookPackItem BookPackItem
		{
			get
			{
				return this._BookPackItem.Entity;
			}
			set
			{
				BookPackItem previousValue = this._BookPackItem.Entity;
				if (((previousValue != value) 
							|| (this._BookPackItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookPackItem.Entity = null;
						previousValue.BookPackItemModels.Remove(this);
					}
					this._BookPackItem.Entity = value;
					if ((value != null))
					{
						value.BookPackItemModels.Add(this);
						this._BookPackItemID = value.BookPackItemID;
					}
					else
					{
						this._BookPackItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookPackItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.BookPackItemOperation")]
	public partial class BookPackItemOperation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookPackItemOperationID;
		
		private string _Name;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _BookPackItemID;
		
		private System.Nullable<int> _PackagingTypeID;
		
		private System.Nullable<int> _PackingCalculationTypeID;
		
		private string _AllocatedFrom;
		
		private System.Nullable<int> _PackingValue;
		
		private System.Nullable<int> _PackageTotal;
		
		private System.Nullable<int> _PackingParentID;
		
		private EntityRef<BookPackItem> _BookPackItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookPackItemOperationIDChanging(int value);
    partial void OnBookPackItemOperationIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnBookPackItemIDChanging(System.Nullable<int> value);
    partial void OnBookPackItemIDChanged();
    partial void OnPackagingTypeIDChanging(System.Nullable<int> value);
    partial void OnPackagingTypeIDChanged();
    partial void OnPackingCalculationTypeIDChanging(System.Nullable<int> value);
    partial void OnPackingCalculationTypeIDChanged();
    partial void OnAllocatedFromChanging(string value);
    partial void OnAllocatedFromChanged();
    partial void OnPackingValueChanging(System.Nullable<int> value);
    partial void OnPackingValueChanged();
    partial void OnPackageTotalChanging(System.Nullable<int> value);
    partial void OnPackageTotalChanged();
    partial void OnPackingParentIDChanging(System.Nullable<int> value);
    partial void OnPackingParentIDChanged();
    #endregion
		
		public BookPackItemOperation()
		{
			this._BookPackItem = default(EntityRef<BookPackItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPackItemOperationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookPackItemOperationID
		{
			get
			{
				return this._BookPackItemOperationID;
			}
			set
			{
				if ((this._BookPackItemOperationID != value))
				{
					this.OnBookPackItemOperationIDChanging(value);
					this.SendPropertyChanging();
					this._BookPackItemOperationID = value;
					this.SendPropertyChanged("BookPackItemOperationID");
					this.OnBookPackItemOperationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPackItemID", DbType="Int")]
		public System.Nullable<int> BookPackItemID
		{
			get
			{
				return this._BookPackItemID;
			}
			set
			{
				if ((this._BookPackItemID != value))
				{
					if (this._BookPackItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookPackItemIDChanging(value);
					this.SendPropertyChanging();
					this._BookPackItemID = value;
					this.SendPropertyChanged("BookPackItemID");
					this.OnBookPackItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackagingTypeID", DbType="Int")]
		public System.Nullable<int> PackagingTypeID
		{
			get
			{
				return this._PackagingTypeID;
			}
			set
			{
				if ((this._PackagingTypeID != value))
				{
					this.OnPackagingTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PackagingTypeID = value;
					this.SendPropertyChanged("PackagingTypeID");
					this.OnPackagingTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingCalculationTypeID", DbType="Int")]
		public System.Nullable<int> PackingCalculationTypeID
		{
			get
			{
				return this._PackingCalculationTypeID;
			}
			set
			{
				if ((this._PackingCalculationTypeID != value))
				{
					this.OnPackingCalculationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PackingCalculationTypeID = value;
					this.SendPropertyChanged("PackingCalculationTypeID");
					this.OnPackingCalculationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllocatedFrom", DbType="NVarChar(50)")]
		public string AllocatedFrom
		{
			get
			{
				return this._AllocatedFrom;
			}
			set
			{
				if ((this._AllocatedFrom != value))
				{
					this.OnAllocatedFromChanging(value);
					this.SendPropertyChanging();
					this._AllocatedFrom = value;
					this.SendPropertyChanged("AllocatedFrom");
					this.OnAllocatedFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingValue", DbType="Int")]
		public System.Nullable<int> PackingValue
		{
			get
			{
				return this._PackingValue;
			}
			set
			{
				if ((this._PackingValue != value))
				{
					this.OnPackingValueChanging(value);
					this.SendPropertyChanging();
					this._PackingValue = value;
					this.SendPropertyChanged("PackingValue");
					this.OnPackingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageTotal", DbType="Int")]
		public System.Nullable<int> PackageTotal
		{
			get
			{
				return this._PackageTotal;
			}
			set
			{
				if ((this._PackageTotal != value))
				{
					this.OnPackageTotalChanging(value);
					this.SendPropertyChanging();
					this._PackageTotal = value;
					this.SendPropertyChanged("PackageTotal");
					this.OnPackageTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingParentID", DbType="Int")]
		public System.Nullable<int> PackingParentID
		{
			get
			{
				return this._PackingParentID;
			}
			set
			{
				if ((this._PackingParentID != value))
				{
					this.OnPackingParentIDChanging(value);
					this.SendPropertyChanging();
					this._PackingParentID = value;
					this.SendPropertyChanged("PackingParentID");
					this.OnPackingParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPackItem_BookPackItemOperation", Storage="_BookPackItem", ThisKey="BookPackItemID", OtherKey="BookPackItemID", IsForeignKey=true, DeleteRule="CASCADE")]
		public BookPackItem BookPackItem
		{
			get
			{
				return this._BookPackItem.Entity;
			}
			set
			{
				BookPackItem previousValue = this._BookPackItem.Entity;
				if (((previousValue != value) 
							|| (this._BookPackItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookPackItem.Entity = null;
						previousValue.BookPackItemOperations.Remove(this);
					}
					this._BookPackItem.Entity = value;
					if ((value != null))
					{
						value.BookPackItemOperations.Add(this);
						this._BookPackItemID = value.BookPackItemID;
					}
					else
					{
						this._BookPackItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookPackItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.ContainerRequest")]
	public partial class ContainerRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContainerRequestID;
		
		private System.Nullable<int> _ExamCenterRequiredExamsID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<int> _ModifiedBy;
		
		private EntitySet<ContainerRequestPack> _ContainerRequestPacks;
		
		private EntityRef<ExamCenterRequiredExam> _ExamCenterRequiredExam;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContainerRequestIDChanging(int value);
    partial void OnContainerRequestIDChanged();
    partial void OnExamCenterRequiredExamsIDChanging(System.Nullable<int> value);
    partial void OnExamCenterRequiredExamsIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    #endregion
		
		public ContainerRequest()
		{
			this._ContainerRequestPacks = new EntitySet<ContainerRequestPack>(new Action<ContainerRequestPack>(this.attach_ContainerRequestPacks), new Action<ContainerRequestPack>(this.detach_ContainerRequestPacks));
			this._ExamCenterRequiredExam = default(EntityRef<ExamCenterRequiredExam>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainerRequestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContainerRequestID
		{
			get
			{
				return this._ContainerRequestID;
			}
			set
			{
				if ((this._ContainerRequestID != value))
				{
					this.OnContainerRequestIDChanging(value);
					this.SendPropertyChanging();
					this._ContainerRequestID = value;
					this.SendPropertyChanged("ContainerRequestID");
					this.OnContainerRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamCenterRequiredExamsID", DbType="Int")]
		public System.Nullable<int> ExamCenterRequiredExamsID
		{
			get
			{
				return this._ExamCenterRequiredExamsID;
			}
			set
			{
				if ((this._ExamCenterRequiredExamsID != value))
				{
					if (this._ExamCenterRequiredExam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamCenterRequiredExamsIDChanging(value);
					this.SendPropertyChanging();
					this._ExamCenterRequiredExamsID = value;
					this.SendPropertyChanged("ExamCenterRequiredExamsID");
					this.OnExamCenterRequiredExamsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContainerRequest_ContainerRequestPack", Storage="_ContainerRequestPacks", ThisKey="ContainerRequestID", OtherKey="ContainerRequestID")]
		public EntitySet<ContainerRequestPack> ContainerRequestPacks
		{
			get
			{
				return this._ContainerRequestPacks;
			}
			set
			{
				this._ContainerRequestPacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamCenterRequiredExam_ContainerRequest", Storage="_ExamCenterRequiredExam", ThisKey="ExamCenterRequiredExamsID", OtherKey="ExamCenterRequiredExamsID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ExamCenterRequiredExam ExamCenterRequiredExam
		{
			get
			{
				return this._ExamCenterRequiredExam.Entity;
			}
			set
			{
				ExamCenterRequiredExam previousValue = this._ExamCenterRequiredExam.Entity;
				if (((previousValue != value) 
							|| (this._ExamCenterRequiredExam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExamCenterRequiredExam.Entity = null;
						previousValue.ContainerRequests.Remove(this);
					}
					this._ExamCenterRequiredExam.Entity = value;
					if ((value != null))
					{
						value.ContainerRequests.Add(this);
						this._ExamCenterRequiredExamsID = value.ExamCenterRequiredExamsID;
					}
					else
					{
						this._ExamCenterRequiredExamsID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExamCenterRequiredExam");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContainerRequestPacks(ContainerRequestPack entity)
		{
			this.SendPropertyChanging();
			entity.ContainerRequest = this;
		}
		
		private void detach_ContainerRequestPacks(ContainerRequestPack entity)
		{
			this.SendPropertyChanging();
			entity.ContainerRequest = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.ContainerRequestPack")]
	public partial class ContainerRequestPack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContainerRequestPackID;
		
		private System.Nullable<int> _ContainerRequestID;
		
		private System.Nullable<int> _BookPackItemID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _CreatedBy;
		
		private EntityRef<ContainerRequest> _ContainerRequest;
		
		private EntityRef<BookPackItem> _BookPackItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContainerRequestPackIDChanging(int value);
    partial void OnContainerRequestPackIDChanged();
    partial void OnContainerRequestIDChanging(System.Nullable<int> value);
    partial void OnContainerRequestIDChanged();
    partial void OnBookPackItemIDChanging(System.Nullable<int> value);
    partial void OnBookPackItemIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedByChanged();
    #endregion
		
		public ContainerRequestPack()
		{
			this._ContainerRequest = default(EntityRef<ContainerRequest>);
			this._BookPackItem = default(EntityRef<BookPackItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainerRequestPackID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContainerRequestPackID
		{
			get
			{
				return this._ContainerRequestPackID;
			}
			set
			{
				if ((this._ContainerRequestPackID != value))
				{
					this.OnContainerRequestPackIDChanging(value);
					this.SendPropertyChanging();
					this._ContainerRequestPackID = value;
					this.SendPropertyChanged("ContainerRequestPackID");
					this.OnContainerRequestPackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainerRequestID", DbType="Int")]
		public System.Nullable<int> ContainerRequestID
		{
			get
			{
				return this._ContainerRequestID;
			}
			set
			{
				if ((this._ContainerRequestID != value))
				{
					if (this._ContainerRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContainerRequestIDChanging(value);
					this.SendPropertyChanging();
					this._ContainerRequestID = value;
					this.SendPropertyChanged("ContainerRequestID");
					this.OnContainerRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPackItemID", DbType="Int")]
		public System.Nullable<int> BookPackItemID
		{
			get
			{
				return this._BookPackItemID;
			}
			set
			{
				if ((this._BookPackItemID != value))
				{
					if (this._BookPackItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookPackItemIDChanging(value);
					this.SendPropertyChanging();
					this._BookPackItemID = value;
					this.SendPropertyChanged("BookPackItemID");
					this.OnBookPackItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContainerRequest_ContainerRequestPack", Storage="_ContainerRequest", ThisKey="ContainerRequestID", OtherKey="ContainerRequestID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ContainerRequest ContainerRequest
		{
			get
			{
				return this._ContainerRequest.Entity;
			}
			set
			{
				ContainerRequest previousValue = this._ContainerRequest.Entity;
				if (((previousValue != value) 
							|| (this._ContainerRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContainerRequest.Entity = null;
						previousValue.ContainerRequestPacks.Remove(this);
					}
					this._ContainerRequest.Entity = value;
					if ((value != null))
					{
						value.ContainerRequestPacks.Add(this);
						this._ContainerRequestID = value.ContainerRequestID;
					}
					else
					{
						this._ContainerRequestID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ContainerRequest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPackItem_ContainerRequestPack", Storage="_BookPackItem", ThisKey="BookPackItemID", OtherKey="BookPackItemID", IsForeignKey=true)]
		public BookPackItem BookPackItem
		{
			get
			{
				return this._BookPackItem.Entity;
			}
			set
			{
				BookPackItem previousValue = this._BookPackItem.Entity;
				if (((previousValue != value) 
							|| (this._BookPackItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookPackItem.Entity = null;
						previousValue.ContainerRequestPacks.Remove(this);
					}
					this._BookPackItem.Entity = value;
					if ((value != null))
					{
						value.ContainerRequestPacks.Add(this);
						this._BookPackItemID = value.BookPackItemID;
					}
					else
					{
						this._BookPackItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookPackItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.ExamCenterRequiredExams")]
	public partial class ExamCenterRequiredExam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamCenterRequiredExamsID;
		
		private System.Nullable<int> _ExamPeriodID;
		
		private System.Nullable<int> _ExamCenterID;
		
		private System.Nullable<int> _RequestPreparationStatusID;
		
		private string _FileNeedsPath;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<int> _ModifiedBy;
		
		private EntitySet<ContainerRequest> _ContainerRequests;
		
		private EntitySet<ExamRequirementItem> _ExamRequirementItems;
		
		private EntitySet<ShippingBag> _ShippingBags;
		
		private EntityRef<ExamCenter> _ExamCenter;
		
		private EntityRef<ExamPeriod> _ExamPeriod;
		
		private EntityRef<RequestPreparationStatus> _RequestPreparationStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamCenterRequiredExamsIDChanging(int value);
    partial void OnExamCenterRequiredExamsIDChanged();
    partial void OnExamPeriodIDChanging(System.Nullable<int> value);
    partial void OnExamPeriodIDChanged();
    partial void OnExamCenterIDChanging(System.Nullable<int> value);
    partial void OnExamCenterIDChanged();
    partial void OnRequestPreparationStatusIDChanging(System.Nullable<int> value);
    partial void OnRequestPreparationStatusIDChanged();
    partial void OnFileNeedsPathChanging(string value);
    partial void OnFileNeedsPathChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    #endregion
		
		public ExamCenterRequiredExam()
		{
			this._ContainerRequests = new EntitySet<ContainerRequest>(new Action<ContainerRequest>(this.attach_ContainerRequests), new Action<ContainerRequest>(this.detach_ContainerRequests));
			this._ExamRequirementItems = new EntitySet<ExamRequirementItem>(new Action<ExamRequirementItem>(this.attach_ExamRequirementItems), new Action<ExamRequirementItem>(this.detach_ExamRequirementItems));
			this._ShippingBags = new EntitySet<ShippingBag>(new Action<ShippingBag>(this.attach_ShippingBags), new Action<ShippingBag>(this.detach_ShippingBags));
			this._ExamCenter = default(EntityRef<ExamCenter>);
			this._ExamPeriod = default(EntityRef<ExamPeriod>);
			this._RequestPreparationStatus = default(EntityRef<RequestPreparationStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamCenterRequiredExamsID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExamCenterRequiredExamsID
		{
			get
			{
				return this._ExamCenterRequiredExamsID;
			}
			set
			{
				if ((this._ExamCenterRequiredExamsID != value))
				{
					this.OnExamCenterRequiredExamsIDChanging(value);
					this.SendPropertyChanging();
					this._ExamCenterRequiredExamsID = value;
					this.SendPropertyChanged("ExamCenterRequiredExamsID");
					this.OnExamCenterRequiredExamsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamPeriodID", DbType="Int")]
		public System.Nullable<int> ExamPeriodID
		{
			get
			{
				return this._ExamPeriodID;
			}
			set
			{
				if ((this._ExamPeriodID != value))
				{
					if (this._ExamPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamPeriodIDChanging(value);
					this.SendPropertyChanging();
					this._ExamPeriodID = value;
					this.SendPropertyChanged("ExamPeriodID");
					this.OnExamPeriodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamCenterID", DbType="Int")]
		public System.Nullable<int> ExamCenterID
		{
			get
			{
				return this._ExamCenterID;
			}
			set
			{
				if ((this._ExamCenterID != value))
				{
					if (this._ExamCenter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamCenterIDChanging(value);
					this.SendPropertyChanging();
					this._ExamCenterID = value;
					this.SendPropertyChanged("ExamCenterID");
					this.OnExamCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestPreparationStatusID", DbType="Int")]
		public System.Nullable<int> RequestPreparationStatusID
		{
			get
			{
				return this._RequestPreparationStatusID;
			}
			set
			{
				if ((this._RequestPreparationStatusID != value))
				{
					if (this._RequestPreparationStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestPreparationStatusIDChanging(value);
					this.SendPropertyChanging();
					this._RequestPreparationStatusID = value;
					this.SendPropertyChanged("RequestPreparationStatusID");
					this.OnRequestPreparationStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileNeedsPath", DbType="NVarChar(500)")]
		public string FileNeedsPath
		{
			get
			{
				return this._FileNeedsPath;
			}
			set
			{
				if ((this._FileNeedsPath != value))
				{
					this.OnFileNeedsPathChanging(value);
					this.SendPropertyChanging();
					this._FileNeedsPath = value;
					this.SendPropertyChanged("FileNeedsPath");
					this.OnFileNeedsPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamCenterRequiredExam_ContainerRequest", Storage="_ContainerRequests", ThisKey="ExamCenterRequiredExamsID", OtherKey="ExamCenterRequiredExamsID")]
		public EntitySet<ContainerRequest> ContainerRequests
		{
			get
			{
				return this._ContainerRequests;
			}
			set
			{
				this._ContainerRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamCenterRequiredExam_ExamRequirementItem", Storage="_ExamRequirementItems", ThisKey="ExamCenterRequiredExamsID", OtherKey="ExamCenterRequiredExamsID")]
		public EntitySet<ExamRequirementItem> ExamRequirementItems
		{
			get
			{
				return this._ExamRequirementItems;
			}
			set
			{
				this._ExamRequirementItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamCenterRequiredExam_ShippingBag", Storage="_ShippingBags", ThisKey="ExamCenterRequiredExamsID", OtherKey="ExamCenterRequiredExamsID")]
		public EntitySet<ShippingBag> ShippingBags
		{
			get
			{
				return this._ShippingBags;
			}
			set
			{
				this._ShippingBags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamCenter_ExamCenterRequiredExam", Storage="_ExamCenter", ThisKey="ExamCenterID", OtherKey="ExaminationCenterID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ExamCenter ExamCenter
		{
			get
			{
				return this._ExamCenter.Entity;
			}
			set
			{
				ExamCenter previousValue = this._ExamCenter.Entity;
				if (((previousValue != value) 
							|| (this._ExamCenter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExamCenter.Entity = null;
						previousValue.ExamCenterRequiredExams.Remove(this);
					}
					this._ExamCenter.Entity = value;
					if ((value != null))
					{
						value.ExamCenterRequiredExams.Add(this);
						this._ExamCenterID = value.ExaminationCenterID;
					}
					else
					{
						this._ExamCenterID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExamCenter");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamPeriod_ExamCenterRequiredExam", Storage="_ExamPeriod", ThisKey="ExamPeriodID", OtherKey="ExamPeriodID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ExamPeriod ExamPeriod
		{
			get
			{
				return this._ExamPeriod.Entity;
			}
			set
			{
				ExamPeriod previousValue = this._ExamPeriod.Entity;
				if (((previousValue != value) 
							|| (this._ExamPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExamPeriod.Entity = null;
						previousValue.ExamCenterRequiredExams.Remove(this);
					}
					this._ExamPeriod.Entity = value;
					if ((value != null))
					{
						value.ExamCenterRequiredExams.Add(this);
						this._ExamPeriodID = value.ExamPeriodID;
					}
					else
					{
						this._ExamPeriodID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExamPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestPreparationStatus_ExamCenterRequiredExam", Storage="_RequestPreparationStatus", ThisKey="RequestPreparationStatusID", OtherKey="RequestPreparationStatusID", IsForeignKey=true)]
		public RequestPreparationStatus RequestPreparationStatus
		{
			get
			{
				return this._RequestPreparationStatus.Entity;
			}
			set
			{
				RequestPreparationStatus previousValue = this._RequestPreparationStatus.Entity;
				if (((previousValue != value) 
							|| (this._RequestPreparationStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestPreparationStatus.Entity = null;
						previousValue.ExamCenterRequiredExams.Remove(this);
					}
					this._RequestPreparationStatus.Entity = value;
					if ((value != null))
					{
						value.ExamCenterRequiredExams.Add(this);
						this._RequestPreparationStatusID = value.RequestPreparationStatusID;
					}
					else
					{
						this._RequestPreparationStatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RequestPreparationStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContainerRequests(ContainerRequest entity)
		{
			this.SendPropertyChanging();
			entity.ExamCenterRequiredExam = this;
		}
		
		private void detach_ContainerRequests(ContainerRequest entity)
		{
			this.SendPropertyChanging();
			entity.ExamCenterRequiredExam = null;
		}
		
		private void attach_ExamRequirementItems(ExamRequirementItem entity)
		{
			this.SendPropertyChanging();
			entity.ExamCenterRequiredExam = this;
		}
		
		private void detach_ExamRequirementItems(ExamRequirementItem entity)
		{
			this.SendPropertyChanging();
			entity.ExamCenterRequiredExam = null;
		}
		
		private void attach_ShippingBags(ShippingBag entity)
		{
			this.SendPropertyChanging();
			entity.ExamCenterRequiredExam = this;
		}
		
		private void detach_ShippingBags(ShippingBag entity)
		{
			this.SendPropertyChanging();
			entity.ExamCenterRequiredExam = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.ExamRequirementItem")]
	public partial class ExamRequirementItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamRequirementItemID;
		
		private System.Nullable<int> _ExamCenterRequiredExamsID;
		
		private System.Nullable<int> _ExamID;
		
		private System.Nullable<int> _PrintsForOneModel;
		
		private System.Nullable<int> _ExamsNeededForA3;
		
		private System.Nullable<int> _ExamsNeededForA4;
		
		private System.Nullable<int> _ExamsNeededForCD;
		
		private EntityRef<ExamCenterRequiredExam> _ExamCenterRequiredExam;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamRequirementItemIDChanging(int value);
    partial void OnExamRequirementItemIDChanged();
    partial void OnExamCenterRequiredExamsIDChanging(System.Nullable<int> value);
    partial void OnExamCenterRequiredExamsIDChanged();
    partial void OnExamIDChanging(System.Nullable<int> value);
    partial void OnExamIDChanged();
    partial void OnPrintsForOneModelChanging(System.Nullable<int> value);
    partial void OnPrintsForOneModelChanged();
    partial void OnExamsNeededForA3Changing(System.Nullable<int> value);
    partial void OnExamsNeededForA3Changed();
    partial void OnExamsNeededForA4Changing(System.Nullable<int> value);
    partial void OnExamsNeededForA4Changed();
    partial void OnExamsNeededForCDChanging(System.Nullable<int> value);
    partial void OnExamsNeededForCDChanged();
    #endregion
		
		public ExamRequirementItem()
		{
			this._ExamCenterRequiredExam = default(EntityRef<ExamCenterRequiredExam>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamRequirementItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExamRequirementItemID
		{
			get
			{
				return this._ExamRequirementItemID;
			}
			set
			{
				if ((this._ExamRequirementItemID != value))
				{
					this.OnExamRequirementItemIDChanging(value);
					this.SendPropertyChanging();
					this._ExamRequirementItemID = value;
					this.SendPropertyChanged("ExamRequirementItemID");
					this.OnExamRequirementItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamCenterRequiredExamsID", DbType="Int")]
		public System.Nullable<int> ExamCenterRequiredExamsID
		{
			get
			{
				return this._ExamCenterRequiredExamsID;
			}
			set
			{
				if ((this._ExamCenterRequiredExamsID != value))
				{
					if (this._ExamCenterRequiredExam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamCenterRequiredExamsIDChanging(value);
					this.SendPropertyChanging();
					this._ExamCenterRequiredExamsID = value;
					this.SendPropertyChanged("ExamCenterRequiredExamsID");
					this.OnExamCenterRequiredExamsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamID", DbType="Int")]
		public System.Nullable<int> ExamID
		{
			get
			{
				return this._ExamID;
			}
			set
			{
				if ((this._ExamID != value))
				{
					this.OnExamIDChanging(value);
					this.SendPropertyChanging();
					this._ExamID = value;
					this.SendPropertyChanged("ExamID");
					this.OnExamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintsForOneModel", DbType="Int")]
		public System.Nullable<int> PrintsForOneModel
		{
			get
			{
				return this._PrintsForOneModel;
			}
			set
			{
				if ((this._PrintsForOneModel != value))
				{
					this.OnPrintsForOneModelChanging(value);
					this.SendPropertyChanging();
					this._PrintsForOneModel = value;
					this.SendPropertyChanged("PrintsForOneModel");
					this.OnPrintsForOneModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamsNeededForA3", DbType="Int")]
		public System.Nullable<int> ExamsNeededForA3
		{
			get
			{
				return this._ExamsNeededForA3;
			}
			set
			{
				if ((this._ExamsNeededForA3 != value))
				{
					this.OnExamsNeededForA3Changing(value);
					this.SendPropertyChanging();
					this._ExamsNeededForA3 = value;
					this.SendPropertyChanged("ExamsNeededForA3");
					this.OnExamsNeededForA3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamsNeededForA4", DbType="Int")]
		public System.Nullable<int> ExamsNeededForA4
		{
			get
			{
				return this._ExamsNeededForA4;
			}
			set
			{
				if ((this._ExamsNeededForA4 != value))
				{
					this.OnExamsNeededForA4Changing(value);
					this.SendPropertyChanging();
					this._ExamsNeededForA4 = value;
					this.SendPropertyChanged("ExamsNeededForA4");
					this.OnExamsNeededForA4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamsNeededForCD", DbType="Int")]
		public System.Nullable<int> ExamsNeededForCD
		{
			get
			{
				return this._ExamsNeededForCD;
			}
			set
			{
				if ((this._ExamsNeededForCD != value))
				{
					this.OnExamsNeededForCDChanging(value);
					this.SendPropertyChanging();
					this._ExamsNeededForCD = value;
					this.SendPropertyChanged("ExamsNeededForCD");
					this.OnExamsNeededForCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamCenterRequiredExam_ExamRequirementItem", Storage="_ExamCenterRequiredExam", ThisKey="ExamCenterRequiredExamsID", OtherKey="ExamCenterRequiredExamsID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ExamCenterRequiredExam ExamCenterRequiredExam
		{
			get
			{
				return this._ExamCenterRequiredExam.Entity;
			}
			set
			{
				ExamCenterRequiredExam previousValue = this._ExamCenterRequiredExam.Entity;
				if (((previousValue != value) 
							|| (this._ExamCenterRequiredExam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExamCenterRequiredExam.Entity = null;
						previousValue.ExamRequirementItems.Remove(this);
					}
					this._ExamCenterRequiredExam.Entity = value;
					if ((value != null))
					{
						value.ExamRequirementItems.Add(this);
						this._ExamCenterRequiredExamsID = value.ExamCenterRequiredExamsID;
					}
					else
					{
						this._ExamCenterRequiredExamsID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExamCenterRequiredExam");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.PackingCalculationType")]
	public partial class PackingCalculationType1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackingCalculationTypeID;
		
		private string _Name;
		
		private EntitySet<BookPackingOperation> _BookPackingOperations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackingCalculationTypeIDChanging(int value);
    partial void OnPackingCalculationTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public PackingCalculationType1()
		{
			this._BookPackingOperations = new EntitySet<BookPackingOperation>(new Action<BookPackingOperation>(this.attach_BookPackingOperations), new Action<BookPackingOperation>(this.detach_BookPackingOperations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingCalculationTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PackingCalculationTypeID
		{
			get
			{
				return this._PackingCalculationTypeID;
			}
			set
			{
				if ((this._PackingCalculationTypeID != value))
				{
					this.OnPackingCalculationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PackingCalculationTypeID = value;
					this.SendPropertyChanged("PackingCalculationTypeID");
					this.OnPackingCalculationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackingCalculationType1_BookPackingOperation", Storage="_BookPackingOperations", ThisKey="PackingCalculationTypeID", OtherKey="PackingCalculationTypeID")]
		public EntitySet<BookPackingOperation> BookPackingOperations
		{
			get
			{
				return this._BookPackingOperations;
			}
			set
			{
				this._BookPackingOperations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookPackingOperations(BookPackingOperation entity)
		{
			this.SendPropertyChanging();
			entity.PackingCalculationType1 = this;
		}
		
		private void detach_BookPackingOperations(BookPackingOperation entity)
		{
			this.SendPropertyChanging();
			entity.PackingCalculationType1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.RequestPreparationStatus")]
	public partial class RequestPreparationStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RequestPreparationStatusID;
		
		private string _Name;
		
		private EntitySet<ExamCenterRequiredExam> _ExamCenterRequiredExams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestPreparationStatusIDChanging(int value);
    partial void OnRequestPreparationStatusIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public RequestPreparationStatus()
		{
			this._ExamCenterRequiredExams = new EntitySet<ExamCenterRequiredExam>(new Action<ExamCenterRequiredExam>(this.attach_ExamCenterRequiredExams), new Action<ExamCenterRequiredExam>(this.detach_ExamCenterRequiredExams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestPreparationStatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RequestPreparationStatusID
		{
			get
			{
				return this._RequestPreparationStatusID;
			}
			set
			{
				if ((this._RequestPreparationStatusID != value))
				{
					this.OnRequestPreparationStatusIDChanging(value);
					this.SendPropertyChanging();
					this._RequestPreparationStatusID = value;
					this.SendPropertyChanged("RequestPreparationStatusID");
					this.OnRequestPreparationStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestPreparationStatus_ExamCenterRequiredExam", Storage="_ExamCenterRequiredExams", ThisKey="RequestPreparationStatusID", OtherKey="RequestPreparationStatusID")]
		public EntitySet<ExamCenterRequiredExam> ExamCenterRequiredExams
		{
			get
			{
				return this._ExamCenterRequiredExams;
			}
			set
			{
				this._ExamCenterRequiredExams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExamCenterRequiredExams(ExamCenterRequiredExam entity)
		{
			this.SendPropertyChanging();
			entity.RequestPreparationStatus = this;
		}
		
		private void detach_ExamCenterRequiredExams(ExamCenterRequiredExam entity)
		{
			this.SendPropertyChanging();
			entity.RequestPreparationStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.ShippingBag")]
	public partial class ShippingBag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShippingBagID;
		
		private System.Nullable<int> _ExamCenterRequiredExamsID;
		
		private string _ShippingBagCode;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<ShippingBagItem> _ShippingBagItems;
		
		private EntityRef<ExamCenterRequiredExam> _ExamCenterRequiredExam;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShippingBagIDChanging(int value);
    partial void OnShippingBagIDChanged();
    partial void OnExamCenterRequiredExamsIDChanging(System.Nullable<int> value);
    partial void OnExamCenterRequiredExamsIDChanged();
    partial void OnShippingBagCodeChanging(string value);
    partial void OnShippingBagCodeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ShippingBag()
		{
			this._ShippingBagItems = new EntitySet<ShippingBagItem>(new Action<ShippingBagItem>(this.attach_ShippingBagItems), new Action<ShippingBagItem>(this.detach_ShippingBagItems));
			this._ExamCenterRequiredExam = default(EntityRef<ExamCenterRequiredExam>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingBagID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShippingBagID
		{
			get
			{
				return this._ShippingBagID;
			}
			set
			{
				if ((this._ShippingBagID != value))
				{
					this.OnShippingBagIDChanging(value);
					this.SendPropertyChanging();
					this._ShippingBagID = value;
					this.SendPropertyChanged("ShippingBagID");
					this.OnShippingBagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamCenterRequiredExamsID", DbType="Int")]
		public System.Nullable<int> ExamCenterRequiredExamsID
		{
			get
			{
				return this._ExamCenterRequiredExamsID;
			}
			set
			{
				if ((this._ExamCenterRequiredExamsID != value))
				{
					if (this._ExamCenterRequiredExam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamCenterRequiredExamsIDChanging(value);
					this.SendPropertyChanging();
					this._ExamCenterRequiredExamsID = value;
					this.SendPropertyChanged("ExamCenterRequiredExamsID");
					this.OnExamCenterRequiredExamsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingBagCode", DbType="NVarChar(20)")]
		public string ShippingBagCode
		{
			get
			{
				return this._ShippingBagCode;
			}
			set
			{
				if ((this._ShippingBagCode != value))
				{
					this.OnShippingBagCodeChanging(value);
					this.SendPropertyChanging();
					this._ShippingBagCode = value;
					this.SendPropertyChanged("ShippingBagCode");
					this.OnShippingBagCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingBag_ShippingBagItem", Storage="_ShippingBagItems", ThisKey="ShippingBagID", OtherKey="ShippingBagID")]
		public EntitySet<ShippingBagItem> ShippingBagItems
		{
			get
			{
				return this._ShippingBagItems;
			}
			set
			{
				this._ShippingBagItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamCenterRequiredExam_ShippingBag", Storage="_ExamCenterRequiredExam", ThisKey="ExamCenterRequiredExamsID", OtherKey="ExamCenterRequiredExamsID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ExamCenterRequiredExam ExamCenterRequiredExam
		{
			get
			{
				return this._ExamCenterRequiredExam.Entity;
			}
			set
			{
				ExamCenterRequiredExam previousValue = this._ExamCenterRequiredExam.Entity;
				if (((previousValue != value) 
							|| (this._ExamCenterRequiredExam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExamCenterRequiredExam.Entity = null;
						previousValue.ShippingBags.Remove(this);
					}
					this._ExamCenterRequiredExam.Entity = value;
					if ((value != null))
					{
						value.ShippingBags.Add(this);
						this._ExamCenterRequiredExamsID = value.ExamCenterRequiredExamsID;
					}
					else
					{
						this._ExamCenterRequiredExamsID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExamCenterRequiredExam");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShippingBagItems(ShippingBagItem entity)
		{
			this.SendPropertyChanging();
			entity.ShippingBag = this;
		}
		
		private void detach_ShippingBagItems(ShippingBagItem entity)
		{
			this.SendPropertyChanging();
			entity.ShippingBag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.ShippingBagItem")]
	public partial class ShippingBagItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShippingBagItemID;
		
		private System.Nullable<int> _ShippingBagID;
		
		private System.Nullable<int> _BookPackItemID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<int> _ModifiedBy;
		
		private EntityRef<ShippingBag> _ShippingBag;
		
		private EntityRef<BookPackItem> _BookPackItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShippingBagItemIDChanging(int value);
    partial void OnShippingBagItemIDChanged();
    partial void OnShippingBagIDChanging(System.Nullable<int> value);
    partial void OnShippingBagIDChanged();
    partial void OnBookPackItemIDChanging(System.Nullable<int> value);
    partial void OnBookPackItemIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    #endregion
		
		public ShippingBagItem()
		{
			this._ShippingBag = default(EntityRef<ShippingBag>);
			this._BookPackItem = default(EntityRef<BookPackItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingBagItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ShippingBagItemID
		{
			get
			{
				return this._ShippingBagItemID;
			}
			set
			{
				if ((this._ShippingBagItemID != value))
				{
					this.OnShippingBagItemIDChanging(value);
					this.SendPropertyChanging();
					this._ShippingBagItemID = value;
					this.SendPropertyChanged("ShippingBagItemID");
					this.OnShippingBagItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingBagID", DbType="Int")]
		public System.Nullable<int> ShippingBagID
		{
			get
			{
				return this._ShippingBagID;
			}
			set
			{
				if ((this._ShippingBagID != value))
				{
					if (this._ShippingBag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShippingBagIDChanging(value);
					this.SendPropertyChanging();
					this._ShippingBagID = value;
					this.SendPropertyChanged("ShippingBagID");
					this.OnShippingBagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPackItemID", DbType="Int")]
		public System.Nullable<int> BookPackItemID
		{
			get
			{
				return this._BookPackItemID;
			}
			set
			{
				if ((this._BookPackItemID != value))
				{
					if (this._BookPackItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookPackItemIDChanging(value);
					this.SendPropertyChanging();
					this._BookPackItemID = value;
					this.SendPropertyChanged("BookPackItemID");
					this.OnBookPackItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingBag_ShippingBagItem", Storage="_ShippingBag", ThisKey="ShippingBagID", OtherKey="ShippingBagID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ShippingBag ShippingBag
		{
			get
			{
				return this._ShippingBag.Entity;
			}
			set
			{
				ShippingBag previousValue = this._ShippingBag.Entity;
				if (((previousValue != value) 
							|| (this._ShippingBag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShippingBag.Entity = null;
						previousValue.ShippingBagItems.Remove(this);
					}
					this._ShippingBag.Entity = value;
					if ((value != null))
					{
						value.ShippingBagItems.Add(this);
						this._ShippingBagID = value.ShippingBagID;
					}
					else
					{
						this._ShippingBagID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ShippingBag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPackItem_ShippingBagItem", Storage="_BookPackItem", ThisKey="BookPackItemID", OtherKey="BookPackItemID", IsForeignKey=true)]
		public BookPackItem BookPackItem
		{
			get
			{
				return this._BookPackItem.Entity;
			}
			set
			{
				BookPackItem previousValue = this._BookPackItem.Entity;
				if (((previousValue != value) 
							|| (this._BookPackItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookPackItem.Entity = null;
						previousValue.ShippingBagItems.Remove(this);
					}
					this._BookPackItem.Entity = value;
					if ((value != null))
					{
						value.ShippingBagItems.Add(this);
						this._BookPackItemID = value.BookPackItemID;
					}
					else
					{
						this._BookPackItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookPackItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewBookPackItemPrint")]
	public partial class ViewBookPackItemPrint
	{
		
		private int _BookPackItemID;
		
		private System.Nullable<int> _BookPackingOperationID;
		
		private string _PackCode;
		
		private System.Nullable<int> _PackSerial;
		
		private System.Nullable<decimal> _Weight;
		
		private System.Nullable<int> _OperationStatusID;
		
		private System.Nullable<int> _ParentID;
		
		private string _Speciality;
		
		private string _ModelandNumber;
		
		private System.Nullable<int> _BookPrintingOperationID;
		
		private string _PackageTypeName;
		
		private System.Nullable<int> _StartBookSerial;
		
		private System.Nullable<int> _LastBookSerial;
		
		public ViewBookPackItemPrint()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPackItemID", DbType="Int NOT NULL")]
		public int BookPackItemID
		{
			get
			{
				return this._BookPackItemID;
			}
			set
			{
				if ((this._BookPackItemID != value))
				{
					this._BookPackItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPackingOperationID", DbType="Int")]
		public System.Nullable<int> BookPackingOperationID
		{
			get
			{
				return this._BookPackingOperationID;
			}
			set
			{
				if ((this._BookPackingOperationID != value))
				{
					this._BookPackingOperationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackCode", DbType="NVarChar(20)")]
		public string PackCode
		{
			get
			{
				return this._PackCode;
			}
			set
			{
				if ((this._PackCode != value))
				{
					this._PackCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackSerial", DbType="Int")]
		public System.Nullable<int> PackSerial
		{
			get
			{
				return this._PackSerial;
			}
			set
			{
				if ((this._PackSerial != value))
				{
					this._PackSerial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this._Weight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationStatusID", DbType="Int")]
		public System.Nullable<int> OperationStatusID
		{
			get
			{
				return this._OperationStatusID;
			}
			set
			{
				if ((this._OperationStatusID != value))
				{
					this._OperationStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speciality", DbType="NVarChar(50)")]
		public string Speciality
		{
			get
			{
				return this._Speciality;
			}
			set
			{
				if ((this._Speciality != value))
				{
					this._Speciality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelandNumber", DbType="NVarChar(50)")]
		public string ModelandNumber
		{
			get
			{
				return this._ModelandNumber;
			}
			set
			{
				if ((this._ModelandNumber != value))
				{
					this._ModelandNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPrintingOperationID", DbType="Int")]
		public System.Nullable<int> BookPrintingOperationID
		{
			get
			{
				return this._BookPrintingOperationID;
			}
			set
			{
				if ((this._BookPrintingOperationID != value))
				{
					this._BookPrintingOperationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageTypeName", DbType="NVarChar(50)")]
		public string PackageTypeName
		{
			get
			{
				return this._PackageTypeName;
			}
			set
			{
				if ((this._PackageTypeName != value))
				{
					this._PackageTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartBookSerial", DbType="Int")]
		public System.Nullable<int> StartBookSerial
		{
			get
			{
				return this._StartBookSerial;
			}
			set
			{
				if ((this._StartBookSerial != value))
				{
					this._StartBookSerial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastBookSerial", DbType="Int")]
		public System.Nullable<int> LastBookSerial
		{
			get
			{
				return this._LastBookSerial;
			}
			set
			{
				if ((this._LastBookSerial != value))
				{
					this._LastBookSerial = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PackageWeightView")]
	public partial class PackageWeightView
	{
		
		private int _PackageWeightID;
		
		private string _Name;
		
		private System.Nullable<decimal> _Weight;
		
		private System.Nullable<int> _PackageCode;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _PackCode;
		
		private System.Nullable<int> _PackSerial;
		
		public PackageWeightView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageWeightID", DbType="Int NOT NULL")]
		public int PackageWeightID
		{
			get
			{
				return this._PackageWeightID;
			}
			set
			{
				if ((this._PackageWeightID != value))
				{
					this._PackageWeightID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this._Weight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageCode", DbType="Int")]
		public System.Nullable<int> PackageCode
		{
			get
			{
				return this._PackageCode;
			}
			set
			{
				if ((this._PackageCode != value))
				{
					this._PackageCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this._CreatorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this._ModifiedByID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackCode", DbType="NVarChar(20)")]
		public string PackCode
		{
			get
			{
				return this._PackCode;
			}
			set
			{
				if ((this._PackCode != value))
				{
					this._PackCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackSerial", DbType="Int")]
		public System.Nullable<int> PackSerial
		{
			get
			{
				return this._PackSerial;
			}
			set
			{
				if ((this._PackSerial != value))
				{
					this._PackSerial = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.BookPrintingOperation")]
	public partial class BookPrintingOperation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookPrintingOperationID;
		
		private string _Name;
		
		private System.Nullable<int> _ExamID;
		
		private System.Nullable<int> _PrintsForOneModel;
		
		private System.Nullable<int> _ExamsNeededForA3;
		
		private System.Nullable<int> _ExamsNeededForA4;
		
		private System.Nullable<int> _ExamsNeededForCD;
		
		private System.Nullable<int> _OperationStatusID;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _TotalPacks;
		
		private System.Nullable<int> _TotalExamModels;
		
		private EntitySet<BookPackingOperation> _BookPackingOperations;
		
		private EntityRef<Exam> _Exam;
		
		private EntityRef<OperationStatus> _OperationStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookPrintingOperationIDChanging(int value);
    partial void OnBookPrintingOperationIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExamIDChanging(System.Nullable<int> value);
    partial void OnExamIDChanged();
    partial void OnPrintsForOneModelChanging(System.Nullable<int> value);
    partial void OnPrintsForOneModelChanged();
    partial void OnExamsNeededForA3Changing(System.Nullable<int> value);
    partial void OnExamsNeededForA3Changed();
    partial void OnExamsNeededForA4Changing(System.Nullable<int> value);
    partial void OnExamsNeededForA4Changed();
    partial void OnExamsNeededForCDChanging(System.Nullable<int> value);
    partial void OnExamsNeededForCDChanged();
    partial void OnOperationStatusIDChanging(System.Nullable<int> value);
    partial void OnOperationStatusIDChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnTotalPacksChanging(System.Nullable<int> value);
    partial void OnTotalPacksChanged();
    partial void OnTotalExamModelsChanging(System.Nullable<int> value);
    partial void OnTotalExamModelsChanged();
    #endregion
		
		public BookPrintingOperation()
		{
			this._BookPackingOperations = new EntitySet<BookPackingOperation>(new Action<BookPackingOperation>(this.attach_BookPackingOperations), new Action<BookPackingOperation>(this.detach_BookPackingOperations));
			this._Exam = default(EntityRef<Exam>);
			this._OperationStatus = default(EntityRef<OperationStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPrintingOperationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookPrintingOperationID
		{
			get
			{
				return this._BookPrintingOperationID;
			}
			set
			{
				if ((this._BookPrintingOperationID != value))
				{
					this.OnBookPrintingOperationIDChanging(value);
					this.SendPropertyChanging();
					this._BookPrintingOperationID = value;
					this.SendPropertyChanged("BookPrintingOperationID");
					this.OnBookPrintingOperationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamID", DbType="Int")]
		public System.Nullable<int> ExamID
		{
			get
			{
				return this._ExamID;
			}
			set
			{
				if ((this._ExamID != value))
				{
					if (this._Exam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamIDChanging(value);
					this.SendPropertyChanging();
					this._ExamID = value;
					this.SendPropertyChanged("ExamID");
					this.OnExamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintsForOneModel", DbType="Int")]
		public System.Nullable<int> PrintsForOneModel
		{
			get
			{
				return this._PrintsForOneModel;
			}
			set
			{
				if ((this._PrintsForOneModel != value))
				{
					this.OnPrintsForOneModelChanging(value);
					this.SendPropertyChanging();
					this._PrintsForOneModel = value;
					this.SendPropertyChanged("PrintsForOneModel");
					this.OnPrintsForOneModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamsNeededForA3", DbType="Int")]
		public System.Nullable<int> ExamsNeededForA3
		{
			get
			{
				return this._ExamsNeededForA3;
			}
			set
			{
				if ((this._ExamsNeededForA3 != value))
				{
					this.OnExamsNeededForA3Changing(value);
					this.SendPropertyChanging();
					this._ExamsNeededForA3 = value;
					this.SendPropertyChanged("ExamsNeededForA3");
					this.OnExamsNeededForA3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamsNeededForA4", DbType="Int")]
		public System.Nullable<int> ExamsNeededForA4
		{
			get
			{
				return this._ExamsNeededForA4;
			}
			set
			{
				if ((this._ExamsNeededForA4 != value))
				{
					this.OnExamsNeededForA4Changing(value);
					this.SendPropertyChanging();
					this._ExamsNeededForA4 = value;
					this.SendPropertyChanged("ExamsNeededForA4");
					this.OnExamsNeededForA4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamsNeededForCD", DbType="Int")]
		public System.Nullable<int> ExamsNeededForCD
		{
			get
			{
				return this._ExamsNeededForCD;
			}
			set
			{
				if ((this._ExamsNeededForCD != value))
				{
					this.OnExamsNeededForCDChanging(value);
					this.SendPropertyChanging();
					this._ExamsNeededForCD = value;
					this.SendPropertyChanged("ExamsNeededForCD");
					this.OnExamsNeededForCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationStatusID", DbType="Int")]
		public System.Nullable<int> OperationStatusID
		{
			get
			{
				return this._OperationStatusID;
			}
			set
			{
				if ((this._OperationStatusID != value))
				{
					if (this._OperationStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperationStatusIDChanging(value);
					this.SendPropertyChanging();
					this._OperationStatusID = value;
					this.SendPropertyChanged("OperationStatusID");
					this.OnOperationStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPacks", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TotalPacks
		{
			get
			{
				return this._TotalPacks;
			}
			set
			{
				if ((this._TotalPacks != value))
				{
					this.OnTotalPacksChanging(value);
					this.SendPropertyChanging();
					this._TotalPacks = value;
					this.SendPropertyChanged("TotalPacks");
					this.OnTotalPacksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalExamModels", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TotalExamModels
		{
			get
			{
				return this._TotalExamModels;
			}
			set
			{
				if ((this._TotalExamModels != value))
				{
					this.OnTotalExamModelsChanging(value);
					this.SendPropertyChanging();
					this._TotalExamModels = value;
					this.SendPropertyChanged("TotalExamModels");
					this.OnTotalExamModelsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPrintingOperation_BookPackingOperation", Storage="_BookPackingOperations", ThisKey="BookPrintingOperationID", OtherKey="BookPrintingOperationID")]
		public EntitySet<BookPackingOperation> BookPackingOperations
		{
			get
			{
				return this._BookPackingOperations;
			}
			set
			{
				this._BookPackingOperations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_BookPrintingOperation", Storage="_Exam", ThisKey="ExamID", OtherKey="ExamID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Exam Exam
		{
			get
			{
				return this._Exam.Entity;
			}
			set
			{
				Exam previousValue = this._Exam.Entity;
				if (((previousValue != value) 
							|| (this._Exam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exam.Entity = null;
						previousValue.BookPrintingOperations.Remove(this);
					}
					this._Exam.Entity = value;
					if ((value != null))
					{
						value.BookPrintingOperations.Add(this);
						this._ExamID = value.ExamID;
					}
					else
					{
						this._ExamID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Exam");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OperationStatus_BookPrintingOperation", Storage="_OperationStatus", ThisKey="OperationStatusID", OtherKey="OperationStatusID", IsForeignKey=true)]
		public OperationStatus OperationStatus
		{
			get
			{
				return this._OperationStatus.Entity;
			}
			set
			{
				OperationStatus previousValue = this._OperationStatus.Entity;
				if (((previousValue != value) 
							|| (this._OperationStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OperationStatus.Entity = null;
						previousValue.BookPrintingOperations.Remove(this);
					}
					this._OperationStatus.Entity = value;
					if ((value != null))
					{
						value.BookPrintingOperations.Add(this);
						this._OperationStatusID = value.OperationStatusID;
					}
					else
					{
						this._OperationStatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OperationStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookPackingOperations(BookPackingOperation entity)
		{
			this.SendPropertyChanging();
			entity.BookPrintingOperation = this;
		}
		
		private void detach_BookPackingOperations(BookPackingOperation entity)
		{
			this.SendPropertyChanging();
			entity.BookPrintingOperation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.BookPackItem")]
	public partial class BookPackItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookPackItemID;
		
		private System.Nullable<int> _BookPackingOperationID;
		
		private string _PackCode;
		
		private System.Nullable<int> _PackSerial;
		
		private System.Nullable<decimal> _Weight;
		
		private System.Nullable<int> _OperationStatusID;
		
		private System.Nullable<int> _ParentID;
		
		private System.Nullable<int> _StartBookSerial;
		
		private System.Nullable<int> _LastBookSerial;
		
		private System.Nullable<int> _BookPackItemOperationID;
		
		private EntitySet<PackageWeight> _PackageWeights;
		
		private EntitySet<BookPackItemModel> _BookPackItemModels;
		
		private EntitySet<BookPackItemOperation> _BookPackItemOperations;
		
		private EntitySet<ContainerRequestPack> _ContainerRequestPacks;
		
		private EntitySet<ShippingBagItem> _ShippingBagItems;
		
		private EntitySet<BookPackItem> _BookPackItems;
		
		private EntityRef<BookPackingOperation> _BookPackingOperation;
		
		private EntityRef<BookPackItem> _BookPackItem1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookPackItemIDChanging(int value);
    partial void OnBookPackItemIDChanged();
    partial void OnBookPackingOperationIDChanging(System.Nullable<int> value);
    partial void OnBookPackingOperationIDChanged();
    partial void OnPackCodeChanging(string value);
    partial void OnPackCodeChanged();
    partial void OnPackSerialChanging(System.Nullable<int> value);
    partial void OnPackSerialChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnOperationStatusIDChanging(System.Nullable<int> value);
    partial void OnOperationStatusIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnStartBookSerialChanging(System.Nullable<int> value);
    partial void OnStartBookSerialChanged();
    partial void OnLastBookSerialChanging(System.Nullable<int> value);
    partial void OnLastBookSerialChanged();
    partial void OnBookPackItemOperationIDChanging(System.Nullable<int> value);
    partial void OnBookPackItemOperationIDChanged();
    #endregion
		
		public BookPackItem()
		{
			this._PackageWeights = new EntitySet<PackageWeight>(new Action<PackageWeight>(this.attach_PackageWeights), new Action<PackageWeight>(this.detach_PackageWeights));
			this._BookPackItemModels = new EntitySet<BookPackItemModel>(new Action<BookPackItemModel>(this.attach_BookPackItemModels), new Action<BookPackItemModel>(this.detach_BookPackItemModels));
			this._BookPackItemOperations = new EntitySet<BookPackItemOperation>(new Action<BookPackItemOperation>(this.attach_BookPackItemOperations), new Action<BookPackItemOperation>(this.detach_BookPackItemOperations));
			this._ContainerRequestPacks = new EntitySet<ContainerRequestPack>(new Action<ContainerRequestPack>(this.attach_ContainerRequestPacks), new Action<ContainerRequestPack>(this.detach_ContainerRequestPacks));
			this._ShippingBagItems = new EntitySet<ShippingBagItem>(new Action<ShippingBagItem>(this.attach_ShippingBagItems), new Action<ShippingBagItem>(this.detach_ShippingBagItems));
			this._BookPackItems = new EntitySet<BookPackItem>(new Action<BookPackItem>(this.attach_BookPackItems), new Action<BookPackItem>(this.detach_BookPackItems));
			this._BookPackingOperation = default(EntityRef<BookPackingOperation>);
			this._BookPackItem1 = default(EntityRef<BookPackItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPackItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookPackItemID
		{
			get
			{
				return this._BookPackItemID;
			}
			set
			{
				if ((this._BookPackItemID != value))
				{
					this.OnBookPackItemIDChanging(value);
					this.SendPropertyChanging();
					this._BookPackItemID = value;
					this.SendPropertyChanged("BookPackItemID");
					this.OnBookPackItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPackingOperationID", DbType="Int")]
		public System.Nullable<int> BookPackingOperationID
		{
			get
			{
				return this._BookPackingOperationID;
			}
			set
			{
				if ((this._BookPackingOperationID != value))
				{
					if (this._BookPackingOperation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookPackingOperationIDChanging(value);
					this.SendPropertyChanging();
					this._BookPackingOperationID = value;
					this.SendPropertyChanged("BookPackingOperationID");
					this.OnBookPackingOperationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackCode", DbType="NVarChar(20)")]
		public string PackCode
		{
			get
			{
				return this._PackCode;
			}
			set
			{
				if ((this._PackCode != value))
				{
					this.OnPackCodeChanging(value);
					this.SendPropertyChanging();
					this._PackCode = value;
					this.SendPropertyChanged("PackCode");
					this.OnPackCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackSerial", DbType="Int")]
		public System.Nullable<int> PackSerial
		{
			get
			{
				return this._PackSerial;
			}
			set
			{
				if ((this._PackSerial != value))
				{
					this.OnPackSerialChanging(value);
					this.SendPropertyChanging();
					this._PackSerial = value;
					this.SendPropertyChanged("PackSerial");
					this.OnPackSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationStatusID", DbType="Int")]
		public System.Nullable<int> OperationStatusID
		{
			get
			{
				return this._OperationStatusID;
			}
			set
			{
				if ((this._OperationStatusID != value))
				{
					this.OnOperationStatusIDChanging(value);
					this.SendPropertyChanging();
					this._OperationStatusID = value;
					this.SendPropertyChanged("OperationStatusID");
					this.OnOperationStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._BookPackItem1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartBookSerial", DbType="Int")]
		public System.Nullable<int> StartBookSerial
		{
			get
			{
				return this._StartBookSerial;
			}
			set
			{
				if ((this._StartBookSerial != value))
				{
					this.OnStartBookSerialChanging(value);
					this.SendPropertyChanging();
					this._StartBookSerial = value;
					this.SendPropertyChanged("StartBookSerial");
					this.OnStartBookSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastBookSerial", DbType="Int")]
		public System.Nullable<int> LastBookSerial
		{
			get
			{
				return this._LastBookSerial;
			}
			set
			{
				if ((this._LastBookSerial != value))
				{
					this.OnLastBookSerialChanging(value);
					this.SendPropertyChanging();
					this._LastBookSerial = value;
					this.SendPropertyChanged("LastBookSerial");
					this.OnLastBookSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPackItemOperationID", DbType="Int")]
		public System.Nullable<int> BookPackItemOperationID
		{
			get
			{
				return this._BookPackItemOperationID;
			}
			set
			{
				if ((this._BookPackItemOperationID != value))
				{
					this.OnBookPackItemOperationIDChanging(value);
					this.SendPropertyChanging();
					this._BookPackItemOperationID = value;
					this.SendPropertyChanged("BookPackItemOperationID");
					this.OnBookPackItemOperationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPackItem_PackageWeight", Storage="_PackageWeights", ThisKey="BookPackItemID", OtherKey="PackageCode")]
		public EntitySet<PackageWeight> PackageWeights
		{
			get
			{
				return this._PackageWeights;
			}
			set
			{
				this._PackageWeights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPackItem_BookPackItemModel", Storage="_BookPackItemModels", ThisKey="BookPackItemID", OtherKey="BookPackItemID")]
		public EntitySet<BookPackItemModel> BookPackItemModels
		{
			get
			{
				return this._BookPackItemModels;
			}
			set
			{
				this._BookPackItemModels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPackItem_BookPackItemOperation", Storage="_BookPackItemOperations", ThisKey="BookPackItemID", OtherKey="BookPackItemID")]
		public EntitySet<BookPackItemOperation> BookPackItemOperations
		{
			get
			{
				return this._BookPackItemOperations;
			}
			set
			{
				this._BookPackItemOperations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPackItem_ContainerRequestPack", Storage="_ContainerRequestPacks", ThisKey="BookPackItemID", OtherKey="BookPackItemID")]
		public EntitySet<ContainerRequestPack> ContainerRequestPacks
		{
			get
			{
				return this._ContainerRequestPacks;
			}
			set
			{
				this._ContainerRequestPacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPackItem_ShippingBagItem", Storage="_ShippingBagItems", ThisKey="BookPackItemID", OtherKey="BookPackItemID")]
		public EntitySet<ShippingBagItem> ShippingBagItems
		{
			get
			{
				return this._ShippingBagItems;
			}
			set
			{
				this._ShippingBagItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPackItem_BookPackItem", Storage="_BookPackItems", ThisKey="BookPackItemID", OtherKey="ParentID")]
		public EntitySet<BookPackItem> BookPackItems
		{
			get
			{
				return this._BookPackItems;
			}
			set
			{
				this._BookPackItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPackingOperation_BookPackItem", Storage="_BookPackingOperation", ThisKey="BookPackingOperationID", OtherKey="BookPackingOperationID", IsForeignKey=true, DeleteRule="CASCADE")]
		public BookPackingOperation BookPackingOperation
		{
			get
			{
				return this._BookPackingOperation.Entity;
			}
			set
			{
				BookPackingOperation previousValue = this._BookPackingOperation.Entity;
				if (((previousValue != value) 
							|| (this._BookPackingOperation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookPackingOperation.Entity = null;
						previousValue.BookPackItems.Remove(this);
					}
					this._BookPackingOperation.Entity = value;
					if ((value != null))
					{
						value.BookPackItems.Add(this);
						this._BookPackingOperationID = value.BookPackingOperationID;
					}
					else
					{
						this._BookPackingOperationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookPackingOperation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPackItem_BookPackItem", Storage="_BookPackItem1", ThisKey="ParentID", OtherKey="BookPackItemID", IsForeignKey=true)]
		public BookPackItem BookPackItem1
		{
			get
			{
				return this._BookPackItem1.Entity;
			}
			set
			{
				BookPackItem previousValue = this._BookPackItem1.Entity;
				if (((previousValue != value) 
							|| (this._BookPackItem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookPackItem1.Entity = null;
						previousValue.BookPackItems.Remove(this);
					}
					this._BookPackItem1.Entity = value;
					if ((value != null))
					{
						value.BookPackItems.Add(this);
						this._ParentID = value.BookPackItemID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookPackItem1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PackageWeights(PackageWeight entity)
		{
			this.SendPropertyChanging();
			entity.BookPackItem = this;
		}
		
		private void detach_PackageWeights(PackageWeight entity)
		{
			this.SendPropertyChanging();
			entity.BookPackItem = null;
		}
		
		private void attach_BookPackItemModels(BookPackItemModel entity)
		{
			this.SendPropertyChanging();
			entity.BookPackItem = this;
		}
		
		private void detach_BookPackItemModels(BookPackItemModel entity)
		{
			this.SendPropertyChanging();
			entity.BookPackItem = null;
		}
		
		private void attach_BookPackItemOperations(BookPackItemOperation entity)
		{
			this.SendPropertyChanging();
			entity.BookPackItem = this;
		}
		
		private void detach_BookPackItemOperations(BookPackItemOperation entity)
		{
			this.SendPropertyChanging();
			entity.BookPackItem = null;
		}
		
		private void attach_ContainerRequestPacks(ContainerRequestPack entity)
		{
			this.SendPropertyChanging();
			entity.BookPackItem = this;
		}
		
		private void detach_ContainerRequestPacks(ContainerRequestPack entity)
		{
			this.SendPropertyChanging();
			entity.BookPackItem = null;
		}
		
		private void attach_ShippingBagItems(ShippingBagItem entity)
		{
			this.SendPropertyChanging();
			entity.BookPackItem = this;
		}
		
		private void detach_ShippingBagItems(ShippingBagItem entity)
		{
			this.SendPropertyChanging();
			entity.BookPackItem = null;
		}
		
		private void attach_BookPackItems(BookPackItem entity)
		{
			this.SendPropertyChanging();
			entity.BookPackItem1 = this;
		}
		
		private void detach_BookPackItems(BookPackItem entity)
		{
			this.SendPropertyChanging();
			entity.BookPackItem1 = null;
		}
	}
	
	public partial class GetPackedByPrintingIDResult
	{
		
		private int _BookPackingOperationID;
		
		private string _Name;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _BookPrintingOperationID;
		
		private System.Nullable<int> _PackagingTypeID;
		
		private System.Nullable<int> _PackingCalculationTypeID;
		
		private string _AllocatedFrom;
		
		private System.Nullable<int> _PackingValue;
		
		private System.Nullable<int> _PackageTotal;
		
		private System.Nullable<int> _PackingParentID;
		
		public GetPackedByPrintingIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPackingOperationID", DbType="Int NOT NULL")]
		public int BookPackingOperationID
		{
			get
			{
				return this._BookPackingOperationID;
			}
			set
			{
				if ((this._BookPackingOperationID != value))
				{
					this._BookPackingOperationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this._CreatorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this._ModifiedByID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPrintingOperationID", DbType="Int")]
		public System.Nullable<int> BookPrintingOperationID
		{
			get
			{
				return this._BookPrintingOperationID;
			}
			set
			{
				if ((this._BookPrintingOperationID != value))
				{
					this._BookPrintingOperationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackagingTypeID", DbType="Int")]
		public System.Nullable<int> PackagingTypeID
		{
			get
			{
				return this._PackagingTypeID;
			}
			set
			{
				if ((this._PackagingTypeID != value))
				{
					this._PackagingTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingCalculationTypeID", DbType="Int")]
		public System.Nullable<int> PackingCalculationTypeID
		{
			get
			{
				return this._PackingCalculationTypeID;
			}
			set
			{
				if ((this._PackingCalculationTypeID != value))
				{
					this._PackingCalculationTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllocatedFrom", DbType="NVarChar(50)")]
		public string AllocatedFrom
		{
			get
			{
				return this._AllocatedFrom;
			}
			set
			{
				if ((this._AllocatedFrom != value))
				{
					this._AllocatedFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingValue", DbType="Int")]
		public System.Nullable<int> PackingValue
		{
			get
			{
				return this._PackingValue;
			}
			set
			{
				if ((this._PackingValue != value))
				{
					this._PackingValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageTotal", DbType="Int")]
		public System.Nullable<int> PackageTotal
		{
			get
			{
				return this._PackageTotal;
			}
			set
			{
				if ((this._PackageTotal != value))
				{
					this._PackageTotal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingParentID", DbType="Int")]
		public System.Nullable<int> PackingParentID
		{
			get
			{
				return this._PackingParentID;
			}
			set
			{
				if ((this._PackingParentID != value))
				{
					this._PackingParentID = value;
				}
			}
		}
	}
	
	public partial class GetItemPackedByPackIDResult
	{
		
		private int _BookPackItemOperationID;
		
		private string _Name;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _BookPackItemID;
		
		private System.Nullable<int> _PackagingTypeID;
		
		private System.Nullable<int> _PackingCalculationTypeID;
		
		private string _AllocatedFrom;
		
		private System.Nullable<int> _PackingValue;
		
		private System.Nullable<int> _PackageTotal;
		
		private System.Nullable<int> _PackingParentID;
		
		public GetItemPackedByPackIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPackItemOperationID", DbType="Int NOT NULL")]
		public int BookPackItemOperationID
		{
			get
			{
				return this._BookPackItemOperationID;
			}
			set
			{
				if ((this._BookPackItemOperationID != value))
				{
					this._BookPackItemOperationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this._CreatorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this._ModifiedByID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPackItemID", DbType="Int")]
		public System.Nullable<int> BookPackItemID
		{
			get
			{
				return this._BookPackItemID;
			}
			set
			{
				if ((this._BookPackItemID != value))
				{
					this._BookPackItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackagingTypeID", DbType="Int")]
		public System.Nullable<int> PackagingTypeID
		{
			get
			{
				return this._PackagingTypeID;
			}
			set
			{
				if ((this._PackagingTypeID != value))
				{
					this._PackagingTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingCalculationTypeID", DbType="Int")]
		public System.Nullable<int> PackingCalculationTypeID
		{
			get
			{
				return this._PackingCalculationTypeID;
			}
			set
			{
				if ((this._PackingCalculationTypeID != value))
				{
					this._PackingCalculationTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllocatedFrom", DbType="NVarChar(50)")]
		public string AllocatedFrom
		{
			get
			{
				return this._AllocatedFrom;
			}
			set
			{
				if ((this._AllocatedFrom != value))
				{
					this._AllocatedFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingValue", DbType="Int")]
		public System.Nullable<int> PackingValue
		{
			get
			{
				return this._PackingValue;
			}
			set
			{
				if ((this._PackingValue != value))
				{
					this._PackingValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageTotal", DbType="Int")]
		public System.Nullable<int> PackageTotal
		{
			get
			{
				return this._PackageTotal;
			}
			set
			{
				if ((this._PackageTotal != value))
				{
					this._PackageTotal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingParentID", DbType="Int")]
		public System.Nullable<int> PackingParentID
		{
			get
			{
				return this._PackingParentID;
			}
			set
			{
				if ((this._PackingParentID != value))
				{
					this._PackingParentID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
