#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Qiyas.DataAccessLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Qiyas")]
	public partial class QiyasLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBusinessEntity(BusinessEntity instance);
    partial void UpdateBusinessEntity(BusinessEntity instance);
    partial void DeleteBusinessEntity(BusinessEntity instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertUserClaim(UserClaim instance);
    partial void UpdateUserClaim(UserClaim instance);
    partial void DeleteUserClaim(UserClaim instance);
    partial void InsertUserLoginProvider(UserLoginProvider instance);
    partial void UpdateUserLoginProvider(UserLoginProvider instance);
    partial void DeleteUserLoginProvider(UserLoginProvider instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertPersonRole(PersonRole instance);
    partial void UpdatePersonRole(PersonRole instance);
    partial void DeletePersonRole(PersonRole instance);
    partial void InsertCredential(Credential instance);
    partial void UpdateCredential(Credential instance);
    partial void DeleteCredential(Credential instance);
    partial void InsertStudentGender(StudentGender instance);
    partial void UpdateStudentGender(StudentGender instance);
    partial void DeleteStudentGender(StudentGender instance);
    partial void InsertPackagingType(PackagingType instance);
    partial void UpdatePackagingType(PackagingType instance);
    partial void DeletePackagingType(PackagingType instance);
    partial void InsertOperationStatus(OperationStatus instance);
    partial void UpdateOperationStatus(OperationStatus instance);
    partial void DeleteOperationStatus(OperationStatus instance);
    partial void InsertExamType(ExamType instance);
    partial void UpdateExamType(ExamType instance);
    partial void DeleteExamType(ExamType instance);
    partial void InsertExamSpeciality(ExamSpeciality instance);
    partial void UpdateExamSpeciality(ExamSpeciality instance);
    partial void DeleteExamSpeciality(ExamSpeciality instance);
    partial void InsertExamPeriod(ExamPeriod instance);
    partial void UpdateExamPeriod(ExamPeriod instance);
    partial void DeleteExamPeriod(ExamPeriod instance);
    partial void InsertBookPrintingOperation(BookPrintingOperation instance);
    partial void UpdateBookPrintingOperation(BookPrintingOperation instance);
    partial void DeleteBookPrintingOperation(BookPrintingOperation instance);
    partial void InsertBookPackingOperation(BookPackingOperation instance);
    partial void UpdateBookPackingOperation(BookPackingOperation instance);
    partial void DeleteBookPackingOperation(BookPackingOperation instance);
    partial void InsertCountryRegion(CountryRegion instance);
    partial void UpdateCountryRegion(CountryRegion instance);
    partial void DeleteCountryRegion(CountryRegion instance);
    partial void InsertStateProvince(StateProvince instance);
    partial void UpdateStateProvince(StateProvince instance);
    partial void DeleteStateProvince(StateProvince instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertExamCenter(ExamCenter instance);
    partial void UpdateExamCenter(ExamCenter instance);
    partial void DeleteExamCenter(ExamCenter instance);
    partial void InsertViewExamCenter(ViewExamCenter instance);
    partial void UpdateViewExamCenter(ViewExamCenter instance);
    partial void DeleteViewExamCenter(ViewExamCenter instance);
    partial void InsertExamModel(ExamModel instance);
    partial void UpdateExamModel(ExamModel instance);
    partial void DeleteExamModel(ExamModel instance);
    partial void InsertExamView(ExamView instance);
    partial void UpdateExamView(ExamView instance);
    partial void DeleteExamView(ExamView instance);
    partial void InsertPackageWeight(PackageWeight instance);
    partial void UpdatePackageWeight(PackageWeight instance);
    partial void DeletePackageWeight(PackageWeight instance);
    partial void InsertExam(Exam instance);
    partial void UpdateExam(Exam instance);
    partial void DeleteExam(Exam instance);
    #endregion
		
		public QiyasLinqDataContext() : 
				base(global::Qiyas.DataAccessLayer.Properties.Settings.Default.QiyasConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QiyasLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QiyasLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QiyasLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QiyasLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BusinessEntity> BusinessEntities
		{
			get
			{
				return this.GetTable<BusinessEntity>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<UserClaim> UserClaims
		{
			get
			{
				return this.GetTable<UserClaim>();
			}
		}
		
		public System.Data.Linq.Table<UserLoginProvider> UserLoginProviders
		{
			get
			{
				return this.GetTable<UserLoginProvider>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<PersonRole> PersonRoles
		{
			get
			{
				return this.GetTable<PersonRole>();
			}
		}
		
		public System.Data.Linq.Table<Credential> Credentials
		{
			get
			{
				return this.GetTable<Credential>();
			}
		}
		
		public System.Data.Linq.Table<StudentGender> StudentGenders
		{
			get
			{
				return this.GetTable<StudentGender>();
			}
		}
		
		public System.Data.Linq.Table<PackagingType> PackagingTypes
		{
			get
			{
				return this.GetTable<PackagingType>();
			}
		}
		
		public System.Data.Linq.Table<OperationStatus> OperationStatus
		{
			get
			{
				return this.GetTable<OperationStatus>();
			}
		}
		
		public System.Data.Linq.Table<ExamType> ExamTypes
		{
			get
			{
				return this.GetTable<ExamType>();
			}
		}
		
		public System.Data.Linq.Table<ExamSpeciality> ExamSpecialities
		{
			get
			{
				return this.GetTable<ExamSpeciality>();
			}
		}
		
		public System.Data.Linq.Table<ExamPeriod> ExamPeriods
		{
			get
			{
				return this.GetTable<ExamPeriod>();
			}
		}
		
		public System.Data.Linq.Table<BookPrintingOperation> BookPrintingOperations
		{
			get
			{
				return this.GetTable<BookPrintingOperation>();
			}
		}
		
		public System.Data.Linq.Table<BookPackingOperation> BookPackingOperations
		{
			get
			{
				return this.GetTable<BookPackingOperation>();
			}
		}
		
		public System.Data.Linq.Table<CountryRegion> CountryRegions
		{
			get
			{
				return this.GetTable<CountryRegion>();
			}
		}
		
		public System.Data.Linq.Table<StateProvince> StateProvinces
		{
			get
			{
				return this.GetTable<StateProvince>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<ExamCenter> ExamCenters
		{
			get
			{
				return this.GetTable<ExamCenter>();
			}
		}
		
		public System.Data.Linq.Table<ViewExamCenter> ViewExamCenters
		{
			get
			{
				return this.GetTable<ViewExamCenter>();
			}
		}
		
		public System.Data.Linq.Table<ExamModel> ExamModels
		{
			get
			{
				return this.GetTable<ExamModel>();
			}
		}
		
		public System.Data.Linq.Table<ExamView> ExamViews
		{
			get
			{
				return this.GetTable<ExamView>();
			}
		}
		
		public System.Data.Linq.Table<PackageWeight> PackageWeights
		{
			get
			{
				return this.GetTable<PackageWeight>();
			}
		}
		
		public System.Data.Linq.Table<Exam> Exams
		{
			get
			{
				return this.GetTable<Exam>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.BusinessEntity")]
	public partial class BusinessEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityId;
		
		private System.Guid _RowGuid;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIdChanging(int value);
    partial void OnBusinessEntityIdChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public BusinessEntity()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BusinessEntityId
		{
			get
			{
				return this._BusinessEntityId;
			}
			set
			{
				if ((this._BusinessEntityId != value))
				{
					this.OnBusinessEntityIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityId = value;
					this.SendPropertyChanged("BusinessEntityId");
					this.OnBusinessEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessEntity_Person", Storage="_Person", ThisKey="BusinessEntityId", OtherKey="BusinessEntityId", IsUnique=true, IsForeignKey=false)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.BusinessEntity = null;
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.BusinessEntity = this;
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityId;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _DisplayName;
		
		private string _Title;
		
		private System.Nullable<bool> _NameStyle;
		
		private System.Nullable<int> _EmailPromotion;
		
		private System.Guid _RowGuid;
		
		private System.DateTime _ModifiedDate;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _NationalityCode;
		
		private System.Nullable<char> _Gender;
		
		private System.Nullable<System.DateTime> _DateofBirth;
		
		private string _PersonImage;
		
		private EntitySet<UserClaim> _UserClaims;
		
		private EntitySet<UserLoginProvider> _UserLoginProviders;
		
		private EntityRef<Credential> _Credential;
		
		private EntityRef<BusinessEntity> _BusinessEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIdChanging(int value);
    partial void OnBusinessEntityIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNameStyleChanging(System.Nullable<bool> value);
    partial void OnNameStyleChanged();
    partial void OnEmailPromotionChanging(System.Nullable<int> value);
    partial void OnEmailPromotionChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnNationalityCodeChanging(string value);
    partial void OnNationalityCodeChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    partial void OnDateofBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateofBirthChanged();
    partial void OnPersonImageChanging(string value);
    partial void OnPersonImageChanged();
    #endregion
		
		public Person()
		{
			this._UserClaims = new EntitySet<UserClaim>(new Action<UserClaim>(this.attach_UserClaims), new Action<UserClaim>(this.detach_UserClaims));
			this._UserLoginProviders = new EntitySet<UserLoginProvider>(new Action<UserLoginProvider>(this.attach_UserLoginProviders), new Action<UserLoginProvider>(this.detach_UserLoginProviders));
			this._Credential = default(EntityRef<Credential>);
			this._BusinessEntity = default(EntityRef<BusinessEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BusinessEntityId
		{
			get
			{
				return this._BusinessEntityId;
			}
			set
			{
				if ((this._BusinessEntityId != value))
				{
					if (this._BusinessEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessEntityIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityId = value;
					this.SendPropertyChanged("BusinessEntityId");
					this.OnBusinessEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(50)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameStyle", DbType="Bit")]
		public System.Nullable<bool> NameStyle
		{
			get
			{
				return this._NameStyle;
			}
			set
			{
				if ((this._NameStyle != value))
				{
					this.OnNameStyleChanging(value);
					this.SendPropertyChanging();
					this._NameStyle = value;
					this.SendPropertyChanged("NameStyle");
					this.OnNameStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailPromotion", DbType="Int")]
		public System.Nullable<int> EmailPromotion
		{
			get
			{
				return this._EmailPromotion;
			}
			set
			{
				if ((this._EmailPromotion != value))
				{
					this.OnEmailPromotionChanging(value);
					this.SendPropertyChanging();
					this._EmailPromotion = value;
					this.SendPropertyChanged("EmailPromotion");
					this.OnEmailPromotionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityCode", DbType="Char(3)")]
		public string NationalityCode
		{
			get
			{
				return this._NationalityCode;
			}
			set
			{
				if ((this._NationalityCode != value))
				{
					this.OnNationalityCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalityCode = value;
					this.SendPropertyChanged("NationalityCode");
					this.OnNationalityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateofBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateofBirth
		{
			get
			{
				return this._DateofBirth;
			}
			set
			{
				if ((this._DateofBirth != value))
				{
					this.OnDateofBirthChanging(value);
					this.SendPropertyChanging();
					this._DateofBirth = value;
					this.SendPropertyChanged("DateofBirth");
					this.OnDateofBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonImage", DbType="NVarChar(250)")]
		public string PersonImage
		{
			get
			{
				return this._PersonImage;
			}
			set
			{
				if ((this._PersonImage != value))
				{
					this.OnPersonImageChanging(value);
					this.SendPropertyChanging();
					this._PersonImage = value;
					this.SendPropertyChanged("PersonImage");
					this.OnPersonImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_UserClaim", Storage="_UserClaims", ThisKey="BusinessEntityId", OtherKey="UserId")]
		public EntitySet<UserClaim> UserClaims
		{
			get
			{
				return this._UserClaims;
			}
			set
			{
				this._UserClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_UserLoginProvider", Storage="_UserLoginProviders", ThisKey="BusinessEntityId", OtherKey="UserId")]
		public EntitySet<UserLoginProvider> UserLoginProviders
		{
			get
			{
				return this._UserLoginProviders;
			}
			set
			{
				this._UserLoginProviders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Credential", Storage="_Credential", ThisKey="BusinessEntityId", OtherKey="BusinessEntityId", IsUnique=true, IsForeignKey=false)]
		public Credential Credential
		{
			get
			{
				return this._Credential.Entity;
			}
			set
			{
				Credential previousValue = this._Credential.Entity;
				if (((previousValue != value) 
							|| (this._Credential.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Credential.Entity = null;
						previousValue.Person = null;
					}
					this._Credential.Entity = value;
					if ((value != null))
					{
						value.Person = this;
					}
					this.SendPropertyChanged("Credential");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessEntity_Person", Storage="_BusinessEntity", ThisKey="BusinessEntityId", OtherKey="BusinessEntityId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BusinessEntity BusinessEntity
		{
			get
			{
				return this._BusinessEntity.Entity;
			}
			set
			{
				BusinessEntity previousValue = this._BusinessEntity.Entity;
				if (((previousValue != value) 
							|| (this._BusinessEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessEntity.Entity = null;
						previousValue.Person = null;
					}
					this._BusinessEntity.Entity = value;
					if ((value != null))
					{
						value.Person = this;
						this._BusinessEntityId = value.BusinessEntityId;
					}
					else
					{
						this._BusinessEntityId = default(int);
					}
					this.SendPropertyChanged("BusinessEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserClaims(UserClaim entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_UserClaims(UserClaim entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_UserLoginProviders(UserLoginProvider entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_UserLoginProviders(UserLoginProvider entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="RoleSecurity.UserClaim")]
	public partial class UserClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserClaimId;
		
		private System.Nullable<int> _UserId;
		
		private string _ClaimValue;
		
		private string _ClaimType;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserClaimIdChanging(int value);
    partial void OnUserClaimIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public UserClaim()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserClaimId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserClaimId
		{
			get
			{
				return this._UserClaimId;
			}
			set
			{
				if ((this._UserClaimId != value))
				{
					this.OnUserClaimIdChanging(value);
					this.SendPropertyChanging();
					this._UserClaimId = value;
					this.SendPropertyChanged("UserClaimId");
					this.OnUserClaimIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(150)")]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NChar(150)")]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_UserClaim", Storage="_Person", ThisKey="UserId", OtherKey="BusinessEntityId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.UserClaims.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.UserClaims.Add(this);
						this._UserId = value.BusinessEntityId;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="RoleSecurity.UserLoginProvider")]
	public partial class UserLoginProvider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserLoginProviderId;
		
		private System.Nullable<int> _UserId;
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserLoginProviderIdChanging(int value);
    partial void OnUserLoginProviderIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public UserLoginProvider()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLoginProviderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserLoginProviderId
		{
			get
			{
				return this._UserLoginProviderId;
			}
			set
			{
				if ((this._UserLoginProviderId != value))
				{
					this.OnUserLoginProviderIdChanging(value);
					this.SendPropertyChanging();
					this._UserLoginProviderId = value;
					this.SendPropertyChanged("UserLoginProviderId");
					this.OnUserLoginProviderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(500)")]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(150)")]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_UserLoginProvider", Storage="_Person", ThisKey="UserId", OtherKey="BusinessEntityId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.UserLoginProviders.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.UserLoginProviders.Add(this);
						this._UserId = value.BusinessEntityId;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="RoleSecurity.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _Name;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<System.Guid> _RowGuid;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<PersonRole> _PersonRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnRowGuidChanging(System.Nullable<System.Guid> value);
    partial void OnRowGuidChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Role()
		{
			this._PersonRoles = new EntitySet<PersonRole>(new Action<PersonRole>(this.attach_PersonRoles), new Action<PersonRole>(this.detach_PersonRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_PersonRole", Storage="_PersonRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<PersonRole> PersonRoles
		{
			get
			{
				return this._PersonRoles;
			}
			set
			{
				this._PersonRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonRoles(PersonRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_PersonRoles(PersonRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="RoleSecurity.PersonRole")]
	public partial class PersonRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PersonRoleId;
		
		private System.Nullable<int> _RoleId;
		
		private System.Nullable<int> _PersonId;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Credential> _Credential;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonRoleIdChanging(int value);
    partial void OnPersonRoleIdChanged();
    partial void OnRoleIdChanging(System.Nullable<int> value);
    partial void OnRoleIdChanged();
    partial void OnPersonIdChanging(System.Nullable<int> value);
    partial void OnPersonIdChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public PersonRole()
		{
			this._Role = default(EntityRef<Role>);
			this._Credential = default(EntityRef<Credential>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonRoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PersonRoleId
		{
			get
			{
				return this._PersonRoleId;
			}
			set
			{
				if ((this._PersonRoleId != value))
				{
					this.OnPersonRoleIdChanging(value);
					this.SendPropertyChanging();
					this._PersonRoleId = value;
					this.SendPropertyChanged("PersonRoleId");
					this.OnPersonRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int")]
		public System.Nullable<int> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="Int")]
		public System.Nullable<int> PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._Credential.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_PersonRole", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.PersonRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.PersonRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Credential_PersonRole", Storage="_Credential", ThisKey="PersonId", OtherKey="BusinessEntityId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Credential Credential
		{
			get
			{
				return this._Credential.Entity;
			}
			set
			{
				Credential previousValue = this._Credential.Entity;
				if (((previousValue != value) 
							|| (this._Credential.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Credential.Entity = null;
						previousValue.PersonRoles.Remove(this);
					}
					this._Credential.Entity = value;
					if ((value != null))
					{
						value.PersonRoles.Add(this);
						this._PersonId = value.BusinessEntityId;
					}
					else
					{
						this._PersonId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Credential");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.Credential")]
	public partial class Credential : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityId;
		
		private string _Username;
		
		private string _PasswordHash;
		
		private string _PasswordSalt;
		
		private string _ActivationCode;
		
		private System.Nullable<bool> _IsActivated;
		
		private bool _IsActive;
		
		private System.Guid _RowGuid;
		
		private string _Email;
		
		private string _EmailConfirmationCode;
		
		private System.Nullable<bool> _EmailConfirmed;
		
		private string _PhoneNumber;
		
		private string _PhoneNumberConfirmationCode;
		
		private System.Nullable<bool> _PhoneNumberConfirmed;
		
		private System.Nullable<bool> _LockoutEnabled;
		
		private System.Nullable<bool> _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private System.Nullable<int> _AccessFailedCount;
		
		private System.DateTime _ModifiedDate;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<int> _ModifiedBy;
		
		private EntitySet<PersonRole> _PersonRoles;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIdChanging(int value);
    partial void OnBusinessEntityIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnActivationCodeChanging(string value);
    partial void OnActivationCodeChanged();
    partial void OnIsActivatedChanging(System.Nullable<bool> value);
    partial void OnIsActivatedChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmationCodeChanging(string value);
    partial void OnEmailConfirmationCodeChanged();
    partial void OnEmailConfirmedChanging(System.Nullable<bool> value);
    partial void OnEmailConfirmedChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmationCodeChanging(string value);
    partial void OnPhoneNumberConfirmationCodeChanged();
    partial void OnPhoneNumberConfirmedChanging(System.Nullable<bool> value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnLockoutEnabledChanging(System.Nullable<bool> value);
    partial void OnLockoutEnabledChanged();
    partial void OnTwoFactorEnabledChanging(System.Nullable<bool> value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnAccessFailedCountChanging(System.Nullable<int> value);
    partial void OnAccessFailedCountChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    #endregion
		
		public Credential()
		{
			this._PersonRoles = new EntitySet<PersonRole>(new Action<PersonRole>(this.attach_PersonRoles), new Action<PersonRole>(this.detach_PersonRoles));
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BusinessEntityId
		{
			get
			{
				return this._BusinessEntityId;
			}
			set
			{
				if ((this._BusinessEntityId != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessEntityIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityId = value;
					this.SendPropertyChanged("BusinessEntityId");
					this.OnBusinessEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(10)")]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationCode", DbType="NVarChar(128)")]
		public string ActivationCode
		{
			get
			{
				return this._ActivationCode;
			}
			set
			{
				if ((this._ActivationCode != value))
				{
					this.OnActivationCodeChanging(value);
					this.SendPropertyChanging();
					this._ActivationCode = value;
					this.SendPropertyChanged("ActivationCode");
					this.OnActivationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActivated", DbType="Bit")]
		public System.Nullable<bool> IsActivated
		{
			get
			{
				return this._IsActivated;
			}
			set
			{
				if ((this._IsActivated != value))
				{
					this.OnIsActivatedChanging(value);
					this.SendPropertyChanging();
					this._IsActivated = value;
					this.SendPropertyChanged("IsActivated");
					this.OnIsActivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmationCode", DbType="NVarChar(150)")]
		public string EmailConfirmationCode
		{
			get
			{
				return this._EmailConfirmationCode;
			}
			set
			{
				if ((this._EmailConfirmationCode != value))
				{
					this.OnEmailConfirmationCodeChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmationCode = value;
					this.SendPropertyChanged("EmailConfirmationCode");
					this.OnEmailConfirmationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit")]
		public System.Nullable<bool> EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmationCode", DbType="NVarChar(150)")]
		public string PhoneNumberConfirmationCode
		{
			get
			{
				return this._PhoneNumberConfirmationCode;
			}
			set
			{
				if ((this._PhoneNumberConfirmationCode != value))
				{
					this.OnPhoneNumberConfirmationCodeChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmationCode = value;
					this.SendPropertyChanged("PhoneNumberConfirmationCode");
					this.OnPhoneNumberConfirmationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit")]
		public System.Nullable<bool> PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit")]
		public System.Nullable<bool> LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit")]
		public System.Nullable<bool> TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this.OnLockoutEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._LockoutEndDateUtc = value;
					this.SendPropertyChanged("LockoutEndDateUtc");
					this.OnLockoutEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int")]
		public System.Nullable<int> AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Credential_PersonRole", Storage="_PersonRoles", ThisKey="BusinessEntityId", OtherKey="PersonId")]
		public EntitySet<PersonRole> PersonRoles
		{
			get
			{
				return this._PersonRoles;
			}
			set
			{
				this._PersonRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Credential", Storage="_Person", ThisKey="BusinessEntityId", OtherKey="BusinessEntityId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Credential = null;
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Credential = this;
						this._BusinessEntityId = value.BusinessEntityId;
					}
					else
					{
						this._BusinessEntityId = default(int);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonRoles(PersonRole entity)
		{
			this.SendPropertyChanging();
			entity.Credential = this;
		}
		
		private void detach_PersonRoles(PersonRole entity)
		{
			this.SendPropertyChanging();
			entity.Credential = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.StudentGender")]
	public partial class StudentGender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentGenderID;
		
		private string _Name;
		
		private EntitySet<ExamPeriod> _ExamPeriods;
		
		private EntitySet<ExamCenter> _ExamCenters;
		
		private EntitySet<Exam> _Exams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentGenderIDChanging(int value);
    partial void OnStudentGenderIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public StudentGender()
		{
			this._ExamPeriods = new EntitySet<ExamPeriod>(new Action<ExamPeriod>(this.attach_ExamPeriods), new Action<ExamPeriod>(this.detach_ExamPeriods));
			this._ExamCenters = new EntitySet<ExamCenter>(new Action<ExamCenter>(this.attach_ExamCenters), new Action<ExamCenter>(this.detach_ExamCenters));
			this._Exams = new EntitySet<Exam>(new Action<Exam>(this.attach_Exams), new Action<Exam>(this.detach_Exams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentGenderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StudentGenderID
		{
			get
			{
				return this._StudentGenderID;
			}
			set
			{
				if ((this._StudentGenderID != value))
				{
					this.OnStudentGenderIDChanging(value);
					this.SendPropertyChanging();
					this._StudentGenderID = value;
					this.SendPropertyChanged("StudentGenderID");
					this.OnStudentGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentGender_ExamPeriod", Storage="_ExamPeriods", ThisKey="StudentGenderID", OtherKey="StudentGenderID")]
		public EntitySet<ExamPeriod> ExamPeriods
		{
			get
			{
				return this._ExamPeriods;
			}
			set
			{
				this._ExamPeriods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentGender_ExamCenter", Storage="_ExamCenters", ThisKey="StudentGenderID", OtherKey="StudentGenderID")]
		public EntitySet<ExamCenter> ExamCenters
		{
			get
			{
				return this._ExamCenters;
			}
			set
			{
				this._ExamCenters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentGender_Exam", Storage="_Exams", ThisKey="StudentGenderID", OtherKey="StudentGenderID")]
		public EntitySet<Exam> Exams
		{
			get
			{
				return this._Exams;
			}
			set
			{
				this._Exams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExamPeriods(ExamPeriod entity)
		{
			this.SendPropertyChanging();
			entity.StudentGender = this;
		}
		
		private void detach_ExamPeriods(ExamPeriod entity)
		{
			this.SendPropertyChanging();
			entity.StudentGender = null;
		}
		
		private void attach_ExamCenters(ExamCenter entity)
		{
			this.SendPropertyChanging();
			entity.StudentGender = this;
		}
		
		private void detach_ExamCenters(ExamCenter entity)
		{
			this.SendPropertyChanging();
			entity.StudentGender = null;
		}
		
		private void attach_Exams(Exam entity)
		{
			this.SendPropertyChanging();
			entity.StudentGender = this;
		}
		
		private void detach_Exams(Exam entity)
		{
			this.SendPropertyChanging();
			entity.StudentGender = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.PackagingType")]
	public partial class PackagingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackagingTypeID;
		
		private string _Name;
		
		private System.Nullable<int> _ExamModelCount;
		
		private System.Nullable<int> _BooksPerPackage;
		
		private System.Nullable<int> _Total;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackagingTypeIDChanging(int value);
    partial void OnPackagingTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExamModelCountChanging(System.Nullable<int> value);
    partial void OnExamModelCountChanged();
    partial void OnBooksPerPackageChanging(System.Nullable<int> value);
    partial void OnBooksPerPackageChanged();
    partial void OnTotalChanging(System.Nullable<int> value);
    partial void OnTotalChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public PackagingType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackagingTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PackagingTypeID
		{
			get
			{
				return this._PackagingTypeID;
			}
			set
			{
				if ((this._PackagingTypeID != value))
				{
					this.OnPackagingTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PackagingTypeID = value;
					this.SendPropertyChanged("PackagingTypeID");
					this.OnPackagingTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamModelCount", DbType="Int")]
		public System.Nullable<int> ExamModelCount
		{
			get
			{
				return this._ExamModelCount;
			}
			set
			{
				if ((this._ExamModelCount != value))
				{
					this.OnExamModelCountChanging(value);
					this.SendPropertyChanging();
					this._ExamModelCount = value;
					this.SendPropertyChanged("ExamModelCount");
					this.OnExamModelCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BooksPerPackage", DbType="Int")]
		public System.Nullable<int> BooksPerPackage
		{
			get
			{
				return this._BooksPerPackage;
			}
			set
			{
				if ((this._BooksPerPackage != value))
				{
					this.OnBooksPerPackageChanging(value);
					this.SendPropertyChanging();
					this._BooksPerPackage = value;
					this.SendPropertyChanged("BooksPerPackage");
					this.OnBooksPerPackageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Int")]
		public System.Nullable<int> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.OperationStatus")]
	public partial class OperationStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OperationStatusID;
		
		private string _Name;
		
		private EntitySet<BookPrintingOperation> _BookPrintingOperations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOperationStatusIDChanging(int value);
    partial void OnOperationStatusIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public OperationStatus()
		{
			this._BookPrintingOperations = new EntitySet<BookPrintingOperation>(new Action<BookPrintingOperation>(this.attach_BookPrintingOperations), new Action<BookPrintingOperation>(this.detach_BookPrintingOperations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationStatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OperationStatusID
		{
			get
			{
				return this._OperationStatusID;
			}
			set
			{
				if ((this._OperationStatusID != value))
				{
					this.OnOperationStatusIDChanging(value);
					this.SendPropertyChanging();
					this._OperationStatusID = value;
					this.SendPropertyChanged("OperationStatusID");
					this.OnOperationStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OperationStatus_BookPrintingOperation", Storage="_BookPrintingOperations", ThisKey="OperationStatusID", OtherKey="OperationStatusID")]
		public EntitySet<BookPrintingOperation> BookPrintingOperations
		{
			get
			{
				return this._BookPrintingOperations;
			}
			set
			{
				this._BookPrintingOperations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookPrintingOperations(BookPrintingOperation entity)
		{
			this.SendPropertyChanging();
			entity.OperationStatus = this;
		}
		
		private void detach_BookPrintingOperations(BookPrintingOperation entity)
		{
			this.SendPropertyChanging();
			entity.OperationStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.ExamType")]
	public partial class ExamType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExaminationTypeID;
		
		private string _Name;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<ExamSpeciality> _ExamSpecialities;
		
		private EntitySet<ExamPeriod> _ExamPeriods;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExaminationTypeIDChanging(int value);
    partial void OnExaminationTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ExamType()
		{
			this._ExamSpecialities = new EntitySet<ExamSpeciality>(new Action<ExamSpeciality>(this.attach_ExamSpecialities), new Action<ExamSpeciality>(this.detach_ExamSpecialities));
			this._ExamPeriods = new EntitySet<ExamPeriod>(new Action<ExamPeriod>(this.attach_ExamPeriods), new Action<ExamPeriod>(this.detach_ExamPeriods));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExaminationTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExaminationTypeID
		{
			get
			{
				return this._ExaminationTypeID;
			}
			set
			{
				if ((this._ExaminationTypeID != value))
				{
					this.OnExaminationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ExaminationTypeID = value;
					this.SendPropertyChanged("ExaminationTypeID");
					this.OnExaminationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamType_ExamSpeciality", Storage="_ExamSpecialities", ThisKey="ExaminationTypeID", OtherKey="ExamTypeID")]
		public EntitySet<ExamSpeciality> ExamSpecialities
		{
			get
			{
				return this._ExamSpecialities;
			}
			set
			{
				this._ExamSpecialities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamType_ExamPeriod", Storage="_ExamPeriods", ThisKey="ExaminationTypeID", OtherKey="ExamTypeID")]
		public EntitySet<ExamPeriod> ExamPeriods
		{
			get
			{
				return this._ExamPeriods;
			}
			set
			{
				this._ExamPeriods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExamSpecialities(ExamSpeciality entity)
		{
			this.SendPropertyChanging();
			entity.ExamType = this;
		}
		
		private void detach_ExamSpecialities(ExamSpeciality entity)
		{
			this.SendPropertyChanging();
			entity.ExamType = null;
		}
		
		private void attach_ExamPeriods(ExamPeriod entity)
		{
			this.SendPropertyChanging();
			entity.ExamType = this;
		}
		
		private void detach_ExamPeriods(ExamPeriod entity)
		{
			this.SendPropertyChanging();
			entity.ExamType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.ExamSpeciality")]
	public partial class ExamSpeciality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamSpecialityID;
		
		private string _Name;
		
		private System.Nullable<int> _ExamTypeID;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<Exam> _Exams;
		
		private EntityRef<ExamType> _ExamType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamSpecialityIDChanging(int value);
    partial void OnExamSpecialityIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExamTypeIDChanging(System.Nullable<int> value);
    partial void OnExamTypeIDChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ExamSpeciality()
		{
			this._Exams = new EntitySet<Exam>(new Action<Exam>(this.attach_Exams), new Action<Exam>(this.detach_Exams));
			this._ExamType = default(EntityRef<ExamType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamSpecialityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExamSpecialityID
		{
			get
			{
				return this._ExamSpecialityID;
			}
			set
			{
				if ((this._ExamSpecialityID != value))
				{
					this.OnExamSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._ExamSpecialityID = value;
					this.SendPropertyChanged("ExamSpecialityID");
					this.OnExamSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamTypeID", DbType="Int")]
		public System.Nullable<int> ExamTypeID
		{
			get
			{
				return this._ExamTypeID;
			}
			set
			{
				if ((this._ExamTypeID != value))
				{
					if (this._ExamType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ExamTypeID = value;
					this.SendPropertyChanged("ExamTypeID");
					this.OnExamTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamSpeciality_Exam", Storage="_Exams", ThisKey="ExamSpecialityID", OtherKey="ExamSpecialityID")]
		public EntitySet<Exam> Exams
		{
			get
			{
				return this._Exams;
			}
			set
			{
				this._Exams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamType_ExamSpeciality", Storage="_ExamType", ThisKey="ExamTypeID", OtherKey="ExaminationTypeID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ExamType ExamType
		{
			get
			{
				return this._ExamType.Entity;
			}
			set
			{
				ExamType previousValue = this._ExamType.Entity;
				if (((previousValue != value) 
							|| (this._ExamType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExamType.Entity = null;
						previousValue.ExamSpecialities.Remove(this);
					}
					this._ExamType.Entity = value;
					if ((value != null))
					{
						value.ExamSpecialities.Add(this);
						this._ExamTypeID = value.ExaminationTypeID;
					}
					else
					{
						this._ExamTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExamType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Exams(Exam entity)
		{
			this.SendPropertyChanging();
			entity.ExamSpeciality = this;
		}
		
		private void detach_Exams(Exam entity)
		{
			this.SendPropertyChanging();
			entity.ExamSpeciality = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.ExamPeriod")]
	public partial class ExamPeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamPeriodID;
		
		private string _Name;
		
		private System.Nullable<int> _ExamTypeID;
		
		private System.Nullable<int> _ExamYear;
		
		private System.Nullable<int> _StudentGenderID;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private EntityRef<ExamType> _ExamType;
		
		private EntityRef<StudentGender> _StudentGender;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamPeriodIDChanging(int value);
    partial void OnExamPeriodIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExamTypeIDChanging(System.Nullable<int> value);
    partial void OnExamTypeIDChanged();
    partial void OnExamYearChanging(System.Nullable<int> value);
    partial void OnExamYearChanged();
    partial void OnStudentGenderIDChanging(System.Nullable<int> value);
    partial void OnStudentGenderIDChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public ExamPeriod()
		{
			this._ExamType = default(EntityRef<ExamType>);
			this._StudentGender = default(EntityRef<StudentGender>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamPeriodID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExamPeriodID
		{
			get
			{
				return this._ExamPeriodID;
			}
			set
			{
				if ((this._ExamPeriodID != value))
				{
					this.OnExamPeriodIDChanging(value);
					this.SendPropertyChanging();
					this._ExamPeriodID = value;
					this.SendPropertyChanged("ExamPeriodID");
					this.OnExamPeriodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamTypeID", DbType="Int")]
		public System.Nullable<int> ExamTypeID
		{
			get
			{
				return this._ExamTypeID;
			}
			set
			{
				if ((this._ExamTypeID != value))
				{
					if (this._ExamType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ExamTypeID = value;
					this.SendPropertyChanged("ExamTypeID");
					this.OnExamTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamYear", DbType="Int")]
		public System.Nullable<int> ExamYear
		{
			get
			{
				return this._ExamYear;
			}
			set
			{
				if ((this._ExamYear != value))
				{
					this.OnExamYearChanging(value);
					this.SendPropertyChanging();
					this._ExamYear = value;
					this.SendPropertyChanged("ExamYear");
					this.OnExamYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentGenderID", DbType="Int")]
		public System.Nullable<int> StudentGenderID
		{
			get
			{
				return this._StudentGenderID;
			}
			set
			{
				if ((this._StudentGenderID != value))
				{
					if (this._StudentGender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentGenderIDChanging(value);
					this.SendPropertyChanging();
					this._StudentGenderID = value;
					this.SendPropertyChanged("StudentGenderID");
					this.OnStudentGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamType_ExamPeriod", Storage="_ExamType", ThisKey="ExamTypeID", OtherKey="ExaminationTypeID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ExamType ExamType
		{
			get
			{
				return this._ExamType.Entity;
			}
			set
			{
				ExamType previousValue = this._ExamType.Entity;
				if (((previousValue != value) 
							|| (this._ExamType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExamType.Entity = null;
						previousValue.ExamPeriods.Remove(this);
					}
					this._ExamType.Entity = value;
					if ((value != null))
					{
						value.ExamPeriods.Add(this);
						this._ExamTypeID = value.ExaminationTypeID;
					}
					else
					{
						this._ExamTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExamType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentGender_ExamPeriod", Storage="_StudentGender", ThisKey="StudentGenderID", OtherKey="StudentGenderID", IsForeignKey=true)]
		public StudentGender StudentGender
		{
			get
			{
				return this._StudentGender.Entity;
			}
			set
			{
				StudentGender previousValue = this._StudentGender.Entity;
				if (((previousValue != value) 
							|| (this._StudentGender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentGender.Entity = null;
						previousValue.ExamPeriods.Remove(this);
					}
					this._StudentGender.Entity = value;
					if ((value != null))
					{
						value.ExamPeriods.Add(this);
						this._StudentGenderID = value.StudentGenderID;
					}
					else
					{
						this._StudentGenderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StudentGender");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.BookPrintingOperation")]
	public partial class BookPrintingOperation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookPrintingOperationID;
		
		private string _Name;
		
		private System.Nullable<int> _ExamID;
		
		private System.Nullable<int> _PrintsForOneModel;
		
		private System.Nullable<int> _ExamsNeededForA3;
		
		private System.Nullable<int> _ExamsNeededForA4;
		
		private System.Nullable<int> _ExamsNeededForCD;
		
		private System.Nullable<int> _OperationStatusID;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<OperationStatus> _OperationStatus;
		
		private EntityRef<Exam> _Exam;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookPrintingOperationIDChanging(int value);
    partial void OnBookPrintingOperationIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExamIDChanging(System.Nullable<int> value);
    partial void OnExamIDChanged();
    partial void OnPrintsForOneModelChanging(System.Nullable<int> value);
    partial void OnPrintsForOneModelChanged();
    partial void OnExamsNeededForA3Changing(System.Nullable<int> value);
    partial void OnExamsNeededForA3Changed();
    partial void OnExamsNeededForA4Changing(System.Nullable<int> value);
    partial void OnExamsNeededForA4Changed();
    partial void OnExamsNeededForCDChanging(System.Nullable<int> value);
    partial void OnExamsNeededForCDChanged();
    partial void OnOperationStatusIDChanging(System.Nullable<int> value);
    partial void OnOperationStatusIDChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public BookPrintingOperation()
		{
			this._OperationStatus = default(EntityRef<OperationStatus>);
			this._Exam = default(EntityRef<Exam>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPrintingOperationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookPrintingOperationID
		{
			get
			{
				return this._BookPrintingOperationID;
			}
			set
			{
				if ((this._BookPrintingOperationID != value))
				{
					this.OnBookPrintingOperationIDChanging(value);
					this.SendPropertyChanging();
					this._BookPrintingOperationID = value;
					this.SendPropertyChanged("BookPrintingOperationID");
					this.OnBookPrintingOperationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamID", DbType="Int")]
		public System.Nullable<int> ExamID
		{
			get
			{
				return this._ExamID;
			}
			set
			{
				if ((this._ExamID != value))
				{
					if (this._Exam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamIDChanging(value);
					this.SendPropertyChanging();
					this._ExamID = value;
					this.SendPropertyChanged("ExamID");
					this.OnExamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintsForOneModel", DbType="Int")]
		public System.Nullable<int> PrintsForOneModel
		{
			get
			{
				return this._PrintsForOneModel;
			}
			set
			{
				if ((this._PrintsForOneModel != value))
				{
					this.OnPrintsForOneModelChanging(value);
					this.SendPropertyChanging();
					this._PrintsForOneModel = value;
					this.SendPropertyChanged("PrintsForOneModel");
					this.OnPrintsForOneModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamsNeededForA3", DbType="Int")]
		public System.Nullable<int> ExamsNeededForA3
		{
			get
			{
				return this._ExamsNeededForA3;
			}
			set
			{
				if ((this._ExamsNeededForA3 != value))
				{
					this.OnExamsNeededForA3Changing(value);
					this.SendPropertyChanging();
					this._ExamsNeededForA3 = value;
					this.SendPropertyChanged("ExamsNeededForA3");
					this.OnExamsNeededForA3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamsNeededForA4", DbType="Int")]
		public System.Nullable<int> ExamsNeededForA4
		{
			get
			{
				return this._ExamsNeededForA4;
			}
			set
			{
				if ((this._ExamsNeededForA4 != value))
				{
					this.OnExamsNeededForA4Changing(value);
					this.SendPropertyChanging();
					this._ExamsNeededForA4 = value;
					this.SendPropertyChanged("ExamsNeededForA4");
					this.OnExamsNeededForA4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamsNeededForCD", DbType="Int")]
		public System.Nullable<int> ExamsNeededForCD
		{
			get
			{
				return this._ExamsNeededForCD;
			}
			set
			{
				if ((this._ExamsNeededForCD != value))
				{
					this.OnExamsNeededForCDChanging(value);
					this.SendPropertyChanging();
					this._ExamsNeededForCD = value;
					this.SendPropertyChanged("ExamsNeededForCD");
					this.OnExamsNeededForCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationStatusID", DbType="Int")]
		public System.Nullable<int> OperationStatusID
		{
			get
			{
				return this._OperationStatusID;
			}
			set
			{
				if ((this._OperationStatusID != value))
				{
					if (this._OperationStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperationStatusIDChanging(value);
					this.SendPropertyChanging();
					this._OperationStatusID = value;
					this.SendPropertyChanged("OperationStatusID");
					this.OnOperationStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OperationStatus_BookPrintingOperation", Storage="_OperationStatus", ThisKey="OperationStatusID", OtherKey="OperationStatusID", IsForeignKey=true)]
		public OperationStatus OperationStatus
		{
			get
			{
				return this._OperationStatus.Entity;
			}
			set
			{
				OperationStatus previousValue = this._OperationStatus.Entity;
				if (((previousValue != value) 
							|| (this._OperationStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OperationStatus.Entity = null;
						previousValue.BookPrintingOperations.Remove(this);
					}
					this._OperationStatus.Entity = value;
					if ((value != null))
					{
						value.BookPrintingOperations.Add(this);
						this._OperationStatusID = value.OperationStatusID;
					}
					else
					{
						this._OperationStatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OperationStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_BookPrintingOperation", Storage="_Exam", ThisKey="ExamID", OtherKey="ExamID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Exam Exam
		{
			get
			{
				return this._Exam.Entity;
			}
			set
			{
				Exam previousValue = this._Exam.Entity;
				if (((previousValue != value) 
							|| (this._Exam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exam.Entity = null;
						previousValue.BookPrintingOperations.Remove(this);
					}
					this._Exam.Entity = value;
					if ((value != null))
					{
						value.BookPrintingOperations.Add(this);
						this._ExamID = value.ExamID;
					}
					else
					{
						this._ExamID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Exam");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.BookPackingOperation")]
	public partial class BookPackingOperation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookPackingOperationID;
		
		private string _Name;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookPackingOperationIDChanging(int value);
    partial void OnBookPackingOperationIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public BookPackingOperation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPackingOperationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BookPackingOperationID
		{
			get
			{
				return this._BookPackingOperationID;
			}
			set
			{
				if ((this._BookPackingOperationID != value))
				{
					this.OnBookPackingOperationIDChanging(value);
					this.SendPropertyChanging();
					this._BookPackingOperationID = value;
					this.SendPropertyChanged("BookPackingOperationID");
					this.OnBookPackingOperationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.CountryRegion")]
	public partial class CountryRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CountryRegionCode;
		
		private string _Name;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<StateProvince> _StateProvinces;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryRegionCodeChanging(string value);
    partial void OnCountryRegionCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public CountryRegion()
		{
			this._StateProvinces = new EntitySet<StateProvince>(new Action<StateProvince>(this.attach_StateProvinces), new Action<StateProvince>(this.detach_StateProvinces));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryRegionCode", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CountryRegionCode
		{
			get
			{
				return this._CountryRegionCode;
			}
			set
			{
				if ((this._CountryRegionCode != value))
				{
					this.OnCountryRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryRegionCode = value;
					this.SendPropertyChanged("CountryRegionCode");
					this.OnCountryRegionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryRegion_StateProvince", Storage="_StateProvinces", ThisKey="CountryRegionCode", OtherKey="CountryRegionCode")]
		public EntitySet<StateProvince> StateProvinces
		{
			get
			{
				return this._StateProvinces;
			}
			set
			{
				this._StateProvinces.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StateProvinces(StateProvince entity)
		{
			this.SendPropertyChanging();
			entity.CountryRegion = this;
		}
		
		private void detach_StateProvinces(StateProvince entity)
		{
			this.SendPropertyChanging();
			entity.CountryRegion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.StateProvince")]
	public partial class StateProvince : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateProvinceId;
		
		private string _StateProvinceCode;
		
		private string _CountryRegionCode;
		
		private System.Nullable<bool> _IsOnlyStateProvince;
		
		private string _Name;
		
		private System.Guid _RowGuid;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<City> _Cities;
		
		private EntityRef<CountryRegion> _CountryRegion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateProvinceIdChanging(int value);
    partial void OnStateProvinceIdChanged();
    partial void OnStateProvinceCodeChanging(string value);
    partial void OnStateProvinceCodeChanged();
    partial void OnCountryRegionCodeChanging(string value);
    partial void OnCountryRegionCodeChanged();
    partial void OnIsOnlyStateProvinceChanging(System.Nullable<bool> value);
    partial void OnIsOnlyStateProvinceChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public StateProvince()
		{
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			this._CountryRegion = default(EntityRef<CountryRegion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateProvinceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StateProvinceId
		{
			get
			{
				return this._StateProvinceId;
			}
			set
			{
				if ((this._StateProvinceId != value))
				{
					this.OnStateProvinceIdChanging(value);
					this.SendPropertyChanging();
					this._StateProvinceId = value;
					this.SendPropertyChanged("StateProvinceId");
					this.OnStateProvinceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateProvinceCode", DbType="NChar(3)")]
		public string StateProvinceCode
		{
			get
			{
				return this._StateProvinceCode;
			}
			set
			{
				if ((this._StateProvinceCode != value))
				{
					this.OnStateProvinceCodeChanging(value);
					this.SendPropertyChanging();
					this._StateProvinceCode = value;
					this.SendPropertyChanged("StateProvinceCode");
					this.OnStateProvinceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryRegionCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string CountryRegionCode
		{
			get
			{
				return this._CountryRegionCode;
			}
			set
			{
				if ((this._CountryRegionCode != value))
				{
					if (this._CountryRegion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryRegionCode = value;
					this.SendPropertyChanged("CountryRegionCode");
					this.OnCountryRegionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnlyStateProvince", DbType="Bit")]
		public System.Nullable<bool> IsOnlyStateProvince
		{
			get
			{
				return this._IsOnlyStateProvince;
			}
			set
			{
				if ((this._IsOnlyStateProvince != value))
				{
					this.OnIsOnlyStateProvinceChanging(value);
					this.SendPropertyChanging();
					this._IsOnlyStateProvince = value;
					this.SendPropertyChanged("IsOnlyStateProvince");
					this.OnIsOnlyStateProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateProvince_City", Storage="_Cities", ThisKey="StateProvinceId", OtherKey="StateRegionID")]
		public EntitySet<City> Cities
		{
			get
			{
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryRegion_StateProvince", Storage="_CountryRegion", ThisKey="CountryRegionCode", OtherKey="CountryRegionCode", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CountryRegion CountryRegion
		{
			get
			{
				return this._CountryRegion.Entity;
			}
			set
			{
				CountryRegion previousValue = this._CountryRegion.Entity;
				if (((previousValue != value) 
							|| (this._CountryRegion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CountryRegion.Entity = null;
						previousValue.StateProvinces.Remove(this);
					}
					this._CountryRegion.Entity = value;
					if ((value != null))
					{
						value.StateProvinces.Add(this);
						this._CountryRegionCode = value.CountryRegionCode;
					}
					else
					{
						this._CountryRegionCode = default(string);
					}
					this.SendPropertyChanged("CountryRegion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.StateProvince = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.StateProvince = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CityID;
		
		private System.Nullable<int> _StateRegionID;
		
		private string _Name;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<ExamCenter> _ExamCenters;
		
		private EntityRef<StateProvince> _StateProvince;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnStateRegionIDChanging(System.Nullable<int> value);
    partial void OnStateRegionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public City()
		{
			this._ExamCenters = new EntitySet<ExamCenter>(new Action<ExamCenter>(this.attach_ExamCenters), new Action<ExamCenter>(this.detach_ExamCenters));
			this._StateProvince = default(EntityRef<StateProvince>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateRegionID", DbType="Int")]
		public System.Nullable<int> StateRegionID
		{
			get
			{
				return this._StateRegionID;
			}
			set
			{
				if ((this._StateRegionID != value))
				{
					if (this._StateProvince.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateRegionIDChanging(value);
					this.SendPropertyChanging();
					this._StateRegionID = value;
					this.SendPropertyChanged("StateRegionID");
					this.OnStateRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_ExamCenter", Storage="_ExamCenters", ThisKey="CityID", OtherKey="CityID")]
		public EntitySet<ExamCenter> ExamCenters
		{
			get
			{
				return this._ExamCenters;
			}
			set
			{
				this._ExamCenters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateProvince_City", Storage="_StateProvince", ThisKey="StateRegionID", OtherKey="StateProvinceId", IsForeignKey=true, DeleteRule="CASCADE")]
		public StateProvince StateProvince
		{
			get
			{
				return this._StateProvince.Entity;
			}
			set
			{
				StateProvince previousValue = this._StateProvince.Entity;
				if (((previousValue != value) 
							|| (this._StateProvince.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StateProvince.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._StateProvince.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._StateRegionID = value.StateProvinceId;
					}
					else
					{
						this._StateRegionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StateProvince");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExamCenters(ExamCenter entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_ExamCenters(ExamCenter entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.ExamCenter")]
	public partial class ExamCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExaminationCenterID;
		
		private string _CenterCode;
		
		private string _Name;
		
		private System.Nullable<int> _CityID;
		
		private System.Nullable<int> _StudentGenderID;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<City> _City;
		
		private EntityRef<StudentGender> _StudentGender;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExaminationCenterIDChanging(int value);
    partial void OnExaminationCenterIDChanged();
    partial void OnCenterCodeChanging(string value);
    partial void OnCenterCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCityIDChanging(System.Nullable<int> value);
    partial void OnCityIDChanged();
    partial void OnStudentGenderIDChanging(System.Nullable<int> value);
    partial void OnStudentGenderIDChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ExamCenter()
		{
			this._City = default(EntityRef<City>);
			this._StudentGender = default(EntityRef<StudentGender>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExaminationCenterID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExaminationCenterID
		{
			get
			{
				return this._ExaminationCenterID;
			}
			set
			{
				if ((this._ExaminationCenterID != value))
				{
					this.OnExaminationCenterIDChanging(value);
					this.SendPropertyChanging();
					this._ExaminationCenterID = value;
					this.SendPropertyChanged("ExaminationCenterID");
					this.OnExaminationCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterCode", DbType="NVarChar(12)")]
		public string CenterCode
		{
			get
			{
				return this._CenterCode;
			}
			set
			{
				if ((this._CenterCode != value))
				{
					this.OnCenterCodeChanging(value);
					this.SendPropertyChanging();
					this._CenterCode = value;
					this.SendPropertyChanged("CenterCode");
					this.OnCenterCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int")]
		public System.Nullable<int> CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentGenderID", DbType="Int")]
		public System.Nullable<int> StudentGenderID
		{
			get
			{
				return this._StudentGenderID;
			}
			set
			{
				if ((this._StudentGenderID != value))
				{
					if (this._StudentGender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentGenderIDChanging(value);
					this.SendPropertyChanging();
					this._StudentGenderID = value;
					this.SendPropertyChanged("StudentGenderID");
					this.OnStudentGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_ExamCenter", Storage="_City", ThisKey="CityID", OtherKey="CityID", IsForeignKey=true, DeleteRule="CASCADE")]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.ExamCenters.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.ExamCenters.Add(this);
						this._CityID = value.CityID;
					}
					else
					{
						this._CityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentGender_ExamCenter", Storage="_StudentGender", ThisKey="StudentGenderID", OtherKey="StudentGenderID", IsForeignKey=true)]
		public StudentGender StudentGender
		{
			get
			{
				return this._StudentGender.Entity;
			}
			set
			{
				StudentGender previousValue = this._StudentGender.Entity;
				if (((previousValue != value) 
							|| (this._StudentGender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentGender.Entity = null;
						previousValue.ExamCenters.Remove(this);
					}
					this._StudentGender.Entity = value;
					if ((value != null))
					{
						value.ExamCenters.Add(this);
						this._StudentGenderID = value.StudentGenderID;
					}
					else
					{
						this._StudentGenderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StudentGender");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewExamCenter")]
	public partial class ViewExamCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExaminationCenterID;
		
		private string _CenterCode;
		
		private string _Name;
		
		private System.Nullable<int> _CityID;
		
		private System.Nullable<int> _StudentGenderID;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _StateRegionID;
		
		private string _CityName;
		
		private string _StateProvinceName;
		
		private string _CountryName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExaminationCenterIDChanging(int value);
    partial void OnExaminationCenterIDChanged();
    partial void OnCenterCodeChanging(string value);
    partial void OnCenterCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCityIDChanging(System.Nullable<int> value);
    partial void OnCityIDChanged();
    partial void OnStudentGenderIDChanging(System.Nullable<int> value);
    partial void OnStudentGenderIDChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnStateRegionIDChanging(System.Nullable<int> value);
    partial void OnStateRegionIDChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnStateProvinceNameChanging(string value);
    partial void OnStateProvinceNameChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    #endregion
		
		public ViewExamCenter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExaminationCenterID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExaminationCenterID
		{
			get
			{
				return this._ExaminationCenterID;
			}
			set
			{
				if ((this._ExaminationCenterID != value))
				{
					this.OnExaminationCenterIDChanging(value);
					this.SendPropertyChanging();
					this._ExaminationCenterID = value;
					this.SendPropertyChanged("ExaminationCenterID");
					this.OnExaminationCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterCode", DbType="NVarChar(12)")]
		public string CenterCode
		{
			get
			{
				return this._CenterCode;
			}
			set
			{
				if ((this._CenterCode != value))
				{
					this.OnCenterCodeChanging(value);
					this.SendPropertyChanging();
					this._CenterCode = value;
					this.SendPropertyChanged("CenterCode");
					this.OnCenterCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int")]
		public System.Nullable<int> CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentGenderID", DbType="Int")]
		public System.Nullable<int> StudentGenderID
		{
			get
			{
				return this._StudentGenderID;
			}
			set
			{
				if ((this._StudentGenderID != value))
				{
					this.OnStudentGenderIDChanging(value);
					this.SendPropertyChanging();
					this._StudentGenderID = value;
					this.SendPropertyChanged("StudentGenderID");
					this.OnStudentGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateRegionID", DbType="Int", IsDbGenerated=true)]
		public System.Nullable<int> StateRegionID
		{
			get
			{
				return this._StateRegionID;
			}
			set
			{
				if ((this._StateRegionID != value))
				{
					this.OnStateRegionIDChanging(value);
					this.SendPropertyChanging();
					this._StateRegionID = value;
					this.SendPropertyChanged("StateRegionID");
					this.OnStateRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="NVarChar(50)", IsDbGenerated=true)]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateProvinceName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsDbGenerated=true)]
		public string StateProvinceName
		{
			get
			{
				return this._StateProvinceName;
			}
			set
			{
				if ((this._StateProvinceName != value))
				{
					this.OnStateProvinceNameChanging(value);
					this.SendPropertyChanging();
					this._StateProvinceName = value;
					this.SendPropertyChanged("StateProvinceName");
					this.OnStateProvinceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsDbGenerated=true)]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.ExamModel")]
	public partial class ExamModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamModelID;
		
		private string _Name;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamModelIDChanging(int value);
    partial void OnExamModelIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ExamModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamModelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExamModelID
		{
			get
			{
				return this._ExamModelID;
			}
			set
			{
				if ((this._ExamModelID != value))
				{
					this.OnExamModelIDChanging(value);
					this.SendPropertyChanging();
					this._ExamModelID = value;
					this.SendPropertyChanged("ExamModelID");
					this.OnExamModelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExamView")]
	public partial class ExamView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamID;
		
		private string _ExamCode;
		
		private string _Name;
		
		private System.Nullable<int> _ExamSpecialityID;
		
		private System.Nullable<int> _StudentGenderID;
		
		private System.Nullable<int> _NumberofSections;
		
		private System.Nullable<int> _NumberofPages;
		
		private System.Nullable<int> _TimeForSection;
		
		private string _Notes;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _ExamSpecialityName;
		
		private string _ExamTypeName;
		
		private System.Nullable<int> _ExamTypeID;
		
		private string _StudentGenderName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamIDChanging(int value);
    partial void OnExamIDChanged();
    partial void OnExamCodeChanging(string value);
    partial void OnExamCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExamSpecialityIDChanging(System.Nullable<int> value);
    partial void OnExamSpecialityIDChanged();
    partial void OnStudentGenderIDChanging(System.Nullable<int> value);
    partial void OnStudentGenderIDChanged();
    partial void OnNumberofSectionsChanging(System.Nullable<int> value);
    partial void OnNumberofSectionsChanged();
    partial void OnNumberofPagesChanging(System.Nullable<int> value);
    partial void OnNumberofPagesChanged();
    partial void OnTimeForSectionChanging(System.Nullable<int> value);
    partial void OnTimeForSectionChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnExamSpecialityNameChanging(string value);
    partial void OnExamSpecialityNameChanged();
    partial void OnExamTypeNameChanging(string value);
    partial void OnExamTypeNameChanged();
    partial void OnExamTypeIDChanging(System.Nullable<int> value);
    partial void OnExamTypeIDChanged();
    partial void OnStudentGenderNameChanging(string value);
    partial void OnStudentGenderNameChanged();
    #endregion
		
		public ExamView()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExamID
		{
			get
			{
				return this._ExamID;
			}
			set
			{
				if ((this._ExamID != value))
				{
					this.OnExamIDChanging(value);
					this.SendPropertyChanging();
					this._ExamID = value;
					this.SendPropertyChanged("ExamID");
					this.OnExamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamCode", DbType="NVarChar(12)")]
		public string ExamCode
		{
			get
			{
				return this._ExamCode;
			}
			set
			{
				if ((this._ExamCode != value))
				{
					this.OnExamCodeChanging(value);
					this.SendPropertyChanging();
					this._ExamCode = value;
					this.SendPropertyChanged("ExamCode");
					this.OnExamCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamSpecialityID", DbType="Int")]
		public System.Nullable<int> ExamSpecialityID
		{
			get
			{
				return this._ExamSpecialityID;
			}
			set
			{
				if ((this._ExamSpecialityID != value))
				{
					this.OnExamSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._ExamSpecialityID = value;
					this.SendPropertyChanged("ExamSpecialityID");
					this.OnExamSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentGenderID", DbType="Int")]
		public System.Nullable<int> StudentGenderID
		{
			get
			{
				return this._StudentGenderID;
			}
			set
			{
				if ((this._StudentGenderID != value))
				{
					this.OnStudentGenderIDChanging(value);
					this.SendPropertyChanging();
					this._StudentGenderID = value;
					this.SendPropertyChanged("StudentGenderID");
					this.OnStudentGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberofSections", DbType="Int")]
		public System.Nullable<int> NumberofSections
		{
			get
			{
				return this._NumberofSections;
			}
			set
			{
				if ((this._NumberofSections != value))
				{
					this.OnNumberofSectionsChanging(value);
					this.SendPropertyChanging();
					this._NumberofSections = value;
					this.SendPropertyChanged("NumberofSections");
					this.OnNumberofSectionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberofPages", DbType="Int")]
		public System.Nullable<int> NumberofPages
		{
			get
			{
				return this._NumberofPages;
			}
			set
			{
				if ((this._NumberofPages != value))
				{
					this.OnNumberofPagesChanging(value);
					this.SendPropertyChanging();
					this._NumberofPages = value;
					this.SendPropertyChanged("NumberofPages");
					this.OnNumberofPagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeForSection", DbType="Int")]
		public System.Nullable<int> TimeForSection
		{
			get
			{
				return this._TimeForSection;
			}
			set
			{
				if ((this._TimeForSection != value))
				{
					this.OnTimeForSectionChanging(value);
					this.SendPropertyChanging();
					this._TimeForSection = value;
					this.SendPropertyChanged("TimeForSection");
					this.OnTimeForSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamSpecialityName", DbType="NVarChar(50)")]
		public string ExamSpecialityName
		{
			get
			{
				return this._ExamSpecialityName;
			}
			set
			{
				if ((this._ExamSpecialityName != value))
				{
					this.OnExamSpecialityNameChanging(value);
					this.SendPropertyChanging();
					this._ExamSpecialityName = value;
					this.SendPropertyChanged("ExamSpecialityName");
					this.OnExamSpecialityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamTypeName", DbType="NVarChar(50)")]
		public string ExamTypeName
		{
			get
			{
				return this._ExamTypeName;
			}
			set
			{
				if ((this._ExamTypeName != value))
				{
					this.OnExamTypeNameChanging(value);
					this.SendPropertyChanging();
					this._ExamTypeName = value;
					this.SendPropertyChanged("ExamTypeName");
					this.OnExamTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamTypeID", DbType="Int")]
		public System.Nullable<int> ExamTypeID
		{
			get
			{
				return this._ExamTypeID;
			}
			set
			{
				if ((this._ExamTypeID != value))
				{
					this.OnExamTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ExamTypeID = value;
					this.SendPropertyChanged("ExamTypeID");
					this.OnExamTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentGenderName", DbType="NVarChar(50)")]
		public string StudentGenderName
		{
			get
			{
				return this._StudentGenderName;
			}
			set
			{
				if ((this._StudentGenderName != value))
				{
					this.OnStudentGenderNameChanging(value);
					this.SendPropertyChanging();
					this._StudentGenderName = value;
					this.SendPropertyChanged("StudentGenderName");
					this.OnStudentGenderNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.PackageWeight")]
	public partial class PackageWeight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackageWeightID;
		
		private string _Name;
		
		private System.Nullable<decimal> _Weight;
		
		private System.Nullable<int> _PackageCode;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackageWeightIDChanging(int value);
    partial void OnPackageWeightIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnPackageCodeChanging(System.Nullable<int> value);
    partial void OnPackageCodeChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public PackageWeight()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageWeightID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PackageWeightID
		{
			get
			{
				return this._PackageWeightID;
			}
			set
			{
				if ((this._PackageWeightID != value))
				{
					this.OnPackageWeightIDChanging(value);
					this.SendPropertyChanging();
					this._PackageWeightID = value;
					this.SendPropertyChanged("PackageWeightID");
					this.OnPackageWeightIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageCode", DbType="Int")]
		public System.Nullable<int> PackageCode
		{
			get
			{
				return this._PackageCode;
			}
			set
			{
				if ((this._PackageCode != value))
				{
					this.OnPackageCodeChanging(value);
					this.SendPropertyChanging();
					this._PackageCode = value;
					this.SendPropertyChanged("PackageCode");
					this.OnPackageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PPM.Exam")]
	public partial class Exam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamID;
		
		private string _ExamCode;
		
		private string _Name;
		
		private System.Nullable<int> _ExamSpecialityID;
		
		private System.Nullable<int> _StudentGenderID;
		
		private System.Nullable<int> _NumberofSections;
		
		private System.Nullable<int> _NumberofPages;
		
		private System.Nullable<int> _TimeForSection;
		
		private string _Notes;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatorID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedByID;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<BookPrintingOperation> _BookPrintingOperations;
		
		private EntityRef<ExamSpeciality> _ExamSpeciality;
		
		private EntityRef<StudentGender> _StudentGender;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamIDChanging(int value);
    partial void OnExamIDChanged();
    partial void OnExamCodeChanging(string value);
    partial void OnExamCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExamSpecialityIDChanging(System.Nullable<int> value);
    partial void OnExamSpecialityIDChanged();
    partial void OnStudentGenderIDChanging(System.Nullable<int> value);
    partial void OnStudentGenderIDChanged();
    partial void OnNumberofSectionsChanging(System.Nullable<int> value);
    partial void OnNumberofSectionsChanged();
    partial void OnNumberofPagesChanging(System.Nullable<int> value);
    partial void OnNumberofPagesChanged();
    partial void OnTimeForSectionChanging(System.Nullable<int> value);
    partial void OnTimeForSectionChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatorIDChanging(System.Nullable<int> value);
    partial void OnCreatorIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByIDChanging(System.Nullable<int> value);
    partial void OnModifiedByIDChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Exam()
		{
			this._BookPrintingOperations = new EntitySet<BookPrintingOperation>(new Action<BookPrintingOperation>(this.attach_BookPrintingOperations), new Action<BookPrintingOperation>(this.detach_BookPrintingOperations));
			this._ExamSpeciality = default(EntityRef<ExamSpeciality>);
			this._StudentGender = default(EntityRef<StudentGender>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExamID
		{
			get
			{
				return this._ExamID;
			}
			set
			{
				if ((this._ExamID != value))
				{
					this.OnExamIDChanging(value);
					this.SendPropertyChanging();
					this._ExamID = value;
					this.SendPropertyChanged("ExamID");
					this.OnExamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamCode", DbType="NVarChar(12)")]
		public string ExamCode
		{
			get
			{
				return this._ExamCode;
			}
			set
			{
				if ((this._ExamCode != value))
				{
					this.OnExamCodeChanging(value);
					this.SendPropertyChanging();
					this._ExamCode = value;
					this.SendPropertyChanged("ExamCode");
					this.OnExamCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamSpecialityID", DbType="Int")]
		public System.Nullable<int> ExamSpecialityID
		{
			get
			{
				return this._ExamSpecialityID;
			}
			set
			{
				if ((this._ExamSpecialityID != value))
				{
					if (this._ExamSpeciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._ExamSpecialityID = value;
					this.SendPropertyChanged("ExamSpecialityID");
					this.OnExamSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentGenderID", DbType="Int")]
		public System.Nullable<int> StudentGenderID
		{
			get
			{
				return this._StudentGenderID;
			}
			set
			{
				if ((this._StudentGenderID != value))
				{
					if (this._StudentGender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentGenderIDChanging(value);
					this.SendPropertyChanging();
					this._StudentGenderID = value;
					this.SendPropertyChanged("StudentGenderID");
					this.OnStudentGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberofSections", DbType="Int")]
		public System.Nullable<int> NumberofSections
		{
			get
			{
				return this._NumberofSections;
			}
			set
			{
				if ((this._NumberofSections != value))
				{
					this.OnNumberofSectionsChanging(value);
					this.SendPropertyChanging();
					this._NumberofSections = value;
					this.SendPropertyChanged("NumberofSections");
					this.OnNumberofSectionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberofPages", DbType="Int")]
		public System.Nullable<int> NumberofPages
		{
			get
			{
				return this._NumberofPages;
			}
			set
			{
				if ((this._NumberofPages != value))
				{
					this.OnNumberofPagesChanging(value);
					this.SendPropertyChanging();
					this._NumberofPages = value;
					this.SendPropertyChanged("NumberofPages");
					this.OnNumberofPagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeForSection", DbType="Int")]
		public System.Nullable<int> TimeForSection
		{
			get
			{
				return this._TimeForSection;
			}
			set
			{
				if ((this._TimeForSection != value))
				{
					this.OnTimeForSectionChanging(value);
					this.SendPropertyChanging();
					this._TimeForSection = value;
					this.SendPropertyChanged("TimeForSection");
					this.OnTimeForSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int")]
		public System.Nullable<int> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByID", DbType="Int")]
		public System.Nullable<int> ModifiedByID
		{
			get
			{
				return this._ModifiedByID;
			}
			set
			{
				if ((this._ModifiedByID != value))
				{
					this.OnModifiedByIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByID = value;
					this.SendPropertyChanged("ModifiedByID");
					this.OnModifiedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_BookPrintingOperation", Storage="_BookPrintingOperations", ThisKey="ExamID", OtherKey="ExamID")]
		public EntitySet<BookPrintingOperation> BookPrintingOperations
		{
			get
			{
				return this._BookPrintingOperations;
			}
			set
			{
				this._BookPrintingOperations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExamSpeciality_Exam", Storage="_ExamSpeciality", ThisKey="ExamSpecialityID", OtherKey="ExamSpecialityID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ExamSpeciality ExamSpeciality
		{
			get
			{
				return this._ExamSpeciality.Entity;
			}
			set
			{
				ExamSpeciality previousValue = this._ExamSpeciality.Entity;
				if (((previousValue != value) 
							|| (this._ExamSpeciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExamSpeciality.Entity = null;
						previousValue.Exams.Remove(this);
					}
					this._ExamSpeciality.Entity = value;
					if ((value != null))
					{
						value.Exams.Add(this);
						this._ExamSpecialityID = value.ExamSpecialityID;
					}
					else
					{
						this._ExamSpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExamSpeciality");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentGender_Exam", Storage="_StudentGender", ThisKey="StudentGenderID", OtherKey="StudentGenderID", IsForeignKey=true)]
		public StudentGender StudentGender
		{
			get
			{
				return this._StudentGender.Entity;
			}
			set
			{
				StudentGender previousValue = this._StudentGender.Entity;
				if (((previousValue != value) 
							|| (this._StudentGender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentGender.Entity = null;
						previousValue.Exams.Remove(this);
					}
					this._StudentGender.Entity = value;
					if ((value != null))
					{
						value.Exams.Add(this);
						this._StudentGenderID = value.StudentGenderID;
					}
					else
					{
						this._StudentGenderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StudentGender");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookPrintingOperations(BookPrintingOperation entity)
		{
			this.SendPropertyChanging();
			entity.Exam = this;
		}
		
		private void detach_BookPrintingOperations(BookPrintingOperation entity)
		{
			this.SendPropertyChanging();
			entity.Exam = null;
		}
	}
}
#pragma warning restore 1591
