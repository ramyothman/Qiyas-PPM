@model Qiyas.BusinessLogicLayer.Entity.PPM.ExamCenterRequiredExam
@{

    ViewBag.Title = @Resources.MainResource.ShippingBagPrepareTitle;
}

<div class="page-title">
    <h1>
        @Resources.MainResource.ShippingBagPrepareTitle
    </h1>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="widget-container fluid-height clearfix">
            <div class="widget-content padded clearfix">

                @using (Html.BeginForm("SaveContainerRequest", "ExamCenterNeeds", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "packForm", @name = "packForm", @enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    if (ViewBag.HasError)
                    {
                        <div class="alert alert-danger">@ViewBag.NotifyMessage</div>
                    }
                    else if (!string.IsNullOrEmpty(ViewBag.NotifyMessage))
                    {
                        <div class="alert alert-success">@ViewBag.NotifyMessage</div>
                    }
                    <div class="col-lg-4 pull-right">
                        @Html.ValidationSummary("", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(m => m.ExamPeriodName, new { @class = "col-md-5  pull-right control-label" })
                            <div class="col-md-7  pull-right">
                                @Html.TextBoxFor(m => m.ExamPeriodName, new { @class = "form-control col-md-6" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ExamCenterName, new { @class = "col-md-5  pull-right control-label" })
                            <div class="col-md-7 pull-right">
                                @Html.TextBoxFor(m => m.ExamCenterName, new { @class = "form-control" })
                            </div>
                        </div>
                        <br /><br />
                        <hr /><br />
                        
                        <div class="form-group">
                            @Html.LabelFor(m => m.ShippingBagCode, new { @class = "col-md-5  pull-right control-label" })
                            <div class="col-md-4  pull-right">
                                @Html.TextBoxFor(m => m.ShippingBagCode, new { @class = "form-control", @Value = @ViewBag.ShippingBagSerial })
                            </div>
                            <div class="error" style="color: forestgreen;display:none;" id="bagExists">حقيبة صحيحة</div>
                            <div class="error" style="color: darkred;display:none;" id="bagDoesntExist">حقيبة غير مطابقة</div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.PackageCode, new { @class = "col-md-5  pull-right control-label" })
                            <div class="col-md-4  pull-right">
                                @Html.TextBoxFor(m => m.PackageCode, new { @class = "form-control" })
                            </div>
                            <div class="error" style="color: forestgreen;display:none;" id="packageExists">حزمة صحيحة</div>
                            <div class="error" style="color: darkred;display:none;" id="packageDoesntExist">الحزمة غير مطابقة</div>
                        </div>
                    </div>

                    <br /><br />
                    
                    
                        @Html.Action("ShippingBagItemsGridViewPartial")



                    <br /><br />
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="button" name="PrintShip" id="PrintShip" data-id="@Model.ExamCenterRequiredExamsID" value="طباعة ملصق" class="btn btn-default btn-primary" />

                            <input type="button" name="BackButton" id="BackButton" value="عودة" class="btn btn-default " />
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script type="text/javascript">
    $("#PrintShip").click(function () {
        var id = $(this).attr('data-id');
        //window.location = "@Url.Action("ShippingBagReport", "ExamCenterNeeds")" + "/" + id;
            window.open("@Url.Action("ShippingBagReport", "ExamCenterNeeds")" + "/" + id, "_blank");
        });

    $("#SaveContainer").click(function () {
        var form = $("form#packForm");
        form.attr("action", "@Url.Action("PrintShippingItems", "ExamCenterNeeds")");
        form.submit();
    });

    $("#ShippingBagCode").change(function () {
        var urlLink = "@Url.Action("ShippingBagAdd", "ExamCenterNeeds")";

        $.ajax({
            type: "POST",
            dataType: "json",
            data:  {
                item: $('#ShippingBagCode').val()
            },
            url: urlLink,
            success: function (data) {
                if (data == "exists") {
                    var shippingValue = $('#ShippingBagCode').val();
                    ShippingBagItemsGridView.PerformCallback({ ID: '-' + shippingValue});
                    $('#bagDoesntExist').hide();
                    $('#bagExists').show();
                }
                else {
                    $('#bagExists').hide();
                    $('#bagDoesntExist').show();
                }

            },
            error: function (data) {
                $('#bagExists').hide();
                $('#bagDoesntExist').show();
            }
        });
    });

    $("#PackageCode").change(function () {
        var urlLink = "@Url.Action("ShippingPackAdd", "ExamCenterNeeds")";

        $.ajax({
            type: "POST",
            dataType: "json",
            data:  {
                item: $('#PackageCode').val(),
                bag: $('#ShippingBagCode').val()
            },
            url: urlLink,
            success: function (data) {
                if (data == "exists") {
                    $('#PackageCode').val('');
                    ShippingBagItemsGridView.PerformCallback($('#ShippingBagCode').val());
                    $('#packageDoesntExist').hide();
                    $('#packageExists').fadeIn('slow', function () {
                        $(this).delay(5000).fadeOut('slow');
                    });
                }
                else {
                    $('#packageExists').hide();
                    $('#packageDoesntExist').show();
                }

            },
            error: function (data) {
                $('#packageExists').hide();
                $('#packageDoesntExist').show();
            }
        });
    });

    $("#BackButton").click(function (e) {
        e.preventDefault();
        window.location = "/ExamCenterNeeds";
        return false;
        @*var form = $("form#packForm");
            form.attr("action", "@Url.Action("PrinPacks", "BookPackingOperation", Qiyas.WebAdmin.Controllers.BookPackingOperationController.MainID)");
            form.submit();*@
    });


    $(document).ready(function () {


        $("form").bind("keypress", function (e) {
            if (e.keyCode == 13) {
                return false;
            }
        });

    });

    </script>
}